Script started on 2022-03-03 09:10:47-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="176" LINES="52"]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm 
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 87L, 2546B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  [31m0[m)

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[47;9H[35m'()[m[48;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[49;15H(greater-than ([36mcdr[m ls) v)))))

(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[52;159H1,1[11CTop[1;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  [95m0[m)

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[47;9H[38;5;224m'()[m[48;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[49;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[52;159H1,1[11CTop"lab5-sol.scm" 87L, 2546B[1;1H[?25h[?25l[9;9H[46m([14C)[m[52;159H9,24[9;24H[?25h[?25l[46m([m[7C([14C)[10;4H[46m)[m[52;159H10,[10;4H[?25h[?25l[52;149Hi[10;4H[52;149H [10;4H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,4[10CTop[10;4H[?25h[?25l)[10;4H[K[10;3H[46m)[m[52;162H3[10;3H[?25h[?25l[46m([m)[9;1H([10;4H[46m)[m[52;162H4[10;4H[?25h[?25l[46ml[m)l[46m)[m[52;162H5[10;5H[?25h[?25l[46me[m)e[46m)[m[52;162H6[10;6H[?25h[?25l[93mle[m[93m[46mt[m)[93mt[m[46m)[m[52;162H7[10;7H[?25h[?25l[52;162H8[10;8H[?25h[?25l[10;7H[K[10;3H([52;162H7[10;7H[?25h[?25lle[10;6H[K[52;162H6[10;6H[?25h[?25l[10;5H[K[52;162H5[10;5H[?25h[?25l[10;4H[K[52;162H4[10;4H[?25h[?25l[10;3H[K[52;162H3[10;3H[?25h[?25l[52;162H2[10;2H[?25h[?25l[52;162H1[10;1H[?25h[?25l[9;51r[51;1H
[1;52r[9;1H([93mdefine[m (sum-lengths ls)[51;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[52;159H[K[52;159H9,25[10CTop[9;9H[46m([14C)[?25h[?25l[10;51r[m[10;1H[L[1;52r[52;159H[K[52;159H10,3[10CTop[9;9H([14C)
  [?25h[?25l([52;162H4[10;4H[?25h[?25ll[52;162H5[10;5H[?25h[?25le[52;162H6[10;6H[?25h[?25l[93mlet[m[52;162H7[10;7H[?25h[?25l[52;162H8[10;8H[?25h[?25l([52;162H9[10;9H[?25h[?25l([52;162H10[10;10H[?25h[?25ls[52;163H1[10;11H[?25h[?25lu[52;163H2[10;12H[?25h[?25lm[52;163H3[10;13H[?25h[?25l[52;163H4[10;14H[?25h[?25l([52;163H5[10;15H[?25h[?25l[95m0[m[52;163H6[10;16H[?25h[?25l)[46m([1C)[m[52;163H7[10;17H[?25h[?25l)[10;9H[46m([msum ([1C)[46m)[m[52;163H8[10;18H[?25h[?25l)[10;8H[46m([m([7C)[46m)[m[52;163H9[10;19H[?25h[?25l[11;51r[11;1H[L[1;52r[52;159H[K[52;159H11,5[10CTop[10;8H([9C)
    [?25h[?25l([52;162H6[11;6H[?25h[?25li[52;162H7[11;7H[?25h[?25l[93mif[m[52;162H8[11;8H[?25h[?25l[52;162H9[11;9H[?25h[?25l([52;162H10[11;10H[?25h[?25ll[52;163H1[11;11H[?25h[?25ls[52;163H2[11;12H[?25h[?25l[52;163H3[11;13H[?25h[?25l[52;163H2[11;12H[?25h[?25l[11;11H[K[52;163H1[11;11H[?25h[?25l[11;10H[K[52;163H0[11;10H[?25h[?25l[11;9H[K[52;162H9 [11;9H[?25h[?25l([52;162H10[11;10H[?25h[?25ll[52;163H1[11;11H[?25h[?25ls[52;163H2[11;12H[?25h[?25l[11;11H[K[52;163H1[11;11H[?25h[?25l[11;10H[K[52;163H0[11;10H[?25h[?25ln[52;163H1[11;11H[?25h[?25lu[52;163H2[11;12H[?25h[?25ll[52;163H3[11;13H[?25h[?25ll[52;163H4[11;14H[?25h[?25l[1m[96mnull?[m[52;163H5[11;15H[?25h[?25l[52;163H6[11;16H[?25h[?25ll[52;163H7[11;17H[?25h[?25ls[52;163H8[11;18H[?25h[?25l)[11;9H[46m([8C)[m[52;163H9[11;19H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,7[10CTop[11;9H([8C)[12;7H[?25h[?25ls[52;162H8[12;8H[?25h[?25lu[52;162H9[12;9H[?25h[?25lm[52;162H10[12;10H[?25h[?25l[12;9H[K[52;162H9 [12;9H[?25h[?25l[12;8H[K[52;162H8[12;8H[?25h[?25l[12;7H[K[52;162H7[12;7H[?25h[?25l[95m0[m[52;162H8[12;8H[?25h[?25l[13;51r[13;1H[L[1;52r[52;159H[K[52;159H13,7[10CTop[13;7H[?25h[?25l([52;162H8[13;8H[?25h[?25l[1m[96m+[m[52;162H9[13;9H[?25h[?25l[52;162H10[13;10H[?25h[?25ls[52;163H1[13;11H[?25h[?25lu[52;163H2[13;12H[?25h[?25lm[52;163H3[13;13H[?25h[?25l[52;160H2,8 [12;8H[?25h[?25l[52;160H3,13[13;13H[?25h[?25l[13;12H[K[52;163H2[13;12H[?25h[?25l[13;11H[K[52;163H1[13;11H[?25h[?25l[13;10H[K[52;163H0[13;10H[?25h[?25l[95m1[m[52;163H1[13;11H[?25h[?25l[52;160H2,8 [12;8H[?25h[?25l[52;160H1,11[11;11H[?25h[?25l[52;160H0[10;11H[?25h[?25l[52;159H9,11 [9;11H[?25h[?25l[52;159H10,11[10;11H[?25h[?25l[52;163H2[10;12H[?25h[?25l[52;163H3[10;13H[?25h[?25l [46m([1C)[m[52;163H4[10;14H[?25h[?25l[52;163H5[10;15H[?25h[?25l[52;163H6[10;16H[?25h[?25l[10;9H[46m([msum ([1C)[46m)[m[52;163H7[10;17H[?25h[?25l[10;8H[46m([m([7C)[46m)[m[52;163H8[10;18H[?25h[?25l[52;163H9[10;19H[?25h[?25l[10;18H[K[10;8H([46m([7C)[m[52;163H8[10;18H[?25h[?25l[10;17H[K[10;9H(sum [46m([1C)[m[52;163H7[10;17H[?25h[?25l[10;16H[K[10;14H([52;163H6[10;16H[?25h[?25l[10;15H[K[52;163H5[10;15H[?25h[?25l[10;14H[K[52;163H4[10;14H[?25h[?25l[52;163H3[10;13H[?25h[?25l[10;12H[K[52;163H2[10;12H[?25h[?25l[10;11H[K[52;163H1[10;11H[?25h[?25l[10;10H[K[52;163H0[10;10H[?25h[?25l[10;9H[K[52;162H9 [10;9H[?25h[?25l[10;8H[K[52;162H8[10;8H[?25h[?25l[52;162H7[10;7H[?25h[?25lle[10;6H[K[52;162H6[10;6H[?25h[?25l[10;5H[K[52;162H5[10;5H[?25h[?25l[10;4H[K[52;162H4[10;4H[?25h[?25l[10;3H[K[52;162H3[10;3H[?25h[?25l[52;160H1[11;3H[?25h[?25l[52;162H4[11;4H[?25h[?25l[52;162H5[11;5H[?25h[?25l([93mif[m ([1m[96mnull?[m ls)[11;18H[K[52;162H4[11;4H[?25h[?25l([93mif[m ([1m[96mnull?[m ls)[11;17H[K[52;162H3[11;3H[?25h[?25l([93mif[m ([1m[96mnull?[m ls)[11;16H[K[52;162H2[11;2H[?25h[?25l([93mif[m ([1m[96mnull?[m ls)[11;15H[K[52;162H1[11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;1H  ([93mif[m ([1m[96mnull?[m ls)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H10,3[10CTop[10;3H[?25h[?25l[52;160H1[11;3H[?25h[?25l[52;162H4[11;4H[?25h[?25l[52;162H5[11;5H[?25h[?25l[52;162H6[11;6H[?25h[?25l[52;162H7[11;7H[?25h[?25l[95m0[m[11;7H[K[52;162H6[11;6H[?25h[?25l[95m0[m[11;6H[K[52;162H5[11;5H[?25h[?25l[95m0[m[11;5H[K[52;162H4[11;4H[?25h[?25l[95m0[m[11;4H[K[52;162H3[11;3H[?25h[?25l[95m0[m[11;3H[K[52;162H2[11;2H[?25h[?25l[95m0[m[11;2H[K[52;162H1[11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;1H  ([93mif[m ([1m[96mnull?[m ls)[95m0[m[52;159H[K[52;159H10,17[9CTop[10;7H[46m([8C)[?25h[?25l[11;51r[m[11;1H[L[1;52r[10;17H[K[11;5H[95m0[m[52;159H[K[52;159H11,5[10CTop[10;7H([8C)
    [?25h[?25l[52;160H2[12;5H[?25h[?25l[52;162H6[12;6H[?25h[?25l[52;162H7[12;7H[?25h[?25l([1m[96m+[m [95m1[m[12;10H[K[52;162H6[12;6H[?25h[?25l([1m[96m+[m [95m1[m[12;9H[K[52;162H5[12;5H[?25h[?25l([1m[96m+[m [95m1[m[12;8H[K[52;162H4[12;4H[?25h[?25l([1m[96m+[m [95m1[m[12;7H[K[52;162H3[12;3H[?25h[?25l([1m[96m+[m [95m1[m[12;6H[K[52;162H2[12;2H[?25h[?25l([1m[96m+[m [95m1[m[12;5H[K[52;162H1[12;1H[?25h[?25l[11;51r[51;1H
[1;52r[11;1H    [95m0[m([1m[96m+[m [95m1[m[52;159H[K[52;159H11,6[10CTop[11;6H[?25h[?25l[12;51r[12;1H[L[1;52r[11;6H[K[12;5H([1m[96m+[m [95m1[m[52;159H[K[52;159H12,5[10CTop[12;5H[?25h[?25l[52;162H9[12;9H[?25h[?25l[52;162H10[12;10H[?25h[?25ls[52;163H1[12;11H[?25h[?25lu[52;163H2[12;12H[?25h[?25lm[52;163H3[12;13H[?25h[?25l-[52;163H4[12;14H[?25h[?25ll[52;163H5[12;15H[?25h[?25le[52;163H6[12;16H[?25h[?25ln[52;163H7[12;17H[?25h[?25lg[52;163H8[12;18H[?25h[?25lt[52;163H9[12;19H[?25h[?25lh[52;162H20[12;20H[?25h[?25ls[52;163H1[12;21H[?25h[?25l[52;163H0[12;20H[?25h[?25l[52;162H19[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H5[12;15H[?25h[?25l[52;163H4[12;14H[?25h[?25l[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[52;162H20[12;20H[?25h[?25l[52;163H1[12;21H[?25h[?25l[52;163H0[12;20H[?25h[?25l[52;162H19[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H5[12;15H[?25h[?25l[52;163H4[12;14H[?25h[?25l[52;163H3[12;13H[?25h[?25l[52;163H2[12;12H[?25h[?25l[52;163H1[12;11H[?25h[?25l[52;163H0[12;10H[?25h[?25l(sum-lengths[52;163H1[12;11H[?25h[?25l[52;163H2[12;12H[?25h[?25l[52;163H3[12;13H[?25h[?25l[52;163H4[12;14H[?25h[?25l[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H9[12;19H[?25h[?25l[52;162H20[12;20H[?25h[?25l[52;163H1[12;21H[?25h[?25l[52;163H2[12;22H[?25h[?25l[52;163H3[12;23H[?25h[?25l([52;163H4[12;24H[?25h[?25ll[52;163H5[12;25H[?25h[?25ls[52;163H6[12;26H[?25h[?25l[12;25H[K[52;163H5[12;25H[?25h[?25l[12;24H[K[52;163H4[12;24H[?25h[?25lc[52;163H5[12;25H[?25h[?25ld[52;163H6[12;26H[?25h[?25l[1m[96mcdr[m[52;163H7[12;27H[?25h[?25l[52;163H8[12;28H[?25h[?25l([52;163H9[12;29H[?25h[?25ll[52;162H30[12;30H[?25h[?25ls[52;163H1[12;31H[?25h[?25l)[46m([mls[46m)[m[52;163H2[12;32H[?25h[?25l[12;31H[K[12;28H([52;163H1[12;31H[?25h[?25l[12;30H[K[52;163H0[12;30H[?25h[?25l[12;29H[K[52;162H29[12;29H[?25h[?25l[12;28H[K[52;163H8[12;28H[?25h[?25ll[52;163H9[12;29H[?25h[?25ls[52;162H30[12;30H[?25h[?25l)[12;23H[46m([6C)[m[52;163H1[12;31H[?25h[?25l)[12;10H[46m([m[12C([6C)[46m)[m[52;163H2[12;32H[?25h[?25l)    [46m([m[4C([20C)[46m)[m[52;163H3[12;33H[?25h[?25l)[10;3H[46m([m[12;5H([26C)[46m)[m[52;163H4[12;34H[?25h[?25l)[9;1H[46m([m
  ([12;33H)[46m)[m[52;163H5[12;35H[?25h[52;1H[K[12;34H[?25l[52;149H^[[12;34H[52;149H  [12;35H[52;159H12,34[9CTop[12;34H[?25h[?25l[52;149H:[12;34H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2599B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm 
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:15:0
actual:     2
expected:   0
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:16:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:17:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:25:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:26:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:35:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:36:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:37:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:64:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:65:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:66:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:74:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:85:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:86:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:87:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2599B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))[106m)[m

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H12,34[9CTop[12;34H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))[46m)[m

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H12,34[9CTop"lab5-sol.scm" 89L, 2599B[12;34H[?25h[?25l[52;149H:[12;34H[52;1H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[52;1H[K[52;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2599B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))[106m)[m

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H12,34[9CTop[12;34H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))[46m)[m

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H12,34[9CTop"lab5-sol.scm" 89L, 2599B[12;34H[?25h[?25l[9;1H([12;34H)[15;27H[38;5;224m[46m()[m[52;160H5,27[15;27H[?25h[?25l[38;5;224m()[m[52;160H4,22[14;22H[?25h[?25l[52;160H5[15;22H[?25h[?25l[9;1H[46m([12;34H)[m[52;160H2,34[12;34H[?25h[?25l[52;149H~@k[12;34H[52;149H   [11;5H[9;1H([12;34H)[52;160H1,5 [11;5H[?25h[?25l[52;149H~@k[11;5H[52;149H   [11;5H[?25h[?25l[52;149H~@k[11;5H[52;149H   [10;16H[10;7H[46m([8C)[m[52;160H0,16[10;16H[?25h[?25l[52;149H~@k[10;16H[52;149H   [10;15H[10;7H([8C)[52;163H5[10;15H[?25h[?25l[52;149H~@k[10;15H[52;149H   [10;14H[52;163H4[10;14H[?25h[?25l[52;149H~@k[10;14H[52;149H   [10;13H[52;163H3[10;13H[?25h[?25l[52;149H~@k[10;13H[52;149H   [10;12H[52;163H2[10;12H[?25h[?25l[52;149H~@k[10;12H[52;149H   [10;11H[52;163H1[10;11H[?25h[?25l[52;149H~@k[10;11H[52;149H   [10;10H[52;163H0[10;10H[?25h[?25l[52;149H~@k[10;10H[52;149H   [10;11H[52;163H1[10;11H[?25h[?25l[52;149H~@k[10;11H[52;149H   [10;12H[52;163H2[10;12H[?25h[?25l[52;149Hi[10;12H[52;149H [10;12H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,12[9CTop[10;12H[?25h[?25lnul? ls)[10;16H[K[52;163H1[10;11H[?25h[?25l? ls)[10;15H[K[52;163H0[10;10H[?25h[?25l? ls)[10;14H[K[52;162H9 [10;9H[?25h[?25l? ls)[10;13H[K[10;7H[46m([m? ls[46m)[m[52;162H8[10;8H[?25h[?25lp? l[46ms[m)[10;7H(p? ls[52;162H9[10;9H[?25h[?25la? ls)[52;162H10[10;10H[?25h[?25li? ls)[52;163H1[10;11H[?25h[?25l[1m[96mpair?[m ls)[52;163H2[10;12H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;159H21,5[10CTop[52;149H^O[21;5H[52;149H1 [21;5H[?25h[?25l[52;149H^[[21;5H[52;149H1 [21;5H[52;150H^[[21;5H[52;149H   [21;5H[52;4H[1mINSERTt --[m[52;13H[K[52;159H21,5[10CTop[21;5H[?25h[52;1H[K[21;4H[?25l[52;149H^[[21;4H[52;149H  [21;5H[20;1H[46m([21;4H)[m[52;159H21,4[10CTop[21;4H[?25h[?25l[52;149H:[21;4H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2599B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcdr: contract violation
  expected: pair?
  given: '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2599B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mpair?[m ls)
    [31m0[m
    ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
[106m([m[38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m[106m)[m

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H21,4[10CTop[21;4H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mpair?[m ls)
    [95m0[m
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
[46m([m[93mdefine[m (sum-lengths-tr ls)
  [95m0[m[46m)[m

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H21,4[10CTop"lab5-sol.scm" 89L, 2599B[21;4H[?25h[?25l[17;12H[46m([34C)[m


([21;4H)[52;159H17,47[17;47H[?25h[?25l[17;12H([34C)[25;36H[38;5;224m[46m([3C)[m[52;159H25,40[25;40H[?25h[?25l[38;5;224m([3C)[m[52;159H14,24[14;24H[?25h[?25l[52;160H0,13[10;13H[?25h[?25l[52;160H1,5 [11;5H[?25h[?25l[52;149Hi[11;5H[52;149H [11;5H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H11,5[10CTop[11;5H[?25h[?25l[52;162H6[11;6H[?25h[?25l[11;5H[K[52;162H5[11;5H[?25h[?25l[52;162H4[11;4H[?25h[?25l[52;162H3[11;3H[?25h[?25l[52;162H2[11;2H[?25h[?25l[52;162H1[11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;3H([93mif[m ([1m[96mpair?[m ls)[52;159H[K[52;159H10,17[9CTop[10;7H[46m([8C)[?25h[?25l[9;1H([m[10;7H([8C)[11;34H[46m)[m[52;160H1,35[11;35H[?25h[?25l[11;34H[K[9;1H(
  [46m([11;33H)[m[52;163H4[11;34H[?25h[?25l[11;33H[K[10;3H(
    [46m([26C)[m[52;163H3[11;33H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,5[10CTop[11;5H([26C)
    [?25h[?25l[95m0[m[52;162H6[12;6H[?25h[?25l)[10;3H[46m([12;6H)[m[52;162H7[12;7H[?25h[?25l)[9;1H[46m([m
  ([12;6H)[46m)[m[52;162H8[12;8H[?25h[?25l[9;1H([11;5H[46m([26C)[m[12;7H)[52;160H1,33[11;33H[?25h[52;1H[K[11;32H[?25l[52;149H^[[11;32H[52;149H  [11;33H[52;159H11,32[9CTop[11;32H[?25h[?25l[52;149H:[11;32H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2599B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:15:0
actual:     2
expected:   0
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:16:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:17:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:25:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:26:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:35:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:36:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:37:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:64:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:65:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:66:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:74:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:85:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:86:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:87:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2599B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mpair?[m ls)
    [106m([m[36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))[106m)[m
    [31m0[m))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H11,32[9CTop[11;32H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mpair?[m ls)
    [46m([m[1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))[46m)[m
    [95m0[m))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H11,32[9CTop"lab5-sol.scm" 89L, 2599B[11;32H[?25h[?25l[9;1H[46m([m[11;5H([26C)[12;7H[46m)[m[52;160H2,7 [12;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[51;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[52;1H[K[52;159H12,7[11C7%[9;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H12,7[10C15%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;7H)[50;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))[52;159H[K[52;159H15,10[9C23%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;3H[38;5;224m'()[m)

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[52;159H[K[52;159H18,0-1[8C31%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[5;1H[46m([6;4H)[m[49;1H(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[52;159H[K[52;159H21,4[10C39%[6;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[2;1H([3;4H)[49;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[52;159H[K[52;159H24,10[9C47%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[52;159H[K[52;159H27,0-1[8C55%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[51;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[52;159H[K[52;159H30,10[9C63%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H33,0-1[8C71%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))[52;159H[K[52;159H36,10[9C78%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;3H[38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[52;159H[K[52;159H39,10[9C86%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)[52;159H[K[52;159H42,0-1[8C94%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)

[94m~                                                                                                                                                                               [m[52;159H[K[52;159H45,10[9CBot[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H48,10[9CBot[6;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[96m;;Exercise 2[m[52;159H[K[52;159H48,10[9CBot[9;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)[52;159H[K[52;159H48,10[9C94%[12;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)[52;159H[K[52;159H48,10[9C86%[15;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H([93mdefine[m (poly-eval x coeffs)
  [95m0[m)[52;159H[K[52;159H48,10[9C78%[18;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m[52;159H[K[52;159H48,10[9C71%[21;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)[52;159H[K[52;159H48,10[9C63%[24;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)[52;159H[K[52;159H48,10[9C55%[27;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)[52;159H[K[52;159H48,10[9C47%[30;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)[52;159H[K[52;159H48,10[9C39%[33;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)[52;159H[K[52;159H48,10[9C31%[36;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;3H([93mif[m ([1m[96mpair?[m ls)
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)))
    [95m0[m))[52;159H[K[52;159H48,10[9C23%[39;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)[52;159H[K[52;159H48,10[9C15%[42;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(require rackunit)

[96m;;Exercise 1[m[52;159H[K[52;159H48,10[10C7%[45;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H#!/usr/bin/env racket

#lang racket[52;159H[K[52;159H46,10[9CTop[46;10H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[52;159H10,4 [10;4H[?25h[?25l[46m([12;6H)[m[52;162H3[10;3H[?25h[?25l[52;149H2[10;4H[48;5;242m([m[12;6H)[52;1H[1m-- VISUAL --[m[52;149H[K[52;149H2[10;4H[52;159H10,4[10CTop[10;4H[?25h[?25l[52;149H3[10;5H[93m[48;5;242mi[m[52;162H5[10;5H[?25h[?25l[52;149H2[11;6H[10;5H[93m[48;5;242mf[m[48;5;242m ([m[1m[96m[48;5;242mpair?[m[48;5;242m ls) 
    ([m[52;160H1,6[11;6H[?25h[?25l[1C[1m[96m[48;5;242m+[m [52;162H7[11;7H[?25h[?25l[52;149H3[12;7H[9;1H[46m([m[11;7H[48;5;242m [m[95m[48;5;242m1[m[48;5;242m (sum-lengths ([m[1m[96m[48;5;242mcdr[m[48;5;242m ls))) 
    [m[95m[48;5;242m0[m[48;5;242m)[m[46m)[m[52;160H2[12;7H[?25h[?25l[1C[9;1H([12;7H[48;5;242m)[m[52;162H8[12;8H[?25h[?25l[9;1H[46m([12;7H)[m[52;162H7[12;7H[?25h[?25l[?25h[?25l[52;149H [12;7H[10;3H([93mif[m ([1m[96mpair?[m ls)[10;17H[K[11;1H    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)))[11;33H[K[12;1H    [95m0[m)[52;1H[K[52;159H12,7[10CTop[12;7H[?25h[?25l[9;1H([11;5H[46m([26C)[m[12;7H)[52;160H1,5[11;5H[?25h[?25l([26C)[52;160H0,13[10;13H[?25h[?25l[52;149Hi[10;13H[52;149H [10;13H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H10,13[9CTop[10;13H[?25h[?25l[52;163H2[10;12H[?25h[?25lpai? ls)[10;16H[K[52;163H1[10;11H[?25h[?25l? ls)[10;15H[K[52;163H0[10;10H[?25h[?25l? ls)[10;14H[K[52;162H9 [10;9H[?25h[?25l? ls)[10;13H[K[10;7H[46m([m? ls[46m)[m[52;162H8[10;8H[?25h[?25ln? l[46ms[m)[10;7H(n? ls[52;162H9[10;9H[?25h[?25lu? ls)[52;162H10[10;10H[?25h[?25ll? ls)[52;163H1[10;11H[?25h[?25l[1m[96mnull?[m ls)[52;163H2[10;12H[?25h[?25l[46m([8C)[m[52;163H7[10;17H[?25h[?25l[11;51r[11;1H[L[1;52r[52;159H[K[52;159H11,5[10CTop[10;7H([8C)
    [?25h[?25l[95m0[m[52;162H6[11;6H[?25h[?25l[9;1H[46m([13;7H)[m[52;160H3,8[13;8H[?25h[?25l[13;7H[K[9;1H(
  [46m([13;6H)[m[52;162H7[13;7H[?25h[?25l[13;6H[K[10;3H([52;162H6[13;6H[?25h[?25l[13;5H[K[52;162H5[13;5H[?25h[?25l[52;162H4[13;4H[?25h[?25l[52;162H3[13;3H[?25h[?25l[52;162H2[13;2H[?25h[?25l[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;5H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)))[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H12,33[9CTop[12;5H[46m([26C)[?25h[?25l[m)[10;3H[46m([m[12;5H([26C)[46m)[m[52;163H4[12;34H[?25h[?25l)[9;1H[46m([m
  ([12;33H)[46m)[m[52;163H5[12;35H[?25h[52;1H[K[12;34H[?25l[52;149H^[[12;34H[52;149H  [12;35H[52;159H12,34[9CTop[12;34H[?25h[?25l[9;1H([12;34H)[16;1H[46m([40C)[m[52;160H6,42[16;42H[?25h[?25l([40C)[17;12H[46m([34C)[m[52;160H7,47[17;47H[?25h[?25l[52;149H~@k[17;47H[52;149H   [17;46H[17;12H([13C[38;5;224m[46m([19C)[m)[52;163H6[17;46H[?25h[?25l[15;1H[46m([34C)[m[17;26H[38;5;224m([19C)[m[52;160H5,3[15;36H[?25h[?25l([34C)[52;160H1,5 [11;5H[?25h[?25l[52;149Hi[11;5H[52;149H [11;5H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H11,5[10CTop[11;5H[?25h[?25l[52;162H6[11;6H[?25h[?25l[11;5H[K[52;162H5[11;5H[?25h[?25l[52;162H4[11;4H[?25h[?25l[52;162H3[11;3H[?25h[?25l[52;162H2[11;2H[?25h[?25l[52;162H1[11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;3H([93mif[m ([1m[96mnull?[m ls)[52;159H[K[52;159H10,17[9CTop[10;7H[46m([8C)[?25h[?25l[m[10;16H[K[10;7H([52;163H6[10;16H[?25h[?25l)[10;7H[46m([8C)[m[52;163H7[10;17H[?25h[?25l[52;163H6[10;16H[?25h[?25l[10;7H([8C)[52;163H5[10;15H[?25h[?25l[52;163H4[10;14H[?25h[?25l[52;163H3[10;13H[?25h[?25l[52;163H2[10;12H[?25h[?25lnul? ls)[10;16H[K[52;163H1[10;11H[?25h[?25l? ls)[10;15H[K[52;163H0[10;10H[?25h[?25l? ls)[10;14H[K[52;162H9 [10;9H[?25h[?25l? ls)[10;13H[K[10;7H[46m([m? ls[46m)[m[52;162H8[10;8H[?25h[?25lp? l[46ms[m)[10;7H(p? ls[52;162H9[10;9H[?25h[?25la? ls)[52;162H10[10;10H[?25h[?25li? ls)[52;163H1[10;11H[?25h[?25l[1m[96mpair?[m ls)[52;163H2[10;12H[?25h[?25l[52;160H1,20[11;20H[?25h[?25l[52;160H2,1 [12;1H[?25h[?25l[11;10H[46m([20C)[m[52;160H1,31[11;31H[?25h[?25l[9;1H[46m([m[11;10H([20C)))[46m)[m[52;163H5[11;35H[?25h[?25l[11;34H[K[9;1H(
  [46m([11;33H)[m[52;163H4[11;34H[?25h[?25l[11;33H[K[10;3H(
    [46m([26C)[m[52;163H3[11;33H[?25h[?25l[52;163H2[11;32H[?25h[?25l    ([4C[46m([20C)[m)[52;163H1[11;31H[?25h[?25l[11;10H([12C[46m([6C)[m)[52;163H0[11;30H[?25h[?25l[11;10H[46m([m[12C([6C)[46m)[m[52;163H1[11;31H[?25h[?25l[11;10H([12C[46m([6C)[m)[52;163H0[11;30H[?25h[?25l[11;23H([6C)[52;162H29[11;29H[?25h[?25l[52;163H8[11;28H[?25h[?25l[52;163H7[11;27H[?25h[?25l[52;163H6[11;26H[?25h[?25l[52;163H5[11;25H[?25h[?25l[52;163H6[11;26H[?25h[?25l[52;163H7[11;27H[?25h[?25l[52;163H8[11;28H[?25h[?25l[52;163H9[11;29H[?25h[?25l[46m([6C)[m[52;162H30[11;30H[?25h[?25l)[11;32H[K[11;29H[46m)[m)[52;162H29[11;29H[?25h[?25l)[11;31H[K[11;28H[46m)[m)[52;163H8[11;28H[?25h[?25l[46m([m)))[11;23H([5C[46m)[m[52;163H9[11;29H[?25h[?25l[3C)[11;23H[46m([m[4C()[46m)[m[52;162H30[11;30H[?25h[?25l[11;23H([4C[46m()[m)[52;162H29[11;29H[?25h[?25l[46mc[m))))c[46m)[m[52;162H30[11;30H[?25h[?25l[46md[m))))d[46m)[m[52;163H1[11;31H[?25h[?25l[1m[96mcd[m[1m[96m[46mr[m))))[1m[96mr[m[46m)[m[52;163H2[11;32H[?25h[?25l[46m [m)))) [46m)[m[52;163H3[11;33H[?25h[?25l[46ml[m))))l[46m)[m[52;163H4[11;34H[?25h[?25l[46ms[m))))s[46m)[m[52;163H5[11;35H[?25h[?25l[11;23H[46m([m[4C([6C)[46m)[m[52;163H6[11;36H[?25h[?25l[11;10H[46m([m[12C([12C)[46m)[m[52;163H7[11;37H[?25h[?25l    [46m([m[4C([26C)[46m)[m[52;163H8[11;38H[?25h[?25l[52;163H9[11;39H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,5[10CTop[11;5H([32C)
    [?25h[?25l[95m0[m[52;162H6[12;6H[?25h[?25l)[10;3H[46m([12;6H)[m[52;162H7[12;7H[?25h[?25l)[9;1H[46m([m
  ([12;6H)[46m)[m[52;162H8[12;8H[?25h[52;1H[K[12;7H[?25l[52;149H^[[12;7H[52;149H  [12;8H[52;159H12,7[10CTop[12;7H[?25h[?25l[52;149H:[12;7H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2605B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:15:0
actual:     1
expected:   0
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:16:0
actual:     1
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:17:0
actual:     1
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:25:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:26:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:35:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:36:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:37:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:64:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:65:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:66:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:74:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:85:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:86:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:87:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2605B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mpair?[m ls)
    ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))
    [31m0[m)[106m)[m

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H12,7[10CTop[12;7H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mpair?[m ls)
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))
    [95m0[m)[46m)[m

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H12,7[10CTop"lab5-sol.scm" 89L, 2605B[12;7H[?25h[?25l[52;149H~@k[12;7H[52;149H   [11;7H[9;1H([12;7H)[52;160H1[11;7H[?25h[?25l[52;149H~@k[11;7H[52;149H   [10;7H[46m([8C)[m[52;160H0[10;7H[?25h[?25l[52;149H~@k[10;7H[52;149H   [10;8H([8C)[52;162H8[10;8H[?25h[?25l[52;149H~@k[10;8H[52;149H   [10;9H[52;162H9[10;9H[?25h[?25l[52;149H~@k[10;9H[52;149H   [10;10H[52;162H10[10;10H[?25h[?25l[52;149H~@k[10;10H[52;149H   [10;11H[52;163H1[10;11H[?25h[?25l[52;149H~@k[10;11H[52;149H   [10;12H[52;163H2[10;12H[?25h[?25l[52;149H~@k[10;12H[52;149H   [10;13H[52;163H3[10;13H[?25h[?25l[52;149H~@k[10;13H[52;149H   [10;14H[52;163H4[10;14H[?25h[?25l[52;149H~@k[10;14H[52;149H   [10;15H[52;163H5[10;15H[?25h[?25l[52;149H~@k[10;15H[52;149H   [10;16H[10;7H[46m([8C)[m[52;163H6[10;16H[?25h[?25l[52;149H~@k[10;16H[52;149H   [10;16H[?25h[?25l[52;149H~@k[10;16H[52;149H   [10;16H[?25h[?25l[52;149Hi[10;16H[52;149H [10;16H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,16[9CTop[10;16H[?25h[?25l[52;163H7[10;17H[?25h[?25l[10;7H([8C)[52;160H1[11;17H[?25h[?25l[52;163H8[11;18H[?25h[?25l[52;163H9[11;19H[?25h[?25l[52;162H20[11;20H[?25h[?25l[52;163H1[11;21H[?25h[?25l[52;163H2[11;22H[?25h[?25l [46m([12C)[m[52;163H3[11;23H[?25h[?25l[52;163H4[11;24H[?25h[?25l([12C)[52;163H5[11;25H[?25h[?25l[52;163H6[11;26H[?25h[?25l[52;163H7[11;27H[?25h[?25l [46m([6C)[m[52;163H8[11;28H[?25h[?25l[46ms[m([1m[96mcdr[m l[46ms[m))))[11;28Hs[46m([m[5Cs[46m)[m[52;163H9[11;29H[?25h[?25l[46mu[m([1m[96mcdr[m l[46ms[m))))[11;29Hu[46m([m[5Cs[46m)[m[52;162H30[11;30H[?25h[?25l[46mm[m([1m[96mcdr[m l[46ms[m))))[11;30Hm[46m([m[5Cs[46m)[m[52;163H1[11;31H[?25h[?25l[46m-[m([1m[96mcdr[m l[46ms[m))))[11;31H-[46m([m[5Cs[46m)[m[52;163H2[11;32H[?25h[?25l[46ml[m([1m[96mcdr[m l[46ms[m))))[11;32Hl[46m([m[5Cs[46m)[m[52;163H3[11;33H[?25h[?25l[46me[m([1m[96mcdr[m l[46ms[m))))[11;33He[46m([m[5Cs[46m)[m[52;163H4[11;34H[?25h[?25l[46mn[m([1m[96mcdr[m l[46ms[m))))[11;34Hn[46m([m[5Cs[46m)[m[52;163H5[11;35H[?25h[?25l[46mg[m([1m[96mcdr[m l[46ms[m))))[11;35Hg[46m([m[5Cs[46m)[m[52;163H6[11;36H[?25h[?25l[46mt[m([1m[96mcdr[m l[46ms[m))))[11;36Ht[46m([m[5Cs[46m)[m[52;163H7[11;37H[?25h[?25l[46mh[m([1m[96mcdr[m l[46ms[m))))[11;37Hh[46m([m[5Cs[46m)[m[52;163H8[11;38H[?25h[?25l[46ms[m([1m[96mcdr[m l[46ms[m))))[11;38Hs[46m([m[5Cs[46m)[m[52;163H9[11;39H[?25h[?25l[52;162H40[11;40H[?25h[?25l[52;162H39[11;39H[?25h[?25l[46m [m([1m[96mcdr[m l[46ms[m))))[11;39H [46m([m[5Cs[46m)[m[52;162H40[11;40H[?25h[?25l[52;163H1[11;41H[?25h[?25l([6C)[52;163H2[11;42H[?25h[?25l[52;163H3[11;43H[?25h[?25l[52;163H4[11;44H[?25h[?25l[52;163H5[11;45H[?25h[?25l[52;163H6[11;46H[?25h[?25l[46m([6C)[m[52;163H7[11;47H[?25h[?25l[11;23H[46m([m[16C([6C)[46m)[m[52;163H8[11;48H[?25h[?25l[11;23H([16C[46m([6C)[m)[52;163H7[11;47H[?25h[?25l[11;40H([6C)[52;163H6[11;46H[?25h[?25l[52;163H5[11;45H[?25h[?25l[52;163H4[11;44H[?25h[?25l[52;163H3[11;43H[?25h[?25l[52;163H2[11;42H[?25h[?25l[46m([6C)[m[52;163H1[11;41H[?25h[?25l[52;163H0[11;40H[?25h[?25l([6C)[52;162H39[11;39H[?25h[?25l[52;163H8[11;38H[?25h[?25l[52;163H7[11;37H[?25h[?25l[52;163H6[11;36H[?25h[?25l[52;163H5[11;35H[?25h[?25l[52;163H4[11;34H[?25h[?25l[52;163H3[11;33H[?25h[?25l[52;163H2[11;32H[?25h[?25l[52;163H1[11;31H[?25h[?25l[52;163H0[11;30H[?25h[?25l[52;162H29[11;29H[?25h[?25l[52;163H8[11;28H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls))))[11;28H[46m([20C)[m[52;163H9[11;29H[?25h[?25l[11;10H[46m([m[17C([20C))[46m)[m[52;162H51[11;51H[?25h[?25l[1C)    [46m([m[4C([40C)[46m)[m[52;163H2[11;52H[?25h[52;1H[K[11;51H[?25l[52;149H^[[11;51H[52;149H  [11;52H    ([4C[46m([40C)[m)[52;159H11,51[9CTop[11;51H[?25h[?25l[52;149H:[11;51H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2619B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcdr: contract violation
  expected: pair?
  given: 0
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2619B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mpair?[m ls)
    ([36m+[m [31m1[m [106m([msum-lengths ([36mcdr[m (sum-lengths ([36mcdr[m ls)))[106m)[m)
    [31m0[m))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H11,51[9CTop[11;51H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mpair?[m ls)
    ([1m[96m+[m [95m1[m [46m([msum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)))[46m)[m)
    [95m0[m))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H11,51[9CTop"lab5-sol.scm" 89L, 2619B[11;51H[?25h[?25l    [46m([m[4C([40C)[46m)[m[52;163H2[11;52H[?25h[?25l[52;149H~@k[11;52H[52;149H   [11;51H    ([4C[46m([40C)[m)[52;163H1[11;51H[?25h[?25l[52;149H~@k[11;51H[52;149H   [12;7H[9;1H[46m([m[11;10H([40C)[12;7H[46m)[m[52;160H2,7 [12;7H[?25h[?25l[52;149H~@k[12;7H[52;149H   [11;51H[9;1H([11;10H[46m([40C)[m[12;7H)[52;160H1,51[11;51H[?25h[?25l[52;149H~@k[11;51H[52;149H   [11;50H[11;10H([12C[46m([26C)[m)[52;163H0[11;50H[?25h[?25l[52;149H~@k[11;50H[52;149H   [11;49H[11;23H([4C[46m([20C)[m)[52;162H49[11;49H[?25h[?25l[52;149H~@k[11;49H[52;149H   [11;48H[11;28H([12C[46m([6C)[m)[52;163H8[11;48H[?25h[?25l[52;149H~@k[11;48H[52;149H   [11;49H[11;28H[46m([m[12C([6C)[46m)[m[52;163H9[11;49H[?25h[?25l[52;149H~@k[11;49H[52;149H   [11;50H[11;23H[46m([m[4C([20C)[46m)[m[52;162H50[11;50H[?25h[?25l[52;149H~@k[11;50H[52;149H   [11;51H[11;10H[46m([m[12C([26C)[46m)[m[52;163H1[11;51H[?25h[?25l[52;149H~@k[11;51H[52;149H   [11;52H    [46m([m[4C([40C)[46m)[m[52;163H2[11;52H[?25h[?25l[52;149H~@k[11;52H[52;149H   [11;52H[?25h[?25l[52;149HL[11;52H[52;149H [46;1H[11;5H([46C)[46;1H[46m([51;43H)[m[52;159H46,1 [46;1H[?25h[?25l[52;149Hx[46;1H[52;149H [46;1H[52;149Hdl[46;1H[52;149H  [46;1H[93mdefine[m greater-than[46;20H[K[51;43H)[46;1H[?25h[?25l[52;149Hi[46;1H[52;149H [46;1H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H46,1[10CTop[46;1H[?25h[?25l([93mdefine[m greater-than[46m([51;43H)[m[52;162H2[46;2H[?25h[52;1H[K[46;1H[?25l[52;149H^[[46;1H[52;149H  [46;2H[52;159H46,1[10CTop[46;1H[?25h[?25l[52;149H:[46;1H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2619B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2619B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mpair?[m ls)
    ([36m+[m [31m1[m (sum-lengths ([36mcdr[m (sum-lengths ([36mcdr[m ls)))))
    [31m0[m))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
[106m([m[38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v))))[106m)[m[52;159H46,1[10CTop[46;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mpair?[m ls)
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)))))
    [95m0[m))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
[46m([m[93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v))))[46m)[m[52;159H46,1[10CTop"lab5-sol.scm" 89L, 2619B[46;1H[?25h[?25l([51;43H)[52;159H10,13[10;13H[?25h[?25l  [46m([12;6H)[m[52;162H3 [10;3H[?25h[?25l([12;6H)[52;162H13[10;13H[?25h[?25l[52;163H1[10;11H[?25h[?25l[52;149Hi[10;11H[52;149H [10;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,11[9CTop[10;11H[?25h[?25lpar? ls)[10;16H[K[52;163H0[10;10H[?25h[?25lr? ls)[10;15H[K[52;162H9 [10;9H[?25h[?25lr? ls)[10;14H[K[10;7H[46m([mr? ls[46m)[m[52;162H8[10;8H[?25h[?25lnr? l[46ms[m)[10;7H(nr? ls[52;162H9[10;9H[?25h[?25lur? ls)[52;162H10[10;10H[?25h[?25llr? ls)[52;163H1[10;11H[?25h[?25llr? ls)[52;163H2[10;12H[?25h[?25l[46m([9C)[m[52;163H8[10;18H[?25h[?25l[10;7H([9C)[52;163H3[10;13H[?25h[?25l[1m[96mnull?[m ls)[10;17H[K[52;163H2[10;12H[?25h[?25l[46m([8C)[m[52;163H7[10;17H[?25h[?25l[11;51r[11;1H[L[1;52r[52;159H[K[52;159H11,5[10CTop[10;7H([8C)
    [?25h[?25l[95m0[m[52;162H6[11;6H[?25h[?25l[9;1H[46m([13;7H)[m[52;160H3,8[13;8H[?25h[?25l[13;7H[K[9;1H(
  [46m([13;6H)[m[52;162H7[13;7H[?25h[?25l[13;6H[K[10;3H([52;162H6[13;6H[?25h[?25l[13;5H[K[52;162H5[13;5H[?25h[?25l[52;162H4[13;4H[?25h[?25l[52;162H3[13;3H[?25h[?25l[52;162H2[13;2H[?25h[?25l[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;5H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)))))[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H12,53[9CTop[12;5H[46m([46C)[?25h[?25l[m    ([46C)[52;160H1,6 [11;6H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,5[10CTop[12;5H[?25h[?25li[52;162H6[12;6H[?25h[?25l[93mif[m[52;162H7[12;7H[?25h[?25l[52;162H8[12;8H[?25h[?25l([52;162H9[12;9H[?25h[?25lp[52;162H10[12;10H[?25h[?25la[52;163H1[12;11H[?25h[?25li[52;163H2[12;12H[?25h[?25lr[52;163H3[12;13H[?25h[?25l[12;12H[K[52;163H2[12;12H[?25h[?25l[12;11H[K[52;163H1[12;11H[?25h[?25l[12;10H[K[52;163H0[12;10H[?25h[?25l[12;9H[K[52;162H9 [12;9H[?25h[?25l[12;8H[K[52;162H8[12;8H[?25h[?25l[52;162H7[12;7H[?25h[?25li[12;6H[K[52;162H6[12;6H[?25h[?25l[12;5H[K[52;162H5[12;5H[?25h[?25l[52;162H4[12;4H[?25h[?25l[52;162H3[12;3H[?25h[?25l[52;162H2[12;2H[?25h[?25l[52;162H1[12;1H[?25h[?25l[11;51r[51;1H
[1;52r[11;5H[95m0[m[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H11,6[10CTop[11;6H[?25h[?25l
    [46m([46C)[m[52;160H2,53[12;53H[?25h[?25l[52;163H2[12;52H[?25h[?25l    ([46C)[52;160H1,6 [11;6H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,5[10CTop[12;5H[?25h[?25li[52;162H6[12;6H[?25h[?25l[93mif[m[52;162H7[12;7H[?25h[?25l[52;162H8[12;8H[?25h[?25l[52;162H7[12;7H[?25h[?25li[12;6H[K[52;162H6[12;6H[?25h[?25l[12;5H[K[52;162H5[12;5H[?25h[?25l([52;162H6[12;6H[?25h[?25li[52;162H7[12;7H[?25h[?25l[93mif[m[52;162H8[12;8H[?25h[?25l[52;162H9[12;9H[?25h[?25l([52;162H10[12;10H[?25h[?25lp[52;163H1[12;11H[?25h[?25la[52;163H2[12;12H[?25h[?25li[52;163H3[12;13H[?25h[?25lr[52;163H4[12;14H[?25h[?25l[1m[96mpair?[m[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25ll[52;163H7[12;17H[?25h[?25ls[52;163H8[12;18H[?25h[?25l)[12;9H[46m([8C)[m[52;163H9[12;19H[?25h[?25l[12;9H([8C)
    [46m([46C)[m[52;160H3,5 [13;5H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)[13;52H[K[13;4H[46m([m[1m[96m+[m [44C[46m)[m[52;162H4[13;4H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)[13;51H[K[13;3H[46m([m[1m[96m+[m [44C[46m)[m[52;162H3[13;3H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)[13;50H[K[13;2H[46m([m[1m[96m+[m [44C[46m)[m[52;162H2[13;2H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)[13;49H[K[13;1H[46m([m[1m[96m+[m [44C[46m)[m[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;1H    ([93mif[m ([1m[96mpair?[m ls)([1m[96m+[m [95m1[m [18C(sum-lengths ([1m[96mcdr[m ls)))))[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H12,19[9CTop[12;19H[46m([46C)[12;19H[?25h[?25l[13;51r[m[13;1H[L[1;52r[12;19H[K[13;7H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)))))[52;159H[K[52;159H13,7[10CTop[13;7H[46m([46C)[13;7H[?25h[?25l[m[52;162H55[13;55H[?25h[?25l)[12;5H[46m([m[13;7H([46C)[46m)[m[52;163H6[13;56H[?25h[?25l)[10;3H[46m([m[12;5H([13;55H)[46m)[m[52;163H7[13;57H[?25h[?25l)[9;1H[46m([m
  ([13;56H)[46m)[m[52;163H8[13;58H[?25h[?25l[9;1H([13;12H[46m([40C)[m))))[52;163H3[13;53H[?25h[52;1H[K[13;52H[?25l[52;149H^[[13;52H[52;149H  [13;53H[13;12H([12C[46m([26C)[m)[52;159H13,52[9CTop[13;52H[?25h[?25l[52;149H:[13;52H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 90L, 2641B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:12:4: if: missing an "else" expression
  in: (if (pair? ls) (+ 1 (sum-lengths (cdr (sum-lengths (cdr ls))))))
  location...:
   lab5-sol.scm:12:4
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 90L, 2641B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([38;5;130mif[m ([36mpair?[m ls)[13;7H([36m+[m [31m1[m (sum-lengths [106m([m[36mcdr[m (sum-lengths ([36mcdr[m ls))[106m)[m)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[50;9H[35m'()[m[51;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[52;159H13,52[9CTop[13;52H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([93mif[m ([1m[96mpair?[m ls)[13;7H([1m[96m+[m [95m1[m (sum-lengths [46m([m[1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls))[46m)[m)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[50;9H[38;5;224m'()[m[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H13,52[9CTop"lab5-sol.scm" 90L, 2641B[13;52H[?25h[?25l[12;9H[46m([8C)[m[13;25H([26C)[52;160H2,9 [12;9H[?25h[?25l[52;149Hi[12;9H[52;149H [12;9H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H12,9[10CTop[12;9H[?25h[?25l([1m[96m[46mp[m[1m[96mair?[m ls)[12;18H[K[12;8H[46m([m[1m[96mpair?[m ls[46m)[m[52;162H8[12;8H[?25h[?25li([1m[96m[46mp[m[1m[96mair?[m ls)[12;17H[K[12;7H[46m([m[1m[96mpair?[m ls[46m)[m[52;162H7[12;7H[?25h[?25l([1m[96m[46mp[m[1m[96mair?[m ls)[12;16H[K[12;6H[46m([m[1m[96mpair?[m ls[46m)[m[52;162H6[12;6H[?25h[?25l[52;162H16[12;16H[?25h[?25l[52;162H6 [12;6H[?25h[?25l[46mi[m([1m[96mpair?[m l[46ms[m)    (i[46m([m[7Cs[46m)[m[52;162H7[12;7H[?25h[?25l[93mi[m[93m[46mf[m([1m[96mpair?[m l[46ms[m)[12;7H[93mf[m[46m([m[7Cs[46m)[m[52;162H8[12;8H[?25h[?25l[46m [m([1m[96mpair?[m l[46ms[m)[12;8H [46m([m[7Cs[46m)[m[52;162H9[12;9H[?25h[?25l[9;1H[46m([m[12;9H([8C)[13;57H[46m)[m[52;160H3,58[13;58H[?25h[?25l[13;57H[K[9;1H(
  [46m([13;56H)[m[52;163H7[13;57H[?25h[?25l[13;56H[K[10;3H([12;5H[46m([13;55H)[m[52;163H6[13;56H[?25h[?25l[13;55H[K[12;5H([13;7H[46m([46C)[m[52;163H5[13;55H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,7[10CTop[13;7H([46C)[14;7H[?25h[?25le[52;162H8[14;8H[?25h[?25l[14;7H[K[52;162H7[14;7H[?25h[?25l[95m0[m[52;162H8[14;8H[?25h[?25l)[12;5H[46m([14;8H)[m[52;162H9[14;9H[?25h[?25l)[10;3H[46m([m[12;5H([14;8H)[46m)[m[52;162H10[14;10H[?25h[?25l)[9;1H[46m([m
  ([14;9H)[46m)[m[52;163H1[14;11H[?25h[52;1H[K[14;10H[?25l[52;149H^[[14;10H[52;149H  [14;11H[52;159H14,10[9CTop[14;10H[?25h[?25l[52;149H:[14;10H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 91L, 2649B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcdr: contract violation
  expected: pair?
  given: 0
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 91L, 2649B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([38;5;130mif[m ([36mpair?[m ls)[13;7H([36m+[m [31m1[m (sum-lengths ([36mcdr[m (sum-lengths ([36mcdr[m ls)))))[14;7H[31m0[m))[106m)[m

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[51;9H[35m'()[m[52;159H14,10[9CTop[14;10H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([93mif[m ([1m[96mpair?[m ls)[13;7H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)))))[14;7H[95m0[m))[46m)[m

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[51;9H[38;5;224m'()[m[52;159H14,10[9CTop"lab5-sol.scm" 91L, 2649B[14;10H[?25h[?25l[9;1H([13;25H[46m([26C)[m[14;10H)[52;160H3,52[13;52H[?25h[?25l[13;7H[46m([m[17C([26C))[46m)[m[52;163H4[13;54H[?25h[?25l[13;7H([35C[46m([6C)[m))))[52;162H43[13;43H[?25h[?25l[52;149Hi[13;43H[52;149H [13;43H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,43[9CTop[13;43H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;54H[K[13;42H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H2[13;42H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;53H[K[13;41H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H1[13;41H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;52H[K[13;40H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H0[13;40H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;51H[K[13;39H[46m([m[1m[96mcdr[m ls[46m)[m)[52;162H39[13;39H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;50H[K[13;38H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H8[13;38H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;49H[K[13;37H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H7[13;37H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;48H[K[13;36H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H6[13;36H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;47H[K[13;35H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H5[13;35H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;46H[K[13;34H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H4[13;34H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;45H[K[13;33H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H3[13;33H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;44H[K[13;32H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H2[13;32H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;43H[K[13;31H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H1[13;31H[?25h[?25l[1m[96m[46mc[m[1m[96mdr[m ls)[13;42H[K[13;30H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H0[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l([6C)[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l[46m([6C)[m[52;163H7[13;37H[?25h[?25l[13;25H[46m([m[4C([6C)[46m)[m[52;163H8[13;38H[?25h[?25l[13;12H[46m([m[12C([12C)[46m)[m[52;163H9[13;39H[?25h[?25l[13;41H[K[13;12H([12C[46m([12C)[m)[52;163H8[13;38H[?25h[?25l[13;12H[46m([m[12C([12C)[46m)[m[52;163H9[13;39H[?25h[?25l[13;7H[46m([m[4C([26C)[46m)[m[52;162H40[13;40H[?25h[?25l[52;163H1[13;41H[?25h[?25l[52;163H0[13;40H[?25h[52;1H[K[13;39H[?25l[52;149H^[[13;39H[52;149H  [13;40H[13;7H([4C[46m([26C)[m)[52;159H13,39[9CTop[13;39H[?25h[?25l[52;149H:[13;39H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 91L, 2635B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:17:0
actual:     1
expected:   0
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     1
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     1
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:27:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:37:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:66:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:78:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:87:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 91L, 2635B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([38;5;130mif[m ([36mpair?[m ls)[13;7H([36m+[m [31m1[m [106m([msum-lengths ([36mcdr[m ([36mcdr[m ls))[106m)[m)[14;7H[31m0[m)))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[51;9H[35m'()[m[52;159H13,39[9CTop[13;39H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([93mif[m ([1m[96mpair?[m ls)[13;7H([1m[96m+[m [95m1[m [46m([msum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))[46m)[m)[14;7H[95m0[m)))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[51;9H[38;5;224m'()[m[52;159H13,39[9CTop"lab5-sol.scm" 91L, 2635B[13;39H[?25h[?25l[12;9H[46m([8C)[m[13;12H([26C)[52;160H2,18[12;18H[?25h[?25l[10;3H[46m([m[12;9H([8C)[14;9H[46m)[m[52;160H4,9 [14;9H[?25h[?25l[9;9H[46m([14C)[m
  ([14;9H)[52;159H9,24[9;24H[?25h[?25l[52;149Hi[9;24H[52;149H [9;24H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H9,24[10CTop[9;24H[?25h[?25l[52;162H5[9;25H[?25h[?25l[10;51r[10;1H[L[1;52r[52;159H[K[52;159H10,3[10CTop[9;9H([14C)
  [?25h[?25l([46m([15;10H)[m[52;162H4[10;4H[?25h[?25ld([15;10H)[52;162H5[10;5H[?25h[?25li[52;162H6[10;6H[?25h[?25ls[52;162H7[10;7H[?25h[?25lp[52;162H8[10;8H[?25h[?25ll[52;162H9[10;9H[?25h[?25la[52;162H10[10;10H[?25h[?25l  ([1m[96mdisplay[m[52;163H1[10;11H[?25h[?25l[52;163H2[10;12H[?25h[?25l([46m([15;10H)[m[52;163H3[10;13H[?25h[?25ll([15;10H)[52;163H4[10;14H[?25h[?25ls[52;163H5[10;15H[?25h[?25l)[46m([mls[46m)[m[52;163H6[10;16H[?25h[?25l)  [46m([m[8C(ls)[46m)[m[52;163H7[10;17H[?25h[?25l  ([12C)[11;7H[46m([8C)[m[52;160H1[11;17H[?25h[52;1H[K[11;16H[?25l[52;149H^[[11;16H[52;149H  [11;17H[52;159H11,16[9CTop[11;16H[?25h[?25l[52;149H:[11;16H[52;149H[K[52;1H:[?25hx[?25l[52;2H[K[52;2H[?25h [?25l[11;16H[52;159H11,16[9CTop[11;16H[?25h[?25l[52;149Hi[11;16H[52;149H [11;16H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H11,16[9CTop[11;16H[?25h[?25l[10;3H[46m([12C)[m[11;7H([8C)[52;160H0[10;16H[?25h[?25l[52;163H7[10;17H[?25h[?25l  ([12C)[52;163H8[10;18H[?25h[?25l([46m([15;10H)[m[52;163H9[10;19H[?25h[?25ln([15;10H)[52;162H20[10;20H[?25h[?25le[52;163H1[10;21H[?25h[?25lw[52;163H2[10;22H[?25h[?25ll[52;163H3[10;23H[?25h[?25li[52;163H4[10;24H[?25h[?25ln[52;163H5[10;25H[?25h[?25l[1m[96mnewline[m[52;163H6[10;26H[?25h[?25l)[10;18H[46m([7C)[m[52;163H7[10;27H[?25h[52;1H[K[10;26H[?25l[52;149H^[[10;26H[52;149H  [10;27H[52;159H10,26[9CTop[10;26H[?25h[?25l[52;149H:[10;26H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2662B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: '()
  arguments...: [none]
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2662B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([36mdisplay[m (ls)) [106m([m[36mnewline[m[106m)[m
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([38;5;130mif[m ([36mpair?[m ls)[14;7H([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))[15;7H[31m0[m)))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H10,26[9CTop[10;26H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([1m[96mdisplay[m (ls)) [46m([m[1m[96mnewline[m[46m)[m
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([93mif[m ([1m[96mpair?[m ls)[14;7H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[15;7H[95m0[m)))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H10,26[9CTop"lab5-sol.scm" 92L, 2662B[10;26H[?25h[?25l[52;149Hi[10;26H[52;149H [10;26H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,26[9CTop[10;26H[?25h[?25l[52;163H7[10;27H[?25h[?25l[10;26H[K[10;18H([52;163H6[10;26H[?25h[?25l[10;19Hnewlin[10;25H[K[52;163H5[10;25H[?25h[?25l[10;24H[K[52;163H4[10;24H[?25h[?25l[10;23H[K[52;163H3[10;23H[?25h[?25l[10;22H[K[52;163H2[10;22H[?25h[?25l[10;21H[K[52;163H1[10;21H[?25h[?25l[10;20H[K[52;163H0[10;20H[?25h[?25l[10;19H[K[10;18H[46m([15;10H)[m[52;162H19[10;19H[?25h[?25l[10;18H[K[15;10H)[52;163H8[10;18H[?25h[?25l  [46m([12C)[m[52;163H7[10;17H[?25h[52;1H[K[10;16H[?25l[52;149H^[[10;16H[52;149H  [10;17H[52;159H10,16[9CTop[10;16H[?25h[?25l[52;149H:[10;16H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2652B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: '()
  arguments...: [none]
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2652B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  [106m([m[36mdisplay[m (ls)[106m)[m
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([38;5;130mif[m ([36mpair?[m ls)[14;7H([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))[15;7H[31m0[m)))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H10,16[9CTop[10;16H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  [46m([m[1m[96mdisplay[m (ls)[46m)[m
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([93mif[m ([1m[96mpair?[m ls)[14;7H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[15;7H[95m0[m)))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H10,16[9CTop"lab5-sol.scm" 92L, 2652B[10;16H[?25h[?25l[52;149Hi[10;16H[52;149H [10;16H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,16[9CTop[10;16H[?25h[?25l[52;163H7[10;17H[?25h[?25l[10;16H[K[10;3H([8C[46m([mls[46m)[m[52;163H6[10;16H[?25h[?25l[10;15H[K[10;12H([52;163H5[10;15H[?25h[?25l[10;14H[K[52;163H4[10;14H[?25h[?25l[10;13H[K[10;12H[46m([15;10H)[m[52;163H3[10;13H[?25h[?25l[10;12H[K[15;10H)[52;163H2[10;12H[?25h[?25l[52;163H1[10;11H[?25h[?25l  (displa[10;10H[K[52;163H0[10;10H[?25h[?25l[10;9H[K[52;162H9 [10;9H[?25h[?25l[10;8H[K[52;162H8[10;8H[?25h[?25l[10;7H[K[52;162H7[10;7H[?25h[?25l[10;6H[K[52;162H6[10;6H[?25h[?25l[10;5H[K[52;162H5[10;5H[?25h[?25l[10;4H[K[10;3H[46m([15;10H)[m[52;162H4[10;4H[?25h[?25l[10;3H[K[15;10H)[52;162H3[10;3H[?25h[?25l[52;162H2[10;2H[?25h[?25l[52;162H1[10;1H[?25h[?25l[9;51r[51;1H
[1;52r[9;1H([93mdefine[m (sum-lengths ls)[51;9H[38;5;224m'()[m[52;159H[K[52;159H9,25[10CTop[9;9H[46m([14C)[?25h[?25l[m[9;9H([14C)[52;159H11,6[11;6H[?25h[?25l[12;9H[46m([8C)[m[52;160H2,19[12;19H[?25h[?25l[12;9H([8C)[52;160H1,6 [11;6H[?25h[?25l[52;162H7[11;7H[?25h[?25l([46m([14;9H)[m[52;162H8[11;8H[?25h[?25ld([14;9H)[52;162H9[11;9H[?25h[?25li[52;162H10[11;10H[?25h[?25ls[52;163H1[11;11H[?25h[?25lp[52;163H2[11;12H[?25h[?25ll[52;163H3[11;13H[?25h[?25la[52;163H4[11;14H[?25h[?25l[1m[96mdisplay[m[52;163H5[11;15H[?25h[?25l)[11;7H[46m([7C)[m[52;163H6[11;16H[?25h[?25l[52;163H5[11;15H[?25h[?25l[46m [m) [46m)[m[52;163H6[11;16H[?25h[?25l[46m([m)[11;7H([9C[46m)[m[52;163H7[11;17H[?25h[?25l[1C)[11;7H[46m([m[8C()[46m)[m[52;163H8[11;18H[?25h[?25l[11;7H([8C[46m()[m)[52;163H7[11;17H[?25h[?25l[46ml[m))l[46m)[m[52;163H8[11;18H[?25h[?25l[46ms[m))s[46m)[m[52;163H9[11;19H[?25h[?25l[11;7H[46m([m[8C(ls)[46m)[m[52;162H20[11;20H[?25h[?25l[52;163H1[11;21H[?25h[?25l[52;163H0[11;20H[?25h[?25l[11;7H([8C[46m([mls[46m)[m)[52;162H19[11;19H[?25h[?25l(ls)[52;163H8[11;18H[?25h[?25l[46m([mls[46m)[m[52;163H7[11;17H[?25h[?25l[52;163H6[11;16H[?25h[?25l(ls)[52;163H5[11;15H[?25h[?25l[52;163H4[11;14H[?25h[?25l[52;163H3[11;13H[?25h[?25l[52;163H2[11;12H[?25h[?25l[52;163H1[11;11H[?25h[?25l[52;163H0[11;10H[?25h[?25l[52;162H9 [11;9H[?25h[?25l[46m([12C)[m[52;162H8[11;8H[?25h[?25l[52;162H7[11;7H[?25h[?25l[52;162H8[11;8H[?25h[?25l[52;162H21[11;21H[?25h[?25l[11;20H[K[11;7H([8C[46m([mls[46m)[m[52;163H0[11;20H[?25h[?25l[11;19H[K[11;16H([52;162H19[11;19H[?25h[?25l[11;18H[K[52;163H8[11;18H[?25h[?25l[11;17H[K[11;16H[46m([14;9H)[m[52;163H7[11;17H[?25h[?25l[11;16H[K[14;9H)[52;163H6[11;16H[?25h[?25l[52;163H5[11;15H[?25h[?25l[11;8Hdispla[11;14H[K[52;163H4[11;14H[?25h[?25l[11;13H[K[52;163H3[11;13H[?25h[?25l[11;12H[K[52;163H2[11;12H[?25h[?25l[11;11H[K[52;163H1[11;11H[?25h[?25l[11;10H[K[52;163H0[11;10H[?25h[?25l[11;9H[K[52;162H9 [11;9H[?25h[?25l[11;8H[K[11;7H[46m([14;9H)[m[52;162H8[11;8H[?25h[?25l[11;7H[K[14;9H)[52;162H7[11;7H[?25h[?25l[52;162H6[11;6H[?25h[?25l[12;9H[46m([8C)[m[52;160H2,19[12;19H[?25h[?25l[13;51r[13;1H[L[1;52r[52;159H[K[52;159H13,7[10CTop[12;9H([8C)[13;7H[?25h[?25l([46m([15;8H)[m[52;162H8[13;8H[?25h[?25ld([15;8H)[52;162H9[13;9H[?25h[?25li[52;162H10[13;10H[?25h[?25ls[52;163H1[13;11H[?25h[?25ll[52;163H2[13;12H[?25h[?25l[13;11H[K[52;163H1[13;11H[?25h[?25lp[52;163H2[13;12H[?25h[?25ll[52;163H3[13;13H[?25h[?25la[52;163H4[13;14H[?25h[?25l[1m[96mdisplay[m[52;163H5[13;15H[?25h[?25l[13;8Hdispla[13;14H[K[52;163H4[13;14H[?25h[?25l[13;13H[K[52;163H3[13;13H[?25h[?25l[13;12H[K[52;163H2[13;12H[?25h[?25l[13;11H[K[52;163H1[13;11H[?25h[?25l[13;10H[K[52;163H0[13;10H[?25h[?25l[13;9H[K[52;162H9 [13;9H[?25h[?25l[13;8H[K[13;7H[46m([15;8H)[m[52;162H8[13;8H[?25h[?25l[13;7H[K[15;8H)[52;162H7[13;7H[?25h[?25l[52;162H6[13;6H[?25h[?25l[52;162H5[13;5H[?25h[?25l[52;162H4[13;4H[?25h[?25l[52;162H3[13;3H[?25h[?25l[52;162H2[13;2H[?25h[?25l[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;5H([93mif[m ([1m[96mpair?[m ls)[51;9H[38;5;224m'()[m[52;159H[K[52;159H12,19[9CTop[12;9H[46m([8C)[?25h[?25l[m[12;9H([8C)[52;160H1,6 [11;6H[?25h[?25l
    [46m([14;8H)[m[52;160H2,5[12;5H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[12;18H[K[12;4H[46m([m[93mi[m[52;162H4[12;4H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[12;17H[K[12;3H[46m([m[93mi[m[52;162H3[12;3H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[12;16H[K[12;2H[46m([m[93mi[m[52;162H2[12;2H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[12;15H[K[12;1H[46m([m[93mi[m[52;162H1[12;1H[?25h[?25l[11;51r[51;1H
[1;52r[11;1H    [95m0[m([93mif[m ([1m[96mpair?[m ls)
[46m [m[13;8H)[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H[K[52;159H11,6[10CTop[11;6H[46m([m
 [13;8H[46m)[11;6H[?25h[?25l[m([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[11;19H[K[11;5H[46m([m[93mi[m[52;162H5[11;5H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[11;18H[K[11;4H[46m([m[93mi[m[52;162H4[11;4H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[11;17H[K[11;3H[46m([m[93mi[m[52;162H3[11;3H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[11;16H[K[11;2H[46m([m[93mi[m[52;162H2[11;2H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[11;15H[K[11;1H[46m([m[93mi[m[52;162H1[11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;1H  ([93mif[m ([1m[96mnull?[m ls)([93mif[m ([1m[96mpair?[m ls)
[46m [m[12;8H)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H10,17[9CTop[10;17H[46m([m
 [12;8H[46m)[10;17H[?25h[?25l[m([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;30H[K[10;16H[46m([m[93mi[m[52;163H6[10;16H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;29H[K[10;15H[46m([m[93mi[m[52;163H5[10;15H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;28H[K[10;14H[46m([m[93mi[m[52;163H4[10;14H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;27H[K[10;13H[46m([m[93mi[m[52;163H3[10;13H[?25h[?25lnull([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;26H[K[10;12H[46m([m[93mi[m[52;163H2[10;12H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;25H[K[10;11H[46m([m[93mi[m[52;163H1[10;11H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;24H[K[10;10H[46m([m[93mi[m[52;163H0[10;10H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;23H[K[10;9H[46m([m[93mi[m[52;162H9 [10;9H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;22H[K[10;8H[46m([m[93mi[m[52;162H8[10;8H[?25h[?25l[93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;21H[K[10;7H[46m([m[93mi[m[52;162H7[10;7H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;20H[K[10;6H[46m([m[93mi[m[52;162H6[10;6H[?25h[?25li([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;19H[K[10;5H[46m([m[93mi[m[52;162H5[10;5H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;18H[K[10;4H[46m([m[93mi[m[52;162H4[10;4H[?25h[?25l[93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;17H[K[10;3H[46m([m[93mi[m[52;162H3[10;3H[?25h[?25l([12;8H)[52;160H2,11[12;11H[?25h[?25l[52;160H1,27[11;27H[?25h[?25l[3C[46m([6C)[m[52;162H3[11;37H[?25h[?25l)[11;40H[K[11;36H[46m)[m)[52;163H6[11;36H[?25h[?25l)[11;39H[K[11;35H[46m)[m)[52;163H5[11;35H[?25h[?25l[46m([m))))[11;30H([5C[46m)[m[52;163H6[11;36H[?25h[?25l[4C)[11;30H[46m([m[4C()[46m)[m[52;163H7[11;37H[?25h[?25l[11;30H([4C[46m()[m)[52;163H6[11;36H[?25h[?25l[46ms[m)))))s[46m)[m[52;163H7[11;37H[?25h[?25l[46md[m)))))d[46m)[m[52;163H8[11;38H[?25h[?25l[46mr[m)))))r[46m)[m[52;163H9[11;39H[?25h[?25l[46m [m))))) [46m)[m[52;162H40[11;40H[?25h[?25l[46ml[m)))))l[46m)[m[52;163H1[11;41H[?25h[?25l[46ms[m)))))s[46m)[m[52;163H2[11;42H[?25h[?25l[11;35H(sdr ls)[52;163H1[11;41H[?25h[?25l[52;163H0[11;40H[?25h[?25l[52;162H39[11;39H[?25h[?25l[52;163H8[11;38H[?25h[?25l[52;163H7[11;37H[?25h[?25ldr ls)[11;46H[K[11;35H[46m([mdr ls[46m)[m[52;163H6[11;36H[?25h[?25l[1m[96mcdr[m l[46ms[m)))))[11;35H([5Cs[52;163H7[11;37H[?25h[?25l[11;7H[46m([38C)[m[52;162H4[11;47H[?25h[52;1H[K[11;46H[?25l[52;149H^[[11;46H[52;149H  [11;47H[52;159H11,46[9CTop[11;46H[?25h[?25l[52;149H:[11;46H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2616B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:12:9: read-syntax: unexpected `)`
  context...:
   /usr/share/racket/collects/syntax/module-reader.rkt:186:17: body
   /usr/share/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal
   /usr/share/racket/collects/racket/../syntax/module-reader.rkt:65:9: lang:read-syntax
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2616B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mpair?[m ls)[11;7H[106m([m[36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ([36mcdr[m ls))))[106m)[m[12;7H[31m0[m)))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H11,46[9CTop[11;46H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mpair?[m ls)[11;7H[46m([m[1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ([1m[96mcdr[m ls))))[46m)[m[12;7H[95m0[m)))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H11,46[9CTop"lab5-sol.scm" 89L, 2616B[11;46H[?25h[?25l[11;7H([38C)[52;160H0,12[10;12H[?25h[?25l[52;149H~@k[10;12H[52;149H   [10;11H[52;163H1[10;11H[?25h[?25l[52;149H~@k[10;11H[52;149H   [10;10H[52;163H0[10;10H[?25h[?25l[52;149H~@k[10;10H[52;149H   [10;11H[52;163H1[10;11H[?25h[?25l[52;149H~@k[10;11H[52;149H   [10;12H[52;163H2[10;12H[?25h[?25l[52;149H~@k[10;12H[52;149H   [9;12H[52;159H9,12 [9;12H[?25h[?25l[52;149H~@k[9;12H[52;149H   [10;12H[52;159H10,12[10;12H[?25h[?25l[9;9H[46m([14C)[m[52;159H9,24 [9;24H[?25h[?25l[9;9H([14C)
  [46m([12;8H)[m[52;159H10,3[10;3H[?25h[?25l[52;149H2[10;4H[48;5;242m([m[12;8H)[52;1H[1m-- VISUAL --[m[52;13H[K[52;149H2[10;4H[52;159H10,4[10CTop[10;4H[?25h[?25l[52;149H3[10;5H[93m[48;5;242mi[m[52;162H5[10;5H[?25h[?25l[52;149H4[10;6H[93m[48;5;242mf[m[52;162H6[10;6H[?25h[?25l[52;149H2[11;6H[10;6H[48;5;242m ([m[1m[96m[48;5;242mpair?[m[48;5;242m ls) 
     [m[52;160H1[11;6H[?25h[?25l [48;5;242m [m[46m([38C)[m[52;162H7[11;7H[?25h[?25l[1C[48;5;242m([m[38C)[52;162H8[11;8H[?25h[?25l[52;149H3[12;8H[11;8H[1m[96m[48;5;242m+[m[48;5;242m [m[95m[48;5;242m1[m[48;5;242m (sum-lengths ([m[1m[96m[48;5;242mcdr[m[48;5;242m ([m[1m[96m[48;5;242mcdr[m[48;5;242m ([m[1m[96m[48;5;242mcdr[m[48;5;242m ls))))) 
      [m[95m[48;5;242m0[m[46m)[m[52;160H2[12;8H[?25h[?25l[1C[9;1H[46m([m[12;8H[48;5;242m)[m[46m)[m[52;162H9[12;9H[?25h[?25l[1C[9;1H([12;9H[48;5;242m)[m[52;162H10[12;10H[?25h[?25l[?25h[?25l[52;149Hc[12;10H[52;149H [10;3H[52;4H[1mINSERT [m[52;159H[K[52;159H10,3[10CTop[10;51r[10;1H[2M[1;52r[10;1H  [10;3H[K[51;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[52;159H[K[52;159H10,3[10CTop[10;3H[?25h[?25l[52;162H2[10;2H[?25h[?25l[52;162H1[10;1H[?25h[?25l[9;51r[51;1H
[1;52r[9;1H([93mdefine[m (sum-lengths ls)[51;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[52;159H[K[52;159H9,25[10CTop[9;9H[46m([14C)[?25h[?25l[10;51r[m[10;1H[L[1;52r[52;159H[K[52;159H10,3[10CTop[9;9H([14C)
  [?25h[?25l[11;51r[11;1H[L[1;52r[10;3H([93mcond[m (([1m[96mnull?[m [1m[96mlist[m) [95m0[m)[11;12H(([1m[96mpair?[m [1m[96mlist[m)[52;159H[K[52;159H11,25[9CTop[11;13H[46m([10C)[?25h[?25l[m[11;13H([10C)[52;162H12[11;12H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;24H[K[52;163H1[11;11H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;23H[K[52;163H0[11;10H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;22H[K[52;162H9 [11;9H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;21H[K[52;162H8[11;8H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;20H[K[52;162H7[11;7H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;19H[K[52;162H6[11;6H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;18H[K[52;162H5[11;5H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;17H[K[52;162H4[11;4H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;16H[K[52;162H3[11;3H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;15H[K[52;162H2[11;2H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;14H[K[52;162H1[11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;1H  ([93mcond[m (([1m[96mnull?[m [1m[96mlist[m) [95m0[m)(([1m[96mpair?[m [1m[96mlist[m)[51;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[52;159H[K[52;159H10,25[9CTop[10;25H[?25h[?25l[11;51r[11;1H[L[1;52r[10;25H[K[11;9H(([1m[96mpair?[m [1m[96mlist[m)[52;159H[K[52;159H11,2-9[8CTop[11;9H[?25h[?25l[52;160H0,3  [10;3H[?25h[?25l([93mcond[m (([1m[96mnull?[m [1m[96mlist[m) [95m0[m)[10;24H[K[52;162H2[10;2H[?25h[?25l([93mcond[m (([1m[96mnull?[m [1m[96mlist[m) [95m0[m)[10;23H[K[52;162H1[10;1H[?25h[?25l[9;51r[51;1H
[1;52r[9;2H[93mdefine[m (sum-lengths ls)([93mcond[m (([1m[96mnull?[m [1m[96mlist[m) [95m0[m)[51;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[52;159H[K[52;159H9,25[10CTop[9;25H[?25h[?25l[10;51r[10;1H[L[1;52r[9;25H[K[10;3H([93mcond[m (([1m[96mnull?[m [1m[96mlist[m) [95m0[m)[52;159H[K[52;159H10,3[10CTop[10;3H[?25h[?25l[52;160H1,2-9[11;9H[?25h[?25l[10;10H[46m([10C)[m[52;160H0,21 [10;21H[?25h[?25llis)[46m [m[95m0[m)[10;24H[K[10;20H[46m)[m [52;163H0[10;20H[?25h[?25l)[46m [m[95m0[m)[10;23H[K[10;19H[46m)[m [52;162H19[10;19H[?25h[?25l)[46m [m[95m0[m)[10;22H[K[10;18H[46m)[m [52;163H8[10;18H[?25h[?25l)[46m [m[95m0[m)[10;21H[K[10;17H[46m)[m [52;163H7[10;17H[?25h[?25l[46ml[m) [95m0[m)l[46m)[m[52;163H8[10;18H[?25h[?25l[46ms[m) [95m0[m)s[46m)[m[52;163H9[10;19H[?25h[?25l[10;10H([8C)[11;10H[46m([10C)[m[52;160H1,14-21[11;21H[?25h[?25llis)[11;21H[K[11;20H[46m)[m[52;163H3-20[11;20H[?25h[?25l)[11;20H[K[11;19H[46m)[m[52;163H2-19[11;19H[?25h[?25l)[11;19H[K[11;18H[46m)[m[52;163H1-18[11;18H[?25h[?25l)[11;18H[K[11;17H[46m)[m[52;163H0-17[11;17H[?25h[?25l[46ml[m)l[46m)[m[52;163H1-18[11;18H[?25h[?25l[46ms[m)s[46m)[m[52;163H2-19[11;19H[?25h[?25l[52;163H3-20[11;20H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,3-10[7CTop[11;10H([8C)[12;10H[?25h[?25l([52;162H4-11[12;11H[?25h[?25l[1m[96m+[m[52;162H5-12[12;12H[?25h[?25l[95m+1[m[52;162H6-13[12;13H[?25h[?25l[52;162H7-14[12;14H[?25h[?25l[52;162H6-13[12;13H[?25h[?25l[1m[96m+[m[12;12H[K[52;162H5-12[12;12H[?25h[?25l[52;162H6-13[12;13H[?25h[?25l[95m1[m[52;162H7-14[12;14H[?25h[?25l[52;162H8-15[12;15H[?25h[?25l([52;162H9-16[12;16H[?25h[?25ls[52;162H10-17[12;17H[?25h[?25lu[52;163H1-18[12;18H[?25h[?25lm[52;163H2-19[12;19H[?25h[?25l-[52;163H3-20[12;20H[?25h[?25ll[52;163H4-21[12;21H[?25h[?25le[52;163H5-22[12;22H[?25h[?25ln[52;163H6-23[12;23H[?25h[?25lg[52;163H7-24[12;24H[?25h[?25lt[52;163H8-25[12;25H[?25h[?25lh[52;163H9-26[12;26H[?25h[?25ld[52;162H20-27[12;27H[?25h[?25ls[52;163H1-28[12;28H[?25h[?25l[12;27H[K[52;163H0-27[12;27H[?25h[?25l[12;26H[K[52;162H19-26[12;26H[?25h[?25ls[52;162H20-27[12;27H[?25h[?25l[52;163H1-28[12;28H[?25h[?25l([52;163H2-29[12;29H[?25h[?25lc[52;163H3-30[12;30H[?25h[?25ld[52;163H4-31[12;31H[?25h[?25l[1m[96mcdr[m[52;163H5-32[12;32H[?25h[?25l[52;163H6-33[12;33H[?25h[?25l([52;163H7-34[12;34H[?25h[?25lc[52;163H8-35[12;35H[?25h[?25ld[52;163H9-36[12;36H[?25h[?25l[1m[96mcdr[m[52;162H30-37[12;37H[?25h[?25l[52;163H1-38[12;38H[?25h[?25ll[52;163H2-39[12;39H[?25h[?25li[52;163H3-40[12;40H[?25h[?25ls[52;163H4-41[12;41H[?25h[?25l[1m[96mlist[m[52;163H5-42[12;42H[?25h[?25llis[12;41H[K[52;163H4-41[12;41H[?25h[?25l[12;40H[K[52;163H3-40[12;40H[?25h[?25l[12;39H[K[52;163H2-39[12;39H[?25h[?25ls[52;163H3-40[12;40H[?25h[?25l)[12;33H[46m([6C)[m[52;163H4-41[12;41H[?25h[?25l)[12;28H[46m([m[4C([6C)[46m)[m[52;163H5-42[12;42H[?25h[?25l)[12;15H[46m([m[12C([12C)[46m)[m[52;163H6-43[12;43H[?25h[?25l)[12;10H[46m([m[4C([26C)[46m)[m[52;163H7-44[12;44H[?25h[?25l[13;51r[13;1H[L[1;52r[52;159H[K[52;159H13,3-10[7CTop[12;10H([32C)[13;10H[?25h[?25l([52;162H4-11[13;11H[?25h[?25ls[52;162H5-12[13;12H[?25h[?25lu[52;162H6-13[13;13H[?25h[?25lm[52;162H7-14[13;14H[?25h[?25l-[52;162H8-15[13;15H[?25h[?25ll[52;162H9-16[13;16H[?25h[?25le[52;162H10-17[13;17H[?25h[?25ln[52;163H1-18[13;18H[?25h[?25lg[52;163H2-19[13;19H[?25h[?25lt[52;163H3-20[13;20H[?25h[?25lh[52;163H4-21[13;21H[?25h[?25ls[52;163H5-22[13;22H[?25h[?25l[52;163H6-23[13;23H[?25h[?25l([52;163H7-24[13;24H[?25h[?25ld[52;163H8-25[13;25H[?25h[?25lr[52;163H9-26[13;26H[?25h[?25l[13;25H[K[52;163H8-25[13;25H[?25h[?25l[13;24H[K[52;163H7-24[13;24H[?25h[?25lc[52;163H8-25[13;25H[?25h[?25ld[52;163H9-26[13;26H[?25h[?25l[1m[96mcdr[m[52;162H20-27[13;27H[?25h[?25l[52;163H1-28[13;28H[?25h[?25ll[52;163H2-29[13;29H[?25h[?25ls[52;163H3-30[13;30H[?25h[?25l)[13;23H[46m([6C)[m[52;163H4-31[13;31H[?25h[?25l)[13;10H[46m([m[12C([6C)[46m)[m[52;163H5-32[13;32H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,3-10[7CTop[13;10H([20C)[14;10H[?25h[?25l[52;162H2-9 [14;9H[?25h[?25l[52;162H1  [14;1H[?25h[?25l[13;51r[51;1H
[1;52r[13;10H(sum-lengths ([1m[96mcdr[m ls))[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H[K[52;159H13,25-32      Top[13;10H[46m([20C)[?25h[?25l[m)[11;9H[46m([m[13;10H([20C)[46m)[m[52;163H6-33[13;33H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,2-9[8CTop[11;9H([13;32H)[14;9H[?25h[?25l[52;162H1  [14;1H[?25h[?25l[13;51r[51;1H
[1;52r[13;10H(sum-lengths ([1m[96mcdr[m ls)))[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H[K[52;159H13,26-33      Top[11;9H[46m([13;32H)[?25h[?25l[m[13;32H[K[11;9H([13;10H[46m([20C)[m[52;163H5-32[13;32H[?25h[?25l[12;10H[46m([32C)[m[13;10H([20C)[52;160H2,37-44[12;44H[?25h[?25l[12;10H([32C)[52;160H4,1    [14;1H[?25h[?25l[13;10H[46m([20C)[m[52;160H3,25-32[13;32H[?25h[?25l)[11;9H[46m([m[13;10H([20C)[46m)[m[52;163H6-33[13;33H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,2-9[8CTop[11;9H([13;32H)[14;9H[?25h[?25l[95m0[m[52;162H3-10[14;10H[?25h[?25l)[10;3H[46m([14;10H)[m[52;162H4-11[14;11H[?25h[?25l)[9;1H[46m([m
  ([14;10H)[46m)[m[52;162H5-12[14;12H[?25h[?25l[9;1H([11;9H[46m([13;32H)[m[14;11H)[52;160H3,26-33[13;33H[?25h[52;1H[K[13;32H[?25l[52;149H^[[13;32H[52;149H  [13;33H[52;159H13,25-32      Top[13;32H[?25h[?25l[52;149H:[13;32H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 91L, 2645B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:14:8: cond: bad syntax (clause is not a test-value pair)
  at: 0
  in: (cond ((null? ls) 0) ((pair? ls) (+ 1 (sum-lengths (cdr (cdr ls)))) (sum-lengths (cdr ls))) 0)
  location...:
   lab5-sol.scm:14:8
  context...:
   /usr/share/racket/collects/racket/private/cond.rkt:31:23: loop
   [repeats 1 more time]
   /usr/share/racket/collects/racket/private/cond.rkt:21:13: go
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 91L, 2645B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m (([36mnull?[m ls) [31m0[m)[11;9H[106m([m([36mpair?[m ls)[12;10H([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))[13;10H(sum-lengths ([36mcdr[m ls))[106m)[m[14;9H[31m0[m))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[51;9H[35m'()[m[52;159H13,25-32      Top[13;32H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m (([1m[96mnull?[m ls) [95m0[m)[11;9H[46m([m([1m[96mpair?[m ls)[12;10H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[13;10H(sum-lengths ([1m[96mcdr[m ls))[46m)[m[14;9H[95m0[m))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[51;9H[38;5;224m'()[m[52;159H13,25-32      Top"lab5-sol.scm" 91L, 2645B[13;32H[?25h[?25l[11;9H([46m([8C)[m[13;32H)[52;160H1,12-19[11;19H[?25h[?25l[52;149H:[11;19H[52;1H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[52;1H[K[52;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:14:8: cond: bad syntax (clause is not a test-value pair)
  at: 0
  in: (cond ((null? ls) 0) ((pair? ls) (+ 1 (sum-lengths (cdr (cdr ls)))) (sum-lengths (cdr ls))) 0)
  location...:
   lab5-sol.scm:14:8
  context...:
   /usr/share/racket/collects/racket/private/cond.rkt:31:23: loop
   [repeats 1 more time]
   /usr/share/racket/collects/racket/private/cond.rkt:21:13: go
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 91L, 2645B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m (([36mnull?[m ls) [31m0[m)[11;9H([106m([m[36mpair?[m ls[106m)[m[12;10H([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))[13;10H(sum-lengths ([36mcdr[m ls)))[14;9H[31m0[m))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[51;9H[35m'()[m[52;159H11,12-19      Top[11;19H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m (([1m[96mnull?[m ls) [95m0[m)[11;9H([46m([m[1m[96mpair?[m ls[46m)[m[12;10H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[13;10H(sum-lengths ([1m[96mcdr[m ls)))[14;9H[95m0[m))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[51;9H[38;5;224m'()[m[52;159H11,12-19      Top"lab5-sol.scm" 91L, 2645B[11;19H[?25h[?25l[11;10H([8C)[52;160H0,21   [10;21H[?25h[?25l[10;9H[46m([12C)[m[52;163H2[10;22H[?25h[?25l[9;1H[46m([m[10;9H([12C)[14;11H[46m)[m[52;160H4,4-11[14;11H[?25h[?25l[9;1H(
  [46m([14;10H)[m)[52;162H3-10[14;10H[?25h[?25l[10;3H([5C[46m([12C)[m[14;10H)[52;160H0,22  [10;22H[?25h[?25l[10;9H([12C)[11;10H[46m([8C)[m[52;160H1,12-19[11;19H[?25h[?25l[11;9H[46m([m([8C)[13;32H[46m)[m[52;160H3,25-32[13;32H[?25h[?25l[11;9H([13;32H)[52;162H9-16 [13;16H[?25h[?25l[9;1H[46m([14;11H)[m[52;160H4,4-11[14;11H[?25h[?25l[52;149H~@k[14;11H[52;149H   [14;10H[9;1H(
  [46m([14;10H)[m)[52;162H3-10[14;10H[?25h[?25l[52;149H~@k[14;10H[52;149H   [14;9H[10;3H([14;10H)[52;162H2-9 [14;9H[?25h[?25l[52;149H~@k[14;9H[52;149H   [14;10H[10;3H[46m([14;10H)[m[52;162H3-10[14;10H[?25h[?25l[52;149Hi[14;10H[52;149H [14;10H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,3-10[7CTop[14;10H[?25h[?25l)[14;11H[K[14;9H[46m)[m)[52;162H2-9 [14;9H[?25h[?25l)[46m)[m[14;9H[K[14;1H[46m)[m)[52;162H1  [14;1H[?25h[?25l[13;51r[51;1H
[1;52r[13;1H  [7C(sum-lengths ([1m[96mcdr[m ls)))))[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H[K[52;159H13,26-33      Top[13;33H[46m)[?25h[?25l[9;1H([m
  ([13;33H)[46m)[m[52;163H8-35[13;35H[?25h[?25l[9;1H([10;9H[46m([12C)[m[13;34H)[52;160H0,22   [10;22H[?25h[?25l[10;9H([12C)[11;9H[46m([13;32H)[m[52;160H1,2-9[11;9H[?25h[?25l([46m([8C)[m[13;32H)[52;162H12-19[11;19H[?25h[?25l[11;10H([8C)[12;10H[46m([32C)[m[52;160H2,4-11 [12;11H[?25h[?25l[9;1H[46m([m[12;10H([32C)[13;34H[46m)[m[52;160H3,27-34[13;34H[?25h[52;1H[K[13;33H[?25l[52;149H^[[13;33H[52;149H  [13;34H[9;1H(
  [46m([13;33H)[m)[52;159H13,26-33      Top[13;33H[?25h[?25l[52;149H:[13;33H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 90L, 2642B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcdr: contract violation
  expected: pair?
  given: '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[K./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 90L, 2642B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  [106m([m[38;5;130mcond[m (([36mnull?[m ls) [31m0[m)[11;9H(([36mpair?[m ls)[12;10H([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))[13;10H(sum-lengths ([36mcdr[m ls)))[106m)[m)

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[50;9H[35m'()[m[51;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[52;159H13,26-33      Top[13;33H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  [46m([m[93mcond[m (([1m[96mnull?[m ls) [95m0[m)[11;9H(([1m[96mpair?[m ls)[12;10H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[13;10H(sum-lengths ([1m[96mcdr[m ls)))[46m)[m)

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[50;9H[38;5;224m'()[m[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H13,26-33      Top"lab5-sol.scm" 90L, 2642B[13;33H[?25h[?25l[10;3H([13;33H)[52;160H5,5    [15;5H[?25h[?25l[52;160H6,6[16;6H[?25h[?25l[46m([34C)[m[52;162H1[16;1H[?25h[?25l[52;149H;[16;1H[52;149H [16;1H[?25h[?25l[52;149Hi[16;1H[52;149H [16;1H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H16,1[10CTop[16;1H[?25h[?25l[96m[46m;[m[96m(check-eq? (sum-lengths '(() ())) [m[96m[46m0[m[96m);[m[96m[46m([m[33C[96m0[m[96m[46m)[m[52;162H2[16;2H[?25h[?25l[96m[46m;[m[96m(check-eq? (sum-lengths '(() ())) [m[96m[46m0[m[96m);;[m[96m[46m([m[33C[96m0[m[96m[46m)[m[52;162H3[16;3H[?25h[52;1H[K[16;2H[?25l[52;149H^[[16;2H[52;149H  [16;3H[96m([34C)[m[52;159H16,2[10CTop[16;2H[?25h[?25l[52;149H:[16;2H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 90L, 2644B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcdr: contract violation
  expected: pair?
  given: '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 90L, 2644B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m (([36mnull?[m ls) [31m0[m)[11;9H(([36mpair?[m ls)[12;10H([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))[13;10H(sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[50;9H[35m'()[m[51;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[52;159H16,2[10CTop[16;2H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m (([1m[96mnull?[m ls) [95m0[m)[11;9H(([1m[96mpair?[m ls)[12;10H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[13;10H(sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[50;9H[38;5;224m'()[m[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H16,2[10CTop"lab5-sol.scm" 90L, 2644B[16;2H[?25h[?25l[52;149Hi[16;2H[52;149H [16;2H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H16,2[10CTop[16;2H[?25h[?25l[1C[96m[46m([34C)[m[52;162H3[16;3H[?25h[?25l[96m([m[96m[46mc[m[96mheck-eq? (sum-lengths '(() ())) 0)[m[16;38H[K[16;2H[96m[46m([m[96mc[m[33C[96m[46m)[m[52;162H2[16;2H[?25h[?25l([46mc[mheck-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)[16;37H[K[16;1H[46m([mc[33C[46m)[m[52;162H1[16;1H[?25h[?25l([34C)[52;160H2,12-19[12;19H[?25h[?25l[11;9H[46m([13;32H)[m[52;160H3,25-32[13;32H[?25h[?25l[9;1H[46m([m[11;9H([13;32H))[46m)[m[52;163H7-34[13;34H[?25h[?25l[9;1H([11;10H[46m([8C)[m[13;34H)[52;160H1,12-19[11;19H[?25h[?25l[10;9H[46m([12C)[m[11;10H([8C)[52;160H0,9    [10;9H[?25h[?25l([12C)[11;10H[46m([8C)[m[52;160H1,3-10[11;10H[?25h[?25l([8C)[12;10H[46m([32C)[m[52;160H2,36-43[12;43H[?25h[?25l[12;10H([4C[46m([26C)[m)[52;163H5-42[12;42H[?25h[?25l[12;10H[46m([m[4C([26C)[46m)[m[52;163H7-44[12;44H[?25h[?25l[11;9H[46m([m[12;10H([32C)[13;32H[46m)[m[52;160H3,25-32[13;32H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;159H13,27-34      Top[52;149H^O[13;34H[52;149H2 [13;34H[9;1H[46m([m[11;9H([13;32H))[46m)[m[48;5;242m [?25h[?25l[m[52;149H [11;20H[52;4H[1mINSERTt --[m[52;13H[K[52;159H11,13-20      Top[13;35H[K[9;1H([11;10H[46m([8C)[m[13;34H)[11;20H[?25h[?25l[52;162H3-10 [11;10H[?25h[?25l([8C)[16;27H[38;5;224m[46m()[m[52;160H6,27  [16;27H[?25h[?25l[38;5;224m()[m[52;160H2,7-14[12;14H[?25h[?25l[95mi[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[52;162H8-15[12;15H[?25h[?25l (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls)[12;44H[K[52;162H7-14[12;14H[?25h[?25l (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls)[12;43H[K[52;162H6-13[12;13H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[12;11H[52;159H12,4-11[7CTop[12;10H[48;5;242m([?25h[?25l[m[52;149H3[12;12H[1m[96m[48;5;242m+[m [52;162H5-12[12;12H[?25h[?25l[52;149H4[12;13H[48;5;242m [m[52;162H6-13[12;13H[?25h[?25l[52;149H5[12;14H[48;5;242m [m[46m([26C)[m[52;162H7-14[12;14H[?25h[?25l[52;149H6[12;15H[48;5;242m([m[26C)[52;162H8-15[12;15H[?25h[?25l[52;149H7[12;16H[48;5;242ms[m[52;162H9-16[12;16H[?25h[?25l[52;149H8[12;17H[48;5;242mu[m[52;162H10-17[12;17H[?25h[?25l[52;149H9[12;18H[48;5;242mm[m[52;163H1-18[12;18H[?25h[?25l[52;149H10[12;19H[48;5;242m-[m[52;163H2-19[12;19H[?25h[?25l[52;150H1[12;20H[48;5;242ml[m[52;163H3-20[12;20H[?25h[?25l[52;150H2[12;21H[48;5;242me[m[52;163H4-21[12;21H[?25h[?25l[52;150H3[12;22H[48;5;242mn[m[52;163H5-22[12;22H[?25h[?25l[52;149H2 [13;23H[12;22H[48;5;242mgths ([m[1m[96m[48;5;242mcdr[m[48;5;242m ([m[1m[96m[48;5;242mcdr[m[48;5;242m ls)))) 
         (sum-lengths [m[46m([6C)[m[52;160H3,16-23[13;23H[?25h[?25l[1C[48;5;242m([m[6C)[52;163H7-24[13;24H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mdr[m [52;163H8-25[13;25H[?25h[?25l[1C[1m[96m[48;5;242md[m[1m[96mr[m [52;163H9-26[13;26H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;162H20-27[13;27H[?25h[?25l [48;5;242m [m[52;163H1-28[13;28H[?25h[?25ll[48;5;242ml[m[52;163H2-29[13;29H[?25h[?25ls[48;5;242ms[m[46m)[m[52;163H3-30[13;30H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H4-31[13;31H[?25h[?25l[1C[11;9H[46m([m[13;31H[48;5;242m)[m[46m)[m[52;163H5-32[13;32H[?25h[?25l[1C[10;3H[46m([m[11;9H([13;32H[48;5;242m)[m[46m)[m[52;163H6-33[13;33H[?25h[?25l[1C[9;1H[46m([m
  ([13;33H[48;5;242m)[m[46m)[m[52;163H7-34[13;34H[?25h[?25l[?25h[?25l[52;149Hc[13;34H[52;149H [12;10H[52;4H[1mINSERTt --[m[52;13H[K[52;159H12,3-10[7CTop[12;51r[51;1H
[1;52r[12;1H         [12;10H[K[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H12,3-10[7CTop[9;1H([12;10H[?25h[?25l[52;162H2-9 [12;9H[?25h[?25l[10;9H[46m([12C)[m[52;160H0,9  [10;9H[?25h[?25l[11;51r[11;1H[L[1;52r[10;9H[K[11;5H(([1m[96mnull?[m ls) [95m0[m)[52;159H[K[52;159H11,5[10CTop[11;5H[46m([12C)[m    [?25h[?25l([12C)[52;160H2,2-9[12;9H[?25h[?25l(([1m[96mpair?[m ls)[12;12H[K[52;162H1  [12;1H[?25h[?25l[11;51r[51;1H
[1;52r[11;1H    (([1m[96mnull?[m ls) [95m0[m)(([1m[96mpair?[m ls)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H11,19[9CTop[11;19H[?25h[?25l\(([1m[96mpair?[m ls)[52;162H20[11;20H[?25h[?25l(([1m[96mpair?[m ls)[11;30H[K[52;162H19[11;19H[?25h[?25l[12;51r[12;1H[L[1;52r[11;19H[K[12;5H(([1m[96mpair?[m ls)[52;159H[K[52;159H12,5[10CTop[12;5H[?25h[?25l([46m([8C)[m[52;162H16[12;16H[?25h[?25l[13;51r[13;1H[L[1;52r[52;159H[K[52;159H13,6[10CTop[12;6H([8C)[13;6H[?25h[?25l[52;162H5[13;5H[?25h[?25l[52;162H4[13;4H[?25h[?25l[52;162H3[13;3H[?25h[?25l[52;162H2[13;2H[?25h[?25l[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;5H(([1m[96mpair?[m ls)[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H[K[52;159H12,16[9CTop[12;6H[46m([8C)[?25h[?25l[m[52;163H5[12;15H[?25h[?25l    (([8C)[52;163H4[12;14H[?25h[?25l[52;163H3[12;13H[?25h[?25l[52;163H2[12;12H[?25h[?25l[52;163H1[12;11H[?25h[?25l[52;163H0[12;10H[?25h[?25l[52;162H9 [12;9H[?25h[?25l[52;162H8[12;8H[?25h[?25l[46m([8C)[m[52;162H7[12;7H[?25h[?25lnpair? l[46ms[m)    (([8Cs[52;162H8[12;8H[?25h[?25lopair? ls)[52;162H9[12;9H[?25h[?25ltpair? ls)[52;162H10[12;10H[?25h[?25l[1m[96mnot[m [1m[96mpair?[m ls)[52;163H1[12;11H[?25h[?25l([1m[96mpair?[m ls)[12;11H[46m([8C)[m[52;163H2[12;12H[?25h[?25l([8C)[52;163H3[12;13H[?25h[?25l[52;163H4[12;14H[?25h[?25l[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[12;11H[46m([8C)[m[52;162H20[12;20H[?25h[?25l[52;163H1[12;21H[?25h[?25l)    ([46m([m[4C([8C)[46m)[m[52;163H2[12;22H[?25h[?25l    (([14C)[52;163H3[12;23H[?25h[?25l[95m0[m[52;163H4[12;24H[?25h[?25l)    [46m([18C)[m[52;163H5[12;25H[?25h[?25l[13;51r[13;1H[L[1;52r[52;159H[K[52;159H13,5[10CTop[12;5H([18C)
    [?25h[?25l([52;162H6[13;6H[?25h[?25le[52;162H7[13;7H[?25h[?25ll[52;162H8[13;8H[?25h[?25ls[52;162H9[13;9H[?25h[?25l[93melse[m[52;162H10[13;10H[?25h[?25l[52;163H1[13;11H[?25h[?25l([52;163H2[13;12H[?25h[?25l[1m[96m+[m[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25le[52;163H5[13;15H[?25h[?25l[13;14H[K[52;163H4[13;14H[?25h[?25ls[52;163H5[13;15H[?25h[?25lu[52;163H6[13;16H[?25h[?25lm[52;163H7[13;17H[?25h[?25l-[52;163H8[13;18H[?25h[?25ll[52;163H9[13;19H[?25h[?25le[52;162H20[13;20H[?25h[?25ln[52;163H1[13;21H[?25h[?25lg[52;163H2[13;22H[?25h[?25lt[52;163H3[13;23H[?25h[?25lh[52;163H4[13;24H[?25h[?25ls[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l([52;163H7[13;27H[?25h[?25lc[52;163H8[13;28H[?25h[?25la[52;163H9[13;29H[?25h[?25l[1m[96mcar[m[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25ll[52;163H2[13;32H[?25h[?25ls[52;163H3[13;33H[?25h[?25l)[13;26H[46m([6C)[m[52;163H4[13;34H[?25h[?25l[13;26H([6C)[52;163H5[13;35H[?25h[?25l([52;163H6[13;36H[?25h[?25ls[52;163H7[13;37H[?25h[?25lu[52;163H8[13;38H[?25h[?25lm[52;163H9[13;39H[?25h[?25l-[52;162H40[13;40H[?25h[?25ll[52;163H1[13;41H[?25h[?25le[52;163H2[13;42H[?25h[?25ln[52;163H3[13;43H[?25h[?25lg[52;163H4[13;44H[?25h[?25lt[52;163H5[13;45H[?25h[?25lh[52;163H6[13;46H[?25h[?25ls[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l([52;163H9[13;49H[?25h[?25ld[52;162H50[13;50H[?25h[?25l[13;49H[K[52;162H49[13;49H[?25h[?25lc[52;162H50[13;50H[?25h[?25ld[52;163H1[13;51H[?25h[?25l[1m[96mcdr[m[52;163H2[13;52H[?25h[?25l[52;163H3[13;53H[?25h[?25ll[52;163H4[13;54H[?25h[?25ls[52;163H5[13;55H[?25h[?25l)[13;48H[46m([6C)[m[52;163H6[13;56H[?25h[?25l)[13;35H[46m([m[12C([6C)[46m)[m[52;163H7[13;57H[?25h[?25l[13;35H([20C)[52;162H14[13;14H[?25h[?25l(sum-lengths ([1m[96mcar[m ls) (sum-lengths ([1m[96mcdr[m ls))[52;163H5[13;15H[?25h[?25l[12C[46m([6C)[m[52;162H3[13;35H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls))[13;14H[46m([m[12C([6C)[46m)[m[52;163H6[13;36H[?25h[?25l[13;14H([20C) [46m([20C)[m[52;162H59[13;59H[?25h[?25l)[13;11H[46m([m[25C([20C)[46m)[m[52;162H60[13;60H[?25h[?25l)    [46m([m[5C([47C)[46m)[m[52;163H1[13;61H[?25h[?25l)[10;3H[46m([m[13;5H([54C)[46m)[m[52;163H2[13;62H[?25h[?25l)[9;1H[46m([m
  ([13;61H)[46m)[m[52;163H3[13;63H[?25h[52;1H[K[13;62H[?25l[52;149H^[[13;62H[52;149H  [13;63H[52;159H13,62[9CTop[13;62H[?25h[?25l[52;149H:[13;62H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 91L, 2659B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:27:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:37:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:66:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:78:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:87:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 91L, 2659B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mnot[m ([36mpair?[m ls)) [31m0[m)
    ([38;5;130melse[m ([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))[106m)[m


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[51;9H[35m'()[m[52;159H13,62[9CTop[13;62H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mnot[m ([1m[96mpair?[m ls)) [95m0[m)
    ([93melse[m ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[46m)[m


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[51;9H[38;5;224m'()[m[52;159H13,62[9CTop"lab5-sol.scm" 91L, 2659B[13;62H[?25h[?25l[9;1H([13;62H)[19;26H[38;5;224m[46m([19C)[m[52;160H9,46[19;46H[?25h[?25l[19;26H[38;5;224m([19C)[m[52;160H8,40[18;40H[?25h[?25l[52;160H3,36[13;36H[?25h[?25l[52;160H5,0-1[15;1H[?25h[?25l[12;11H[46m([8C)[m[52;160H2,11 [12;11H[?25h[?25l[52;149Hi[12;11H[52;149H [12;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H12,11[9CTop[12;11H[?25h[?25l([1m[96m[46mp[m[1m[96mair?[m ls)[1C [95m0[m)[12;24H[K[12;10H[46m([m[1m[96mpair?[m ls[46m)[m)[52;163H0[12;10H[?25h[?25lno([1m[96m[46mp[m[1m[96mair?[m ls)[1C [95m0[m)[12;23H[K[12;9H[46m([m[1m[96mpair?[m ls[46m)[m)[52;162H9 [12;9H[?25h[?25l([1m[96m[46mp[m[1m[96mair?[m ls)[1C [95m0[m)[12;22H[K[12;8H[46m([m[1m[96mpair?[m ls[46m)[m)[52;162H8[12;8H[?25h[?25l([1m[96m[46mp[m[1m[96mair?[m ls)[1C [95m0[m)[12;21H[K[12;7H[46m([m[1m[96mpair?[m ls[46m)[m)[52;162H7[12;7H[?25h[?25l[1m[96m[46mp[m[1m[96mair?[m ls)[1C [95m0[m)[12;20H[K[12;6H[46m([m[1m[96mpair?[m ls[46m)[m)[52;162H6[12;6H[?25h[?25l[52;162H7[12;7H[?25h[?25l([8C)[52;162H8[12;8H[?25h[?25l[52;162H9[12;9H[?25h[?25l[52;162H10[12;10H[?25h[?25l[52;163H1[12;11H[?25h[?25l[52;163H2[12;12H[?25h[?25l[52;163H3[12;13H[?25h[?25l[52;163H4[12;14H[?25h[?25l    ([46m([8C)[m[52;163H5[12;15H[?25h[?25l    [46m([m([8C)[46m)[m[52;163H6[12;16H[?25h[?25l[52;163H7[12;17H[?25h[?25l[46m [m[95m0[m)[12;19H[K[12;5H([46m([8C)[m [52;163H6[12;16H[?25h[?25l    (([8C)[52;163H7[12;17H[?25h[?25l    [46m([12C)[m[52;163H8[12;18H[?25h[?25l)[12;18H[K[12;17H[46m)[m[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l[12;17H[K[12;5H([52;163H7[12;17H[?25h[?25l[52;160H3[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[46m([20C)[m[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l([20C)[52;163H3[13;13H[?25h[?25l[46m([47C)[m[52;163H2[13;12H[?25h[?25l[52;163H1[13;11H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;62H[K[13;10H[46m([m[1m[96m+[m [45C[46m)[m)[52;163H0[13;10H[?25h[?25lels([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;61H[K[13;9H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H9 [13;9H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;60H[K[13;8H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H8[13;8H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;59H[K[13;7H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H7[13;7H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;58H[K[13;6H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H6[13;6H[?25h[?25l[1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;57H[K[13;5H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H5[13;5H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;56H[K[13;4H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H4[13;4H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;3H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H3[13;3H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;54H[K[13;2H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H2[13;2H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;53H[K[13;1H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;1H    (([1m[96mpair?[m ls) ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))
[46m        [m[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H[K[52;159H12,17[9CTop[12;17H[46m([47C)[m
        [12;17H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[12;68H[K[12;16H[46m([m[1m[96m+[m [45C[46m)[m)[52;163H6[12;16H[?25h[?25l[46m [m([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls[5C)[12;16H [46m([m[46C)[46m)[m[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l([47C)[52;163H9[12;19H[?25h[?25l[46m([47C)[m[52;163H8[12;18H[?25h[?25l[52;163H7[12;17H[?25h[?25l    ([46m([8C)[m ([47C)[52;163H6[12;16H[?25h[?25l    (([8C) [46m([47C)[m[52;163H7[12;17H[?25h[?25l[13;51r[13;1H[L[1;52r[12;17H[K[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;159H[K[52;159H13,6[10CTop[13;6H[46m([47C)[m     [?25h[?25l[52;162H7[13;7H[?25h[?25l([47C)[52;162H8[13;8H[?25h[?25l [46m([20C)[m[52;162H9[13;9H[?25h[?25l[52;162H10[13;10H[?25h[?25l([20C)[52;163H1[13;11H[?25h[?25l[52;163H2[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l [46m([6C)[m[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l([6C)[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l[46m([6C)[m[52;163H9[13;29H[?25h[?25l[13;9H[46m([m[12C([6C)[46m)[m[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l[13;9H([20C) [46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l([20C)[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[52;163H9[13;39H[?25h[?25l[52;162H40[13;40H[?25h[?25l[52;163H1[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l[52;163H4[13;44H[?25h[?25l [46m([6C)[m[52;163H5[13;45H[?25h[?25l[52;163H6[13;46H[?25h[?25l([6C)[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l[52;163H9[13;49H[?25h[?25l[52;162H50[13;50H[?25h[?25l[52;163H1[13;51H[?25h[?25l[46m([6C)[m[52;163H2[13;52H[?25h[?25l[13;32H[46m([m[12C([6C)[46m)[m[52;163H3[13;53H[?25h[?25l     [46m([m[25C([20C)[46m)[m[52;163H4[13;54H[?25h[?25l[12;5H[46m([m[13;6H([47C)[46m)[m[52;163H5[13;55H[?25h[?25l[10;3H[46m([m[12;5H([13;55H)[46m)[m[52;163H6[13;56H[?25h[?25l[9;1H[46m([m
  ([13;56H)[46m)[m[52;163H7[13;57H[?25h[?25l[52;163H8[13;58H[?25h[?25l[13;57H[K[9;1H(
  [46m([13;56H)[m[52;163H7[13;57H[?25h[?25l[13;56H[K[10;3H([12;5H[46m([13;55H)[m[52;163H6[13;56H[?25h[?25l[13;55H[K[12;5H([13;6H[46m([47C)[m[52;163H5[13;55H[?25h[?25l[52;163H4[13;54H[?25h[?25l     ([25C[46m([20C)[m)[52;163H3[13;53H[?25h[?25l[13;32H([12C[46m([6C)[m)[52;163H2[13;52H[?25h[?25l[13;45H([6C)[52;163H1[13;51H[?25h[?25l[46m([6C)[m[52;163H2[13;52H[?25h[?25l[13;32H[46m([m[12C([6C)[46m)[m[52;163H3[13;53H[?25h[?25l     [46m([m[25C([20C)[46m)[m[52;163H4[13;54H[?25h[?25l[52;163H5[13;55H[?25h[?25l)[12;5H[46m([m[13;6H([47C)[46m)[m[52;163H6[13;56H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,5[10CTop[12;5H([13;55H)
    [?25h[?25l([52;162H6[14;6H[?25h[?25le[52;162H7[14;7H[?25h[?25ll[52;162H8[14;8H[?25h[?25ls[52;162H9[14;9H[?25h[?25l[93melse[m[52;162H10[14;10H[?25h[?25l[52;163H1[14;11H[?25h[?25l[95m0[m[52;163H2[14;12H[?25h[?25l)    [46m([6C)[m[52;163H3[14;13H[?25h[?25l)[10;3H[46m([m[14;5H([6C)[46m)[m[52;163H4[14;14H[?25h[?25l)[9;1H[46m([m
  ([14;13H)[46m)[m[52;163H5[14;15H[?25h[52;1H[K[14;14H[?25l[52;149H^[[14;14H[52;149H  [14;15H[52;159H14,14[9CTop[14;14H[?25h[?25l[52;149HL[14;14H[52;149H [46;1H[9;1H([14;14H)[52;159H46,1 [46;1H[?25h[?25l[52;149Hx[46;1H[52;149H [46;1H[52;149Hdl[46;1H[52;149H  [46;1H[1C[96mfrom lab 4:[m[46;13H[K[46;1H[?25h[?25l[52;149Hi[46;1H[52;149H [46;1H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H46,1[10CTop[46;1H[?25h[?25l[1C[96m;from lab 4:[m[52;162H2[46;2H[?25h[?25l[52;160H5,1[45;1H[?25h[52;1H[K[45;1H[?25l[52;149H^[[45;1H[52;149H  [45;1H[52;159H45,0-1[8CTop[45;1H[?25h[?25l[52;149H:[45;1H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2659B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2659B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ls)[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m [31m0[m)))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr Script started on 2022-03-03 10:14:02-05:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="176" LINES="52"]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ [?2004l
exit

Script done on 2022-03-03 10:14:08-05:00 [COMMAND_EXIT_CODE="0"]
[35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H45,0-1[8CTop[45;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ls)[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m [95m0[m)))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H45,0-1[8CTop"lab5-sol.scm" 92L, 2659B[45;1H[?25h[?25l[13;22H[46m([6C)[m[52;159H13,22 [13;22H[?25h[?25l([6C)[52;162H34[13;34H[?25h[?25l[52;149H:[13;34H[52;1H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[52;1H[K[52;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ [7mscript -a labN.LOG[27mscript -a labN.LOG[1P.LOG5.LOG
[?2004lScript started, output log file is 'lab5.LOG'.
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ [?2004l
exit
Script done.
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git status
[?2004lOn branch lab5
Your branch is up to date with 'origin/lab5'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   lab5-sol.scm[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mlab5.LOG[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git add .
[?2004l[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git commit -m 'working on exercise 1`[K'
[?2004l[lab5 45df85f] working on exercise 1
 2 files changed, 2820 insertions(+), 1 deletion(-)
 create mode 100644 submit/lab5/lab5.LOG
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git push
[?2004lEnumerating objects: 10, done.
Counting objects:  10% (1/10)Counting objects:  20% (2/10)Counting objects:  30% (3/10)Counting objects:  40% (4/10)Counting objects:  50% (5/10)Counting objects:  60% (6/10)Counting objects:  70% (7/10)Counting objects:  80% (8/10)Counting objects:  90% (9/10)Counting objects: 100% (10/10)Counting objects: 100% (10/10), done.
Delta compression using up to 8 threads
Compressing objects:  16% (1/6)Compressing objects:  33% (2/6)Compressing objects:  50% (3/6)Compressing objects:  66% (4/6)Compressing objects:  83% (5/6)Compressing objects: 100% (6/6)Compressing objects: 100% (6/6), done.
Writing objects:  16% (1/6)Writing objects:  33% (2/6)Writing objects:  50% (3/6)Writing objects:  66% (4/6)Writing objects:  83% (5/6)Writing objects: 100% (6/6)Writing objects: 100% (6/6), 18.70 KiB | 2.34 MiB/s, done.
Total 6 (delta 3), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas:   0% (0/3)[Kremote: Resolving deltas:  33% (1/3)[Kremote: Resolving deltas:  66% (2/3)[Kremote: Resolving deltas: 100% (3/3)[Kremote: Resolving deltas: 100% (3/3), completed with 3 local objects.[K
To github.com:DestinyW/i471a.git
   2f2c984..45df85f  lab5 -> lab5
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git stua[K[Katus
[?2004lOn branch lab5
Your branch is up to date with 'origin/lab5'.

nothing to commit, working tree clean
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ g[Kexit
[?2004lexit

Script done on 2022-03-03 10:15:33-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-03-03 12:45:33-05:00 [TERM="xterm-256color" TTY="/dev/pts/8" COLUMNS="176" LINES="52"]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ exit[2Pcdscript -a lab5.LOGgit push -u origin lab5commit -m 'started lab5'ls[Kgit add .[26@cp ~/cs471/labs/lab5/lab5-sol.scm[C[C[21Pd submit/lab5[6@mkdir -p[C[C[C[C[C[C[C[C[C[C[C[Cgit checkout -b lab5[10Pbranchcd ~/i471a[2Pgit pullcd ~/cs471[6Pexitgit status[2Ppushcommit -m 'working on exercise 1'add .[Kstatusscript -a lab5.LOG[1Pvim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2659B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ls)[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m [31m0[m)))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,34[9CTop[13;34H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ls)[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m [95m0[m)))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,34[9CTop"lab5-sol.scm" 92L, 2659B[13;34H[?25h[?25l[9;1H[46m([14;14H)[m[52;160H4,1[14;14H[?25h[?25l[52;149Hi[14;14H[52;149H [14;14H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,14[9CTop[14;14H[?25h[?25l[9;1H([12;6H[46m([8C)[m[14;14H)[52;160H2,15[12;15H[?25h[?25l)[46m )[m [52;163H4[12;14H[?25h[?25l)[46m )[m [52;163H3[12;13H[?25h[?25l[46mc[m)c[46m)[m[52;163H4[12;14H[?25h[?25l[46ma[m)a[46m)[m[52;163H5[12;15H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m)[1m[96mr[m[46m)[m[52;163H6[12;16H[?25h[?25l[46m([m)    (([10C[46m)[m[52;163H7[12;17H[?25h[?25l[46m) [m    ([46m([m[10C [52;163H6[12;16H[?25h[?25lca)[46m )[m [52;163H5[12;15H[?25h[?25l)[46m )[m [52;163H4[12;14H[?25h[?25l)[46m )[m [52;163H3[12;13H[?25h[?25l[46m([m)    (([7C[46m)[m[52;163H4[12;14H[?25h[?25l[46mc[m)c[46m)[m[52;163H5[12;15H[?25h[?25l[46ma[m)a[46m)[m[52;163H6[12;16H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m)[1m[96mr[m[46m)[m[52;163H7[12;17H[?25h[?25l[46m [m) [46m)[m[52;163H8[12;18H[?25h[?25l[46ml[m)l[46m)[m[52;163H9[12;19H[?25h[?25l[46ms[m)s[46m)[m[52;162H20[12;20H[?25h[?25l[1C)    ([46m([m[6C([6C)[46m)[m[52;163H1[12;21H[?25h[?25l[11;5H[46m([12C)[m[12;6H([14C)[52;160H1,19[11;19H[?25h[?25l    ([12C)[12;6H[46m([14C)[m[52;160H2,21[12;21H[?25h[?25l    (([14C)[52;160H3[13;21H[?25h[?25l[52;163H0[13;20H[?25h[?25l[52;162H19[13;19H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H2[13;12H[?25h[?25l[52;163H1[13;11H[?25h[?25l[46m([20C)[m[52;163H0[13;10H[?25h[?25l[52;162H9 [13;9H[?25h[?25l([20C)[52;162H8[13;8H[?25h[?25l[46m([47C)[m[52;162H7[13;7H[?25h[?25l[52;162H6[13;6H[?25h[?25l[52;162H7[13;7H[?25h[?25l([47C)[52;162H8[13;8H[?25h[?25l [46m([20C)[m[52;162H9[13;9H[?25h[?25l[52;162H10[13;10H[?25h[?25l([20C)[52;163H1[13;11H[?25h[?25l[52;163H2[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l [46m([6C)[m[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l([6C)[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l[46m([6C)[m[52;163H9[13;29H[?25h[?25l[13;9H[46m([m[12C([6C)[46m)[m[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l[52;163H0[13;30H[?25h[?25l[13;9H([12C[46m([6C)[m)[52;162H29[13;29H[?25h[?25l[13;9H[46m([m[12C([6C)[46m)[m[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;9H([12C[46m([6C)[m [52;163H0[13;30H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;54H[K[13;22H([6C [52;162H29[13;29H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;53H[K[52;163H8[13;28H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;52H[K[52;163H7[13;27H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[13;51H[K[52;163H6[13;26H[?25h[?25lca (sum-lengths ([1m[96mcdr[m ls)[13;50H[K[52;163H5[13;25H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;49H[K[52;163H4[13;24H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;48H[K[13;22H[46m([23C)[m[52;163H3[13;23H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;47H[K[13;22H [23C)[52;163H2[13;22H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[13;46H[K[52;163H1[13;21H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;45H[K[52;163H0[13;20H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;44H[K[52;162H19[13;19H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;43H[K[52;163H8[13;18H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;42H[K[52;163H7[13;17H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;41H[K[52;163H6[13;16H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;40H[K[52;163H5[13;15H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;39H[K[52;163H4[13;14H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;38H[K[52;163H3[13;13H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;37H[K[52;163H2[13;12H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;36H[K[52;163H1[13;11H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;35H[K[13;9H[46m([23C)[m[52;163H0[13;10H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;34H[K[13;9H [23C)[52;162H9 [13;9H[?25h[?25l[95m1[m (sum-lengths ([1m[96mcdr[m ls))))[52;162H10[13;10H[?25h[?25l [46m([20C)[m[52;163H1[13;11H[?25h[?25l[52;163H2[13;12H[?25h[?25l([20C)[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l [46m([6C)[m[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l([6C)[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[46m([6C)[m[52;163H1[13;31H[?25h[?25l)[13;34H[K[13;30H[46m)[m)[52;163H0[13;30H[?25h[?25l)[13;33H[K[13;29H[46m)[m)[52;162H29[13;29H[?25h[?25l[46mc[m))))c[46m)[m[52;162H30[13;30H[?25h[?25l[46md[m))))d[46m)[m[52;163H1[13;31H[?25h[?25l[1m[96mcd[m[1m[96m[46mr[m))))[1m[96mr[m[46m)[m[52;163H2[13;32H[?25h[?25lcd)[46m)[m[13;35H[K[13;31H[46m)[m)[52;163H1[13;31H[?25h[?25l)[13;34H[K[13;30H[46m)[m)[52;163H0[13;30H[?25h[?25l)[13;33H[K[13;29H[46m)[m)[52;162H29[13;29H[?25h[?25l[46m([m))))[13;24H([5C[46m)[m[52;162H30[13;30H[?25h[?25l[46mc[m))))c[46m)[m[52;163H1[13;31H[?25h[?25l[46md[m))))d[46m)[m[52;163H2[13;32H[?25h[?25l[1m[96mcd[m[1m[96m[46mr[m))))[1m[96mr[m[46m)[m[52;163H3[13;33H[?25h[?25l[46m [m)))) [46m)[m[52;163H4[13;34H[?25h[?25l[46ml[m))))l[46m)[m[52;163H5[13;35H[?25h[?25l[46ms[m))))s[46m)[m[52;163H6[13;36H[?25h[?25l[4C)[13;24H[46m([m[4C([6C)[46m)[m[52;163H7[13;37H[?25h[?25l[13;11H[46m([m[12C([12C)[46m)[m[52;163H8[13;38H[?25h[?25l[13;11H([12C[46m([12C)[m)[52;163H7[13;37H[?25h[?25l[13;24H([4C[46m([6C)[m)[52;163H6[13;36H[?25h[?25l[13;24H[46m([m[4C([6C)[46m)[m[52;163H7[13;37H[?25h[?25l[13;11H[46m([m[12C([12C)[46m)[m[52;163H8[13;38H[?25h[?25l     [46m([m[4C([26C)[46m)[m[52;163H9[13;39H[?25h[?25l[12;5H[46m([m[13;6H([32C)[46m)[m[52;162H40[13;40H[?25h[?25l[9;1H[46m([m[12;5H([13;40H)[14;14H[46m)[m[52;160H4,15[14;15H[?25h[?25l[52;163H4[14;14H[?25h[?25l[9;1H(
  [46m([14;13H)[m)[52;163H3[14;13H[?25h[?25l[10;3H([14;5H[46m([6C)[m)[52;163H2[14;12H[?25h[?25l    ([6C)[52;163H1[14;11H[?25h[?25l    [46m([6C)[m[52;163H2[14;12H[?25h[?25l)[14;14H[K[14;11H[46m)[m)[52;163H1[14;11H[?25h[?25l[46ms[m)))s[46m)[m[52;163H2[14;12H[?25h[?25l[46mu[m)))u[46m)[m[52;163H3[14;13H[?25h[?25l[46mm[m)))m[46m)[m[52;163H4[14;14H[?25h[?25l[46m-[m)))-[46m)[m[52;163H5[14;15H[?25h[?25l)[14;17H[K[14;14H[46m)[m)[52;163H4[14;14H[?25h[?25l)[14;16H[K[14;13H[46m)[m)[52;163H3[14;13H[?25h[?25l)[14;15H[K[14;12H[46m)[m)[52;163H2[14;12H[?25h[?25l)[14;14H[K[14;11H[46m)[m)[52;163H1[14;11H[?25h[?25l)[14;13H[K[14;10H[46m)[m)[52;163H0[14;10H[?25h[?25l[46m [m))) [46m)[m[52;163H1[14;11H[?25h[?25l[46m([m)))    ([6C[46m)[m[52;163H2[14;12H[?25h[?25l[46ms[m)))s[46m)[m[52;163H3[14;13H[?25h[?25l[46mu[m)))u[46m)[m[52;163H4[14;14H[?25h[?25l[46mm[m)))m[46m)[m[52;163H5[14;15H[?25h[?25l[46m-[m)))-[46m)[m[52;163H6[14;16H[?25h[?25l[46ml[m)))l[46m)[m[52;163H7[14;17H[?25h[?25l[46me[m)))e[46m)[m[52;163H8[14;18H[?25h[?25l[46mn[m)))n[46m)[m[52;163H9[14;19H[?25h[?25l[46mg[m)))g[46m)[m[52;162H20[14;20H[?25h[?25l[46mt[m)))t[46m)[m[52;163H1[14;21H[?25h[?25l[46mh[m)))h[46m)[m[52;163H2[14;22H[?25h[?25l[46ms[m)))s[46m)[m[52;163H3[14;23H[?25h[?25l[46m [m))) [46m)[m[52;163H4[14;24H[?25h[?25l[46m([m)))[14;11H([13C[46m)[m[52;163H5[14;25H[?25h[?25l[46ms[m)))s[46m)[m[52;163H6[14;26H[?25h[?25l)[14;28H[K[14;25H[46m)[m)[52;163H5[14;25H[?25h[?25l[46mc[m)))c[46m)[m[52;163H6[14;26H[?25h[?25l[46md[m)))d[46m)[m[52;163H7[14;27H[?25h[?25l[1m[96mcd[m[1m[96m[46mr[m)))[1m[96mr[m[46m)[m[52;163H8[14;28H[?25h[?25l[46m [m))) [46m)[m[52;163H9[14;29H[?25h[?25l[46ml[m)))l[46m)[m[52;162H30[14;30H[?25h[?25l[46ms[m)))s[46m)[m[52;163H1[14;31H[?25h[?25l[3C)[14;11H[46m([m[12C([6C)[46m)[m[52;163H2[14;32H[?25h[?25l[14;11H([12C[46m([6C)[m)[52;163H1[14;31H[?25h[?25l[14;24H([6C)[52;163H0[14;30H[?25h[?25l[46m([6C)[m[52;163H1[14;31H[?25h[?25l[14;11H[46m([m[12C([6C)[46m)[m[52;163H2[14;32H[?25h[?25l    [46m([m[5C([20C)[46m)[m[52;163H3[14;33H[?25h[?25l[10;3H[46m([m[14;5H([27C)[46m)[m[52;163H4[14;34H[?25h[?25l[52;163H5[14;35H[?25h[?25l[52;163H4[14;34H[?25h[?25l[10;3H([14;5H[46m([27C)[m)[52;163H3[14;33H[?25h[?25l    ([5C[46m([20C)[m)[52;163H2[14;32H[?25h[?25l    [46m([m[5C([20C)[46m)[m[52;163H3[14;33H[?25h[?25l[10;3H[46m([m[14;5H([27C)[46m)[m[52;163H4[14;34H[?25h[?25l[52;163H5[14;35H[?25h[?25l)[9;1H[46m([m
  ([14;34H)[46m)[m[52;163H6[14;36H[?25h[?25l[9;1H([13;29H[46m([6C)[m[14;35H)[52;160H3[13;36H[?25h[?25l[13;29H([6C)[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H1[13;31H[?25h[?25l[46m([6C)[m[52;163H0[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l([6C)[52;163H8[13;28H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l [46m([6C)[m[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[52;1H[K[13;29H[?25l[52;149H^[[13;29H[52;149H  [13;30H[52;159H13,29[9CTop[13;29H[?25h[?25l[52;149H:[13;29H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2671B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm exit[K[2Pcdscript -a lab5.LOGgit push -u origin lab5commit -m 'started lab5'ls[Kgit add .[26@cp ~/cs471/labs/lab5/lab5-sol.scm[C[C[21Pd submit/lab5[6@mkdir -p[C[C[C[C[C[C[C[C[C[C[C[Cgit checkout -b lab5[10Pbranchcd ~/i471a[2Pgit pullcd ~/cs471[6Pexitgit status[2Ppushcommit -m 'working on exercise 1'add .[Kstatusscript -a lab5.LOG[1Pvim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     1
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     1
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2671B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcdr[m [106m([m[36mcdr[m ls[106m)[m))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,29[9CTop[13;29H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m [46m([m[1m[96mcdr[m ls[46m)[m))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,29[9CTop"lab5-sol.scm" 92L, 2671B[13;29H[?25h[?25l[9;1H[46m([m[13;29H([6C)[14;35H[46m)[m[52;160H4,35[14;35H[?25h[?25l[9;1H([11;6H[46m([8C)[m[14;35H)[52;160H1,1[11;15H[?25h[?25l[52;149Hi[11;15H[52;149H [11;15H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H11,15[9CTop[11;15H[?25h[?25l)[46m [m[95m0[m)[11;18H[K[11;14H[46m)[m [52;163H4[11;14H[?25h[?25l)[46m [m[95m0[m)[11;17H[K[11;13H[46m)[m [52;163H3[11;13H[?25h[?25l[46mc[m) [95m0[m)c[46m)[m[52;163H4[11;14H[?25h[?25l[46ma[m) [95m0[m)a[46m)[m[52;163H5[11;15H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m) [95m0[m)[1m[96mr[m[46m)[m[52;163H6[11;16H[?25h[?25l[46m([m) [95m0[m)    (([10C[46m)[m[52;163H7[11;17H[?25h[?25l[46ml[m) [95m0[m)l[46m)[m[52;163H8[11;18H[?25h[?25l[46ms[m) [95m0[m)s[46m)[m[52;163H9[11;19H[?25h[?25l[1C) [95m0[m)    ([46m([m[9C(ls)[46m)[m[52;162H20[11;20H[?25h[?25l    (([9C[46m([mls[46m)[m)[52;162H19[11;19H[?25h[?25l(ls)[52;163H8[11;18H[?25h[?25l[46m([mls[46m)[m[52;163H7[11;17H[?25h[?25l[52;163H6[11;16H[?25h[?25l[52;163H7[11;17H[?25h[?25lcar[46ml[ms)[1C [95m0[m)[11;23H[K[11;16Hls))[52;163H6[11;16H[?25h[?25lls)) [95m0[m)[11;22H[K[52;163H5[11;15H[?25h[?25lls)) [95m0[m)[11;21H[K[52;163H4[11;14H[?25h[?25lls)) [95m0[m)[11;20H[K[52;163H3[11;13H[?25h[?25l(ls)) [95m0[m)[11;13H[46m([mls[46m)[m[52;163H4[11;14H[?25h[?25l l[46ms[m)) [95m0[m)[11;13H( ls[52;163H5[11;15H[?25h[?25lcls)) [95m0[m)[52;163H6[11;16H[?25h[?25lals)) [95m0[m)[52;163H7[11;17H[?25h[?25lls)) [95m0[m)[11;23H[K[52;163H6[11;16H[?25h[?25lls)) [95m0[m)[11;22H[K[52;163H5[11;15H[?25h[?25lls)) [95m0[m)[11;21H[K[11;13H[46m([mls[46m)[m[52;163H4[11;14H[?25h[?25lcl[46ms[m)) [95m0[m)[11;13H(cls[52;163H5[11;15H[?25h[?25lals)) [95m0[m)[52;163H6[11;16H[?25h[?25lrls)) [95m0[m)[52;163H7[11;17H[?25h[?25l[1m[96mcar[m ls)) [95m0[m)[52;163H8[11;18H[?25h[?25l[52;163H9[11;19H[?25h[?25l[46m([6C)[m[52;162H20[11;20H[?25h[?25l    ([46m([m[6C([6C)[46m)[m[52;163H1[11;21H[?25h[?25l[52;163H2[11;22H[?25h[?25l    (([14C)[52;163H3[11;23H[?25h[?25l    [46m([18C)[m[52;163H4[11;24H[?25h[?25l    ([18C)[52;160H2,23[12;23H[?25h[?25l    ([46m([14C)[m[52;163H2[12;22H[?25h[?25l[52;163H1[12;21H[?25h[?25l    (([6C[46m([6C)[m)[52;163H0[12;20H[?25h[?25l[12;13H([6C)[52;162H19[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H5[12;15H[?25h[?25l[46m([6C)[m[52;163H4[12;14H[?25h[?25l[52;163H3[12;13H[?25h[?25l([6C)[52;163H2[12;12H[?25h[?25l[52;163H1[12;11H[?25h[?25l[52;163H2[12;12H[?25h[?25l [46m([6C)[m[52;163H3[12;13H[?25h[?25l[52;163H4[12;14H[?25h[?25l([6C)[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[46m([6C)[m[52;162H20[12;20H[?25h[?25l    ([46m([m[6C([6C)[46m)[m[52;163H1[12;21H[?25h[?25l[52;163H2[12;22H[?25h[?25l[52;163H1[12;21H[?25h[?25l    (([6C[46m([6C)[m)[52;163H0[12;20H[?25h[?25l    ([46m([m[6C([6C)[46m)[m[52;163H1[12;21H[?25h[?25l[52;163H2[12;22H[?25h[?25l    (([14C)[52;160H3[13;22H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H0[13;20H[?25h[?25l[52;162H19[13;19H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[46m([26C)[m[52;163H2[13;12H[?25h[?25l[52;163H1[13;11H[?25h[?25l([26C)[52;163H0[13;10H[?25h[?25l [46m([26C)[m[52;163H1[13;11H[?25h[?25l[52;163H2[13;12H[?25h[?25l([26C)[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l [46m([12C)[m[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l([12C)[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l [46m([6C)[m[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l([6C)[52;163H1[13;31H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[46m([6C)[m[52;163H6[13;36H[?25h[?25l[13;24H[46m([m[4C([6C)[46m)[m[52;163H7[13;37H[?25h[?25l[13;24H([4C[46m([6C)[m)[52;163H6[13;36H[?25h[?25l[13;29H([6C)[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H1[13;31H[?25h[?25l[46m([6C)[m[52;163H0[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l([6C)[52;163H8[13;28H[?25h[?25l [46m([6C)[m[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l([6C)[52;163H1[13;31H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[46m([6C)[m[52;163H6[13;36H[?25h[?25l[13;24H[46m([m[4C([6C)[46m)[m[52;163H7[13;37H[?25h[?25l[13;40H[K[13;24H([4C[46m([6C)[m)[52;163H6[13;36H[?25h[?25l[13;29H([6C)[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H1[13;31H[?25h[?25l[46m([6C)[m[52;163H0[13;30H[?25h[?25l([6C)[52;163H1[13;31H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25lcd ls)[13;39H[K[52;163H2[13;32H[?25h[?25l ls)[13;38H[K[52;163H1[13;31H[?25h[?25l ls)[13;37H[K[13;29H[46m([m ls[46m)[m[52;163H0[13;30H[?25h[?25l[46m [mls)[13;36H[K[13;29H ls))[52;162H29[13;29H[?25h[?25lls)[13;35H[K[52;163H8[13;28H[?25h[?25l[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[46m([6C)[m[52;163H1[13;31H[?25h[?25l[13;11H[46m([m[12C([6C)[46m)[m[52;163H2[13;32H[?25h[?25l     [46m([m[4C([20C)[46m)[m[52;163H3[13;33H[?25h[?25l[12;5H[46m([m[13;6H([26C)[46m)[m[52;163H4[13;34H[?25h[52;1H[K[13;33H[?25l[52;149H^[[13;33H[52;149H  [13;34H[12;5H([13;6H[46m([26C)[m)[52;159H13,33[9CTop[13;33H[?25h[?25l[52;149H:[13;33H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2671B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2671B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ([36mcar[m ls)) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H[106m([m[36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))[106m)[m)
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,33[9CTop[13;33H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ([1m[96mcar[m ls)) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H[46m([m[1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))[46m)[m)
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,33[9CTop"lab5-sol.scm" 92L, 2671B[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [14;33H[13;6H([26C)
    [46m([27C)[m[52;160H4[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [13;33H     [46m([26C)[m
    ([27C)[52;160H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;32H     ([4C[46m([20C)[m)[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;31H[13;11H([12C[46m([6C)[m)[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;32H[13;11H[46m([m[12C([6C)[46m)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [12;22H[13;11H([20C)[52;160H2,2[12;22H[?25h[?25l[52;149H~@k[12;22H[52;149H   [11;24H    [46m([18C)[m[52;160H1,24[11;24H[?25h[?25l[52;149H~@k[11;24H[52;149H   [11;23H    ([18C)[52;163H3[11;23H[?25h[?25l[52;149H~@k[11;23H[52;149H   [11;22H[52;163H2[11;22H[?25h[?25l[52;149H~@k[11;22H[52;149H   [11;21H    ([46m([14C)[m[52;163H1[11;21H[?25h[?25l[52;149H~@k[11;21H[52;149H   [11;20H    (([6C[46m([6C)[m)[52;163H0[11;20H[?25h[?25l[52;149H~@k[11;20H[52;149H   [11;19H([6C)[52;162H19[11;19H[?25h[?25l[52;149H~@k[11;19H[52;149H   [11;18H[52;163H8[11;18H[?25h[?25l[52;149H~@k[11;18H[52;149H   [11;17H[52;163H7[11;17H[?25h[?25l[52;149H~@k[11;17H[52;149H   [11;16H[52;163H6[11;16H[?25h[?25l[52;149H~@k[11;16H[52;149H   [11;17H[52;163H7[11;17H[?25h[?25l[52;149H~@k[11;17H[52;149H   [11;18H[52;163H8[11;18H[?25h[?25l[52;149H~@k[11;18H[52;149H   [11;19H[52;163H9[11;19H[?25h[?25l[52;149H~@k[11;19H[52;149H   [11;20H[11;13H[46m([6C)[m[52;162H20[11;20H[?25h[?25l[52;149H~@k[11;20H[52;149H   [11;21H    ([46m([m[6C([6C)[46m)[m[52;163H1[11;21H[?25h[?25l[52;149H~@k[11;21H[52;149H   [11;22H    (([14C)[52;163H2[11;22H[?25h[?25l[52;149H~@k[11;22H[52;149H   [11;23H[52;163H3[11;23H[?25h[?25l[52;149H~@k[11;23H[52;149H   [11;24H    [46m([18C)[m[52;163H4[11;24H[?25h[?25l[52;149H~@k[11;24H[52;149H   [11;23H    ([18C)[52;163H3[11;23H[?25h[?25l[52;149H~@k[11;23H[52;149H   [11;22H[52;163H2[11;22H[?25h[?25l[52;149H~@k[11;22H[52;149H   [11;21H    ([46m([14C)[m[52;163H1[11;21H[?25h[?25l[52;149H~@k[11;21H[52;149H   [11;20H    (([6C[46m([6C)[m)[52;163H0[11;20H[?25h[?25l[52;149H~@k[11;20H[52;149H   [11;21H    ([46m([m[6C([6C)[46m)[m[52;163H1[11;21H[?25h[?25l[52;149H~@k[11;21H[52;149H   [11;20H    (([6C[46m([6C)[m)[52;163H0[11;20H[?25h[?25l[52;149Hi[11;20H[52;149H [11;20H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H11,20[9CTop[11;20H[?25h[?25l[11;13H([6C)[52;162H19[11;19H[?25h[?25l[46m([6C)[m[52;162H20[11;20H[?25h[?25l    ([46m([m[6C([6C)[46m)[m[52;163H1[11;21H[?25h[?25l[46m [m[95m0[m)[11;24H[K[11;6H([6C[46m([6C)[m [52;163H0[11;20H[?25h[?25l[11;13H([6C)[52;162H19[11;19H[?25h[?25l[52;163H8[11;18H[?25h[?25lcarls) [95m0[m)[11;23H[K[52;163H7[11;17H[?25h[?25lls) [95m0[m)[11;22H[K[52;163H6[11;16H[?25h[?25lls) [95m0[m)[11;21H[K[52;163H5[11;15H[?25h[?25lls) [95m0[m)[11;20H[K[11;13H[46m([mls[46m)[m[52;163H4[11;14H[?25h[?25l[46ml[ms)[46m [m[95m0[m)[11;19H[K[11;13Hls) [52;163H3[11;13H[?25h[?25l[52;163H2[11;12H[?25h[?25l[52;163H3[11;13H[?25h[?25l[52;163H4[11;14H[?25h[?25l    ([46m([8C)[m[52;163H5[11;15H[?25h[?25l[52;163H6[11;16H[?25h[?25l    (([8C)[52;163H7[11;17H[?25h[?25l    [46m([12C)[m[52;163H8[11;18H[?25h[?25l    ([12C)[52;160H2[12;18H[?25h[?25l[52;160H3[13;18H[?25h[?25l[52;160H4[14;18H[?25h[?25l[52;163H7[14;17H[?25h[?25l[52;163H6[14;16H[?25h[?25l[52;163H5[14;15H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H3[14;13H[?25h[?25l[46m([20C)[m[52;163H2[14;12H[?25h[?25l[52;163H1[14;11H[?25h[?25l[46mc[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;11Hc[46m([m[19C)[46m)[m[52;163H2[14;12H[?25h[?25l[46mo[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;12Ho[46m([m[19C)[46m)[m[52;163H3[14;13H[?25h[?25l[46mn[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;13Hn[46m([m[19C)[46m)[m[52;163H4[14;14H[?25h[?25l[1m[96mcon[m[1m[96m[46ms[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;14H[1m[96ms[m[46m([m[19C)[46m)[m[52;163H5[14;15H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls[4C)[14;15H [46m([m[19C)[46m)[m[52;163H6[14;16H[?25h[?25l[1C(sum-lengths ([1m[96mcdr[m ls[4C)[14;16H([46m([m[19C)[46m)[m[52;163H7[14;17H[?25h[?25l[46ms[mum-lengths ([1m[96mcdr[m ls)[14;41H[K[14;16H[46m([ms[19C[46m)[m)[52;163H6[14;16H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;40H[K[14;15H[46m([ms[19C[46m)[m)[52;163H5[14;15H[?25h[?25lcon([46ms[mum-lengths ([1m[96mcdr[m ls)[14;39H[K[14;14H[46m([ms[19C[46m)[m)[52;163H4[14;14H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;38H[K[14;13H[46m([ms[19C[46m)[m)[52;163H3[14;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;37H[K[14;12H[46m([ms[19C[46m)[m)[52;163H2[14;12H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;36H[K[14;11H[46m([ms[19C[46m)[m)[52;163H1[14;11H[?25h[?25l[1C(sum-lengths ([1m[96mcdr[m ls[4C)[14;11H([46m([m[19C)[46m)[m[52;163H2[14;12H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls[4C)[14;12H [46m([m[19C)[46m)[m[52;163H3[14;13H[?25h[?25l[46mc[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;13Hc[46m([m[19C)[46m)[m[52;163H4[14;14H[?25h[?25l[46mo[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;14Ho[46m([m[19C)[46m)[m[52;163H5[14;15H[?25h[?25l[46mn[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;15Hn[46m([m[19C)[46m)[m[52;163H6[14;16H[?25h[?25l[1m[96mcon[m[1m[96m[46ms[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;16H[1m[96ms[m[46m([m[19C)[46m)[m[52;163H7[14;17H[?25h[?25lcon([46ms[mum-lengths ([1m[96mcdr[m ls)[14;41H[K[14;16H[46m([ms[19C[46m)[m)[52;163H6[14;16H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;40H[K[14;15H[46m([ms[19C[46m)[m)[52;163H5[14;15H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;39H[K[14;14H[46m([ms[19C[46m)[m)[52;163H4[14;14H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;38H[K[14;13H[46m([ms[19C[46m)[m)[52;163H3[14;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;37H[K[14;12H[46m([ms[19C[46m)[m)[52;163H2[14;12H[?25h[?25l[46mc[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;12Hc[46m([m[19C)[46m)[m[52;163H3[14;13H[?25h[?25l[46mo[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;13Ho[46m([m[19C)[46m)[m[52;163H4[14;14H[?25h[?25l[46mn[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;14Hn[46m([m[19C)[46m)[m[52;163H5[14;15H[?25h[?25l[1m[96mcon[m[1m[96m[46ms[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;15H[1m[96ms[m[46m([m[19C)[46m)[m[52;163H6[14;16H[?25h[?25l([20C)[52;160H3[13;16H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[46m([20C)[m[52;163H2[13;12H[?25h[?25l([20C)[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[46m([20C)[m[52;163H2[13;12H[?25h[?25l[52;163H1[13;11H[?25h[?25l([20C)[52;163H0[13;10H[?25h[?25l[52;162H9 [13;9H[?25h[?25l[52;162H10[13;10H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;34H[K[52;162H9 [13;9H[?25h[?25ls (sum-lengths ([1m[96mcdr[m ls))))[52;162H10[13;10H[?25h[?25lu (sum-lengths ([1m[96mcdr[m ls))))[52;163H1[13;11H[?25h[?25lm (sum-lengths ([1m[96mcdr[m ls))))[52;163H2[13;12H[?25h[?25l- (sum-lengths ([1m[96mcdr[m ls))))[52;163H3[13;13H[?25h[?25ll (sum-lengths ([1m[96mcdr[m ls))))[52;163H4[13;14H[?25h[?25le (sum-lengths ([1m[96mcdr[m ls))))[52;163H5[13;15H[?25h[?25ln (sum-lengths ([1m[96mcdr[m ls))))[52;163H6[13;16H[?25h[?25lg (sum-lengths ([1m[96mcdr[m ls))))[52;163H7[13;17H[?25h[?25lt (sum-lengths ([1m[96mcdr[m ls))))[52;163H8[13;18H[?25h[?25lh (sum-lengths ([1m[96mcdr[m ls))))[52;163H9[13;19H[?25h[?25ls (sum-lengths ([1m[96mcdr[m ls))))[52;162H20[13;20H[?25h[?25l[52;162H19[13;19H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H2[13;12H[?25h[?25l[52;163H1[13;11H[?25h[?25l[52;163H0[13;10H[?25h[?25l[52;162H9 [13;9H[?25h[?25l(sum-lengths (sum-lengths ([1m[96mcdr[m ls))))[13;9H[46m([34C)[m[52;162H10[13;10H[?25h[?25l([34C)[52;163H1[13;11H[?25h[?25l[52;163H2[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l  (sum-lengths ([1m[96mcdr[m ls))))[52;163H2[13;22H[?25h[?25l( (sum-lengths ([1m[96mcdr[m ls))))[13;22H[46m([23C)[m[52;163H3[13;23H[?25h[?25lc (sum-lengths ([1m[96mcdr[m ls[3C)[13;22H([23C)[52;163H4[13;24H[?25h[?25la (sum-lengths ([1m[96mcdr[m ls))))[52;163H5[13;25H[?25h[?25l[1m[96mcar[m (sum-lengths ([1m[96mcdr[m ls))))[52;163H6[13;26H[?25h[?25l  (sum-lengths ([1m[96mcdr[m ls))))[52;163H7[13;27H[?25h[?25ll (sum-lengths ([1m[96mcdr[m ls))))[52;163H8[13;28H[?25h[?25ls (sum-lengths ([1m[96mcdr[m ls))))[52;163H9[13;29H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls))))[13;22H[46m([6C)[m[52;162H30[13;30H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls))))[13;9H[46m([m[12C([6C)[46m)[m[52;163H1[13;31H[?25h[?25l[13;9H([20C) [46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l([20C)[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[52;163H9[13;39H[?25h[?25l[52;162H40[13;40H[?25h[?25l[10;3H[46m([14;40H)[m[52;160H4[14;40H[?25h[?25l[10;3H([14;5H[46m([33C)[m)[52;162H39[14;39H[?25h[?25l    ([5C[46m([26C)[m)[52;163H8[14;38H[?25h[?25l[14;11H([4C[46m([20C)[m)[52;163H7[14;37H[?25h[?25l[14;16H([12C[46m([6C)[m)[52;163H6[14;36H[?25h[?25l[14;29H([6C)[52;163H5[14;35H[?25h[?25l[52;163H4[14;34H[?25h[?25l[52;163H3[14;33H[?25h[?25l[52;163H2[14;32H[?25h[?25l[52;163H1[14;31H[?25h[?25l[46m([6C)[m[52;163H0[14;30H[?25h[?25l[52;162H29[14;29H[?25h[?25l([6C)[52;163H8[14;28H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H5[14;25H[?25h[?25l[52;163H4[14;24H[?25h[?25l[52;163H3[14;23H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H0[14;20H[?25h[?25l[52;162H19[14;19H[?25h[?25l[52;163H8[14;18H[?25h[?25l[46m([20C)[m[52;163H7[14;17H[?25h[?25l[52;163H6[14;16H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls[4C)[14;16H [46m([m[19C)[46m)[m[52;163H7[14;17H[?25h[?25l[52;163H8[14;18H[?25h[?25l([20C)[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25l[52;163H4[14;24H[?25h[?25l[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H8[14;28H[?25h[?25l[52;163H9[14;29H[?25h[?25l  ([1m[96mcdr[m ls)))))[52;162H30[14;30H[?25h[?25l( ([1m[96mcdr[m ls)))))[14;30H[46m([9C)[m[52;163H1[14;31H[?25h[?25lc ([1m[96mcdr[m ls[4C)[14;30H([9C)[52;163H2[14;32H[?25h[?25la ([1m[96mcdr[m ls)))))[52;163H3[14;33H[?25h[?25l[1m[96mcar[m ([1m[96mcdr[m ls)))))[52;163H4[14;34H[?25h[?25l  ([1m[96mcdr[m ls)))))[52;163H5[14;35H[?25h[?25ll ([1m[96mcdr[m ls)))))[52;163H6[14;36H[?25h[?25ls ([1m[96mcdr[m ls)))))[52;163H7[14;37H[?25h[?25l) ([1m[96mcdr[m ls)))))[14;30H[46m([6C)[m[52;163H8[14;38H[?25h[?25l) ([1m[96mcdr[m ls)))))[14;17H[46m([m[12C([6C)[46m)[m[52;163H9[14;39H[?25h[?25l[14;17H([20C) [46m([6C)[m[52;162H40[14;40H[?25h[?25l[1C([1m[96mcdr[m l[46ms[m)))))[14;40H([46m([m[5Cs[46m)[m[52;163H1[14;41H[?25h[?25l[46ms[m([1m[96mcdr[m l[46ms[m)))))[14;41Hs[46m([m[5Cs[46m)[m[52;163H2[14;42H[?25h[?25l[46mu[m([1m[96mcdr[m l[46ms[m)))))[14;42Hu[46m([m[5Cs[46m)[m[52;163H3[14;43H[?25h[?25l[46mm[m([1m[96mcdr[m l[46ms[m)))))[14;43Hm[46m([m[5Cs[46m)[m[52;163H4[14;44H[?25h[?25l[46ms[m([1m[96mcdr[m l[46ms[m)))))[14;44Hs[46m([m[5Cs[46m)[m[52;163H5[14;45H[?25h[?25l[46m-[m([1m[96mcdr[m l[46ms[m)))))[14;45H-[46m([m[5Cs[46m)[m[52;163H6[14;46H[?25h[?25l[46ml[m([1m[96mcdr[m l[46ms[m)))))[14;46Hl[46m([m[5Cs[46m)[m[52;163H7[14;47H[?25h[?25l[46me[m([1m[96mcdr[m l[46ms[m)))))[14;47He[46m([m[5Cs[46m)[m[52;163H8[14;48H[?25h[?25l[46mn[m([1m[96mcdr[m l[46ms[m)))))[14;48Hn[46m([m[5Cs[46m)[m[52;163H9[14;49H[?25h[?25l[46mg[m([1m[96mcdr[m l[46ms[m)))))[14;49Hg[46m([m[5Cs[46m)[m[52;162H50[14;50H[?25h[?25l[46mt[m([1m[96mcdr[m l[46ms[m)))))[14;50Ht[46m([m[5Cs[46m)[m[52;163H1[14;51H[?25h[?25l[46mh[m([1m[96mcdr[m l[46ms[m)))))[14;51Hh[46m([m[5Cs[46m)[m[52;163H2[14;52H[?25h[?25l[46ms[m([1m[96mcdr[m l[46ms[m)))))[14;52Hs[46m([m[5Cs[46m)[m[52;163H3[14;53H[?25h[?25l[46m [m([1m[96mcdr[m l[46ms[m)))))[14;53H [46m([m[5Cs[46m)[m[52;163H4[14;54H[?25h[?25l[52;163H5[14;55H[?25h[?25l([6C)[52;163H6[14;56H[?25h[?25l[52;163H7[14;57H[?25h[?25l[52;163H8[14;58H[?25h[?25l[52;163H9[14;59H[?25h[?25l[52;162H60[14;60H[?25h[?25l[46m([6C)[m[52;163H1[14;61H[?25h[?25l[14;40H[46m([m[13C([6C)[46m)[m[52;163H2[14;62H[?25h[?25l[14;11H[46m([m[28C([21C)[46m)[m[52;163H3[14;63H[?25h[?25l[14;11H([28C[46m([21C)[m)[52;163H2[14;62H[?25h[?25l[4C)[14;11H[46m([m[28C([21C)[46m)[m[52;163H3[14;63H[?25h[?25l    [46m([m[5C([51C)[46m)[m[52;163H4[14;64H[?25h[?25l[10;3H[46m([m[14;5H([58C)[46m)[m[52;163H5[14;65H[?25h[?25l[9;1H[46m([m
  ([14;65H)[46m)[m[52;163H6[14;66H[?25h[52;1H[K[14;65H[?25l[52;149H^[[14;65H[52;149H  [14;66H[9;1H(
  [46m([14;65H)[m)[52;159H14,65[9CTop[14;65H[?25h[?25l[52;149H:[14;65H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2717B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:14:40: sums-lengths: unbound identifier
  in: sums-lengths
  location...:
   lab5-sol.scm:14:40
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2717B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  [106m([m[38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mcons[m (sum-lengths ([36mcar[m ls)) (sums-lengths ([36mcdr[m ls))))[106m)[m)


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,65[9CTop[14;65H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  [46m([m[93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mcons[m (sum-lengths ([1m[96mcar[m ls)) (sums-lengths ([1m[96mcdr[m ls))))[46m)[m)


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,65[9CTop"lab5-sol.scm" 92L, 2717B[14;65H[?25h[?25l[10;3H([14;65H)[52;160H6,0-1[16;1H[?25h[?25l[9;1H[46m([14;66H)[m[52;160H4,66 [14;66H[?25h[?25l[52;149H~@k[14;66H[52;149H   [14;65H[9;1H(
  [46m([14;65H)[m)[52;163H5[14;65H[?25h[?25l[52;149H~@k[14;65H[52;149H   [14;64H[10;3H([14;5H[46m([58C)[m)[52;163H4[14;64H[?25h[?25l[52;149H~@k[14;64H[52;149H   [14;63H    ([5C[46m([51C)[m)[52;163H3[14;63H[?25h[?25l[52;149H~@k[14;63H[52;149H   [14;62H[14;11H([28C[46m([21C)[m)[52;163H2[14;62H[?25h[?25l[52;149H~@k[14;62H[52;149H   [14;61H[14;40H([13C[46m([6C)[m)[52;163H1[14;61H[?25h[?25l[52;149H~@k[14;61H[52;149H   [14;60H([6C)[52;163H0[14;60H[?25h[?25l[52;149H~@k[14;60H[52;149H   [14;59H[52;162H59[14;59H[?25h[?25l[52;149H~@k[14;59H[52;149H   [14;58H[52;163H8[14;58H[?25h[?25l[52;149H~@k[14;58H[52;149H   [14;57H[52;163H7[14;57H[?25h[?25l[52;149H~@k[14;57H[52;149H   [14;56H[52;163H6[14;56H[?25h[?25l[52;149H~@k[14;56H[52;149H   [14;55H[52;163H5[14;55H[?25h[?25l[52;149H~@k[14;55H[52;149H   [14;54H[46m([6C)[m[52;163H4[14;54H[?25h[?25l[52;149H~@k[14;54H[52;149H   [14;53H ([6C)[52;163H3[14;53H[?25h[?25l[52;149H~@k[14;53H[52;149H   [14;52H[52;163H2[14;52H[?25h[?25l[52;149H~@k[14;52H[52;149H   [14;51H[52;163H1[14;51H[?25h[?25l[52;149H~@k[14;51H[52;149H   [14;50H[52;163H0[14;50H[?25h[?25l[52;149H~@k[14;50H[52;149H   [14;49H[52;162H49[14;49H[?25h[?25l[52;149H~@k[14;49H[52;149H   [14;48H[52;163H8[14;48H[?25h[?25l[52;149H~@k[14;48H[52;149H   [14;47H[52;163H7[14;47H[?25h[?25l[52;149H~@k[14;47H[52;149H   [14;46H[52;163H6[14;46H[?25h[?25l[52;149H~@k[14;46H[52;149H   [14;45H[52;163H5[14;45H[?25h[?25l[52;149H~@k[14;45H[52;149H   [14;44H[52;163H4[14;44H[?25h[?25l[52;149H~@k[14;44H[52;149H   [14;43H[52;163H3[14;43H[?25h[?25l[52;149H~@k[14;43H[52;149H   [14;42H[52;163H2[14;42H[?25h[?25l[52;149H~@k[14;42H[52;149H   [14;41H[52;163H1[14;41H[?25h[?25l[52;149H~@k[14;41H[52;149H   [14;40H[46m([21C)[m[52;163H0[14;40H[?25h[?25l[52;149H~@k[14;40H[52;149H   [14;39H ([21C)[52;162H39[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [14;38H[14;17H[46m([20C)[m[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;37H[14;17H([12C[46m([6C)[m)[52;163H7[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;36H([6C)[52;163H6[14;36H[?25h[?25l[52;149H~@k[14;36H[52;149H   [14;35H[52;163H5[14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [14;34H[52;163H4[14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H   [14;33H[52;163H3[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [14;32H[52;163H2[14;32H[?25h[?25l[52;149H~@k[14;32H[52;149H   [14;31H[52;163H1[14;31H[?25h[?25l[52;149H~@k[14;31H[52;149H   [14;30H[46m([6C)[m[52;163H0[14;30H[?25h[?25l[52;149H~@k[14;30H[52;149H   [14;29H ([6C)[52;162H29[14;29H[?25h[?25l[52;149H~@k[14;29H[52;149H   [14;30H[46m([6C)[m[52;162H30[14;30H[?25h[?25l[52;149H~@k[14;30H[52;149H   [14;29H ([6C)[52;162H29[14;29H[?25h[?25l[52;149Hi[14;29H[52;149H [14;29H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,29[9CTop[14;29H[?25h[?25l [46m([6C)[m[52;162H30[14;30H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;66H[K[14;29H[46m([m[1m[96mcar[m ls[46m)[m)[52;162H29[14;29H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;65H[K[14;28H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H8[14;28H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;64H[K[14;27H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H7[14;27H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;63H[K[14;26H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H6[14;26H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;62H[K[14;25H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H5[14;25H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;61H[K[14;24H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H4[14;24H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;60H[K[14;23H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H3[14;23H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;59H[K[14;22H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H2[14;22H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;58H[K[14;21H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H1[14;21H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;57H[K[14;20H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H0[14;20H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;56H[K[14;19H[46m([m[1m[96mcar[m ls[46m)[m)[52;162H19[14;19H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;55H[K[14;18H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H8[14;18H[?25h[?25l[1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;54H[K[14;17H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H7[14;17H[?25h[?25l[52;163H8[14;18H[?25h[?25l([6C)[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25l[46m([6C)[m[52;163H4[14;24H[?25h[?25l[14;11H[46m([m[5C([6C)[46m)[m[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l[46m [m(sums-lengths ([1m[96mcdr[m ls)[14;53H[K[14;11H([5C[46m([6C)[m [52;163H5[14;25H[?25h[?25l[14;17H([6C)[52;160H3[13;25H[?25h[?25l[52;160H2,23[12;23H[?25h[?25l[52;160H3,25[13;25H[?25h[52;1H[K[13;24H[?25l[52;149H^[[13;24H[52;149H  [13;25H[52;159H13,24[9CTop[13;24H[?25h[?25l[52;149H:[13;24H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2703B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:14:26: sums-lengths: unbound identifier
  in: sums-lengths
  location...:
   lab5-sol.scm:14:26
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2703B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mcons[m ([36mcar[m ls) (sums-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,24[9CTop[13;24H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mcons[m ([1m[96mcar[m ls) (sums-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,24[9CTop"lab5-sol.scm" 92L, 2703B[13;24H[?25h[?25l[52;149H:[13;24H[52;1H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[52;1H[K[52;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2703B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mcons[m ([36mcar[m ls) (sums-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,24[9CTop[13;24H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mcons[m ([1m[96mcar[m ls) (sums-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,24[9CTop"lab5-sol.scm" 92L, 2703B[13;24H[?25h[?25l[52;160H4,27[14;27H[?25h[?25l[52;149H~@k[14;27H[52;149H   [14;26H[46m([21C)[m[52;163H6[14;26H[?25h[?25l[52;149H~@k[14;26H[52;149H   [14;25H ([21C)[52;163H5[14;25H[?25h[?25l[52;149H~@k[14;25H[52;149H   [14;24H[14;17H[46m([6C)[m[52;163H4[14;24H[?25h[?25l[52;149H~@k[14;24H[52;149H   [14;23H([6C)[52;163H3[14;23H[?25h[?25l[52;149H~@k[14;23H[52;149H   [14;22H[52;163H2[14;22H[?25h[?25l[52;149H~@k[14;22H[52;149H   [14;21H[52;163H1[14;21H[?25h[?25l[52;149H~@k[14;21H[52;149H   [14;20H[52;163H0[14;20H[?25h[?25l[52;149H~@k[14;20H[52;149H   [14;19H[52;162H19[14;19H[?25h[?25l[52;149H~@k[14;19H[52;149H   [14;18H[52;163H8[14;18H[?25h[?25l[52;149H~@k[14;18H[52;149H   [14;19H[52;163H9[14;19H[?25h[?25l[52;149H~@k[14;19H[52;149H   [14;20H[52;162H20[14;20H[?25h[?25l[52;149H~@k[14;20H[52;149H   [14;21H[52;163H1[14;21H[?25h[?25l[52;149H~@k[14;21H[52;149H   [14;22H[52;163H2[14;22H[?25h[?25l[52;149H~@k[14;22H[52;149H   [14;23H[52;163H3[14;23H[?25h[?25l[52;149H~@k[14;23H[52;149H   [14;24H[14;17H[46m([6C)[m[52;163H4[14;24H[?25h[?25l[52;149H~@k[14;24H[52;149H   [14;25H[14;17H([6C)[52;163H5[14;25H[?25h[?25l[52;149H~@k[14;25H[52;149H   [14;26H[46m([21C)[m[52;163H6[14;26H[?25h[?25l[52;149H~@k[14;26H[52;149H   [14;27H([21C)[52;163H7[14;27H[?25h[?25l[52;149H~@k[14;27H[52;149H   [14;28H[52;163H8[14;28H[?25h[?25l[52;149H~@k[14;28H[52;149H   [14;29H[52;163H9[14;29H[?25h[?25l[52;149H~@k[14;29H[52;149H   [14;30H[52;162H30[14;30H[?25h[?25l[52;149H~@k[14;30H[52;149H   [14;31H[52;163H1[14;31H[?25h[?25l[52;149H~@k[14;31H[52;149H   [14;32H[52;163H2[14;32H[?25h[?25l[52;149H~@k[14;32H[52;149H   [14;33H[52;163H3[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [14;34H[52;163H4[14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H   [14;35H[52;163H5[14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [14;36H[52;163H6[14;36H[?25h[?25l[52;149H~@k[14;36H[52;149H   [14;37H[52;163H7[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;38H[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;39H[52;163H9[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [14;40H[46m([6C)[m[52;162H40[14;40H[?25h[?25l[52;149H~@k[14;40H[52;149H   [14;41H([6C)[52;163H1[14;41H[?25h[?25l[52;149H~@k[14;41H[52;149H   [14;42H[52;163H2[14;42H[?25h[?25l[52;149H~@k[14;42H[52;149H   [14;43H[52;163H3[14;43H[?25h[?25l[52;149H~@k[14;43H[52;149H   [14;44H[52;163H4[14;44H[?25h[?25l[52;149H~@k[14;44H[52;149H   [14;45H[52;163H5[14;45H[?25h[?25l[52;149H~@k[14;45H[52;149H   [14;46H[52;163H6[14;46H[?25h[?25l[52;149H~@k[14;46H[52;149H   [14;47H[14;40H[46m([6C)[m[52;163H7[14;47H[?25h[?25l[52;149H~@k[14;47H[52;149H   [14;48H[14;26H[46m([m[13C([6C)[46m)[m[52;163H8[14;48H[?25h[?25l[52;149H~@k[14;48H[52;149H   [14;49H[14;11H[46m([m[14C([21C)[46m)[m[52;163H9[14;49H[?25h[?25l[52;149H~@k[14;49H[52;149H   [14;50H    [46m([m[5C([37C)[46m)[m[52;162H50[14;50H[?25h[?25l[52;149H~@k[14;50H[52;149H   [14;51H[10;3H[46m([m[14;5H([44C)[46m)[m[52;163H1[14;51H[?25h[?25l[52;149H~@k[14;51H[52;149H   [14;52H[9;1H[46m([m
  ([14;51H)[46m)[m[52;163H2[14;52H[?25h[?25l[52;149H~@k[14;52H[52;149H   [13;52H[9;1H([13;45H[46m([6C)[m[14;52H)[52;160H3[13;52H[?25h[?25l[52;149H~@k[13;52H[52;149H   [13;53H[13;32H[46m([m[12C([6C)[46m)[m[52;163H3[13;53H[?25h[?25l[52;149H~@k[13;53H[52;149H   [13;54H     [46m([m[25C([20C)[46m)[m[52;163H4[13;54H[?25h[?25l[52;149H~@k[13;54H[52;149H   [13;53H     ([25C[46m([20C)[m)[52;163H3[13;53H[?25h[?25l[52;149H~@k[13;53H[52;149H   [13;52H[13;32H([12C[46m([6C)[m)[52;163H2[13;52H[?25h[?25l[52;149H~@k[13;52H[52;149H   [13;51H([6C)[52;163H1[13;51H[?25h[?25l[52;149H~@k[13;51H[52;149H   [13;50H[52;163H0[13;50H[?25h[?25l[52;149H~@k[13;50H[52;149H   [13;49H[52;162H49[13;49H[?25h[?25l[52;149H~@k[13;49H[52;149H   [13;48H[52;163H8[13;48H[?25h[?25l[52;149H~@k[13;48H[52;149H   [13;47H[52;163H7[13;47H[?25h[?25l[52;149H~@k[13;47H[52;149H   [13;46H[52;163H6[13;46H[?25h[?25l[52;149H~@k[13;46H[52;149H   [13;45H[46m([6C)[m[52;163H5[13;45H[?25h[?25l[52;149H~@k[13;45H[52;149H   [13;44H ([6C)[52;163H4[13;44H[?25h[?25l[52;149H~@k[13;44H[52;149H   [13;43H[52;163H3[13;43H[?25h[?25l[52;149H~@k[13;43H[52;149H   [13;42H[52;163H2[13;42H[?25h[?25l[52;149H~@k[13;42H[52;149H   [13;41H[52;163H1[13;41H[?25h[?25l[52;149H~@k[13;41H[52;149H   [13;40H[52;163H0[13;40H[?25h[?25l[52;149H~@k[13;40H[52;149H   [13;39H[52;162H39[13;39H[?25h[?25l[52;149H~@k[13;39H[52;149H   [13;38H[52;163H8[13;38H[?25h[?25l[52;149H~@k[13;38H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;35H[52;163H5[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;34H[52;163H4[13;34H[?25h[?25l[52;149H~@k[13;34H[52;149H   [13;33H[52;163H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;32H[46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;31H ([20C)[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;30H[13;9H[46m([20C)[m[52;163H0[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [13;29H[13;9H([12C[46m([6C)[m)[52;162H29[13;29H[?25h[?25l[52;149H~@k[13;29H[52;149H   [13;30H[13;9H[46m([m[12C([6C)[46m)[m[52;162H30[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [13;31H[13;9H([20C)[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;32H[46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;33H([20C)[52;163H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;34H[52;163H4[13;34H[?25h[?25l[52;149H~@k[13;34H[52;149H   [13;35H[52;163H5[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [13;38H[52;163H8[13;38H[?25h[?25l[52;149H~@k[13;38H[52;149H   [13;39H[52;163H9[13;39H[?25h[?25l[52;149H~@k[13;39H[52;149H   [13;40H[52;162H40[13;40H[?25h[?25l[52;149H~@k[13;40H[52;149H   [13;41H[52;163H1[13;41H[?25h[?25l[52;149H~@k[13;41H[52;149H   [13;42H[52;163H2[13;42H[?25h[?25l[52;149H~@k[13;42H[52;149H   [13;43H[52;163H3[13;43H[?25h[?25l[52;149H~@k[13;43H[52;149H   [13;44H[52;163H4[13;44H[?25h[?25l[52;149H~@k[13;44H[52;149H   [13;45H[46m([6C)[m[52;163H5[13;45H[?25h[?25l[52;149H~@k[13;45H[52;149H   [13;46H([6C)[52;163H6[13;46H[?25h[?25l[52;149H~@k[13;46H[52;149H   [13;47H[52;163H7[13;47H[?25h[?25l[52;149H~@k[13;47H[52;149H   [13;48H[52;163H8[13;48H[?25h[?25l[52;149H~@k[13;48H[52;149H   [13;49H[52;163H9[13;49H[?25h[?25l[52;149H~@k[13;49H[52;149H   [13;50H[52;162H50[13;50H[?25h[?25l[52;149H~@k[13;50H[52;149H   [13;51H[52;163H1[13;51H[?25h[?25l[52;149H~@k[13;51H[52;149H   [13;52H[13;45H[46m([6C)[m[52;163H2[13;52H[?25h[?25l[52;149H~@k[13;52H[52;149H   [13;53H[13;32H[46m([m[12C([6C)[46m)[m[52;163H3[13;53H[?25h[?25l[52;149H~@k[13;53H[52;149H   [13;54H     [46m([m[25C([20C)[46m)[m[52;163H4[13;54H[?25h[?25l[52;149H~@k[13;54H[52;149H   [13;55H[12;5H[46m([m[13;6H([47C)[46m)[m[52;163H5[13;55H[?25h[?25l[52;149H~@k[13;55H[52;149H   [14;52H[9;1H[46m([m[12;5H([13;55H)[14;52H[46m)[m[52;160H4,52[14;52H[?25h[?25l[52;149H~@k[14;52H[52;149H   [13;55H[9;1H([12;5H[46m([13;55H)[m[14;52H)[52;160H3,55[13;55H[?25h[?25l[52;149H~@k[13;55H[52;149H   [13;54H[12;5H([13;6H[46m([47C)[m)[52;163H4[13;54H[?25h[?25l[52;149H~@k[13;54H[52;149H   [13;53H     ([25C[46m([20C)[m)[52;163H3[13;53H[?25h[?25l[52;149H~@k[13;53H[52;149H   [13;52H[13;32H([12C[46m([6C)[m)[52;163H2[13;52H[?25h[?25l[52;149H~@k[13;52H[52;149H   [13;51H([6C)[52;163H1[13;51H[?25h[?25l[52;149H~@k[13;51H[52;149H   [13;50H[52;163H0[13;50H[?25h[?25l[52;149H~@k[13;50H[52;149H   [13;49H[52;162H49[13;49H[?25h[?25l[52;149H~@k[13;49H[52;149H   [13;48H[52;163H8[13;48H[?25h[?25l[52;149H~@k[13;48H[52;149H   [13;47H[52;163H7[13;47H[?25h[?25l[52;149H~@k[13;47H[52;149H   [13;46H[52;163H6[13;46H[?25h[?25l[52;149H~@k[13;46H[52;149H   [13;45H[46m([6C)[m[52;163H5[13;45H[?25h[?25l[52;149H~@k[13;45H[52;149H   [13;44H ([6C)[52;163H4[13;44H[?25h[?25l[52;149H~@k[13;44H[52;149H   [14;44H[52;160H4[14;44H[?25h[?25l[52;149H~@k[14;44H[52;149H   [14;45H[52;163H5[14;45H[?25h[?25l[52;149H~@k[14;45H[52;149H   [14;46H[52;163H6[14;46H[?25h[?25l[52;149H~@k[14;46H[52;149H   [14;47H[14;40H[46m([6C)[m[52;163H7[14;47H[?25h[?25l[52;149H~@k[14;47H[52;149H   [14;48H[14;26H[46m([m[13C([6C)[46m)[m[52;163H8[14;48H[?25h[?25l[52;149H~@k[14;48H[52;149H   [14;49H[14;11H[46m([m[14C([21C)[46m)[m[52;163H9[14;49H[?25h[?25l[52;149H~@k[14;49H[52;149H   [14;50H    [46m([m[5C([37C)[46m)[m[52;162H50[14;50H[?25h[?25l[52;149H~@k[14;50H[52;149H   [14;51H[10;3H[46m([m[14;5H([44C)[46m)[m[52;163H1[14;51H[?25h[?25l[52;149H~@k[14;51H[52;149H   [14;52H[9;1H[46m([m
  ([14;51H)[46m)[m[52;163H2[14;52H[?25h[?25l[52;149H~@k[14;52H[52;149H   [14;51H[9;1H(
  [46m([14;51H)[m)[52;163H1[14;51H[?25h[?25l[52;149H~@k[14;51H[52;149H   [14;50H[10;3H([14;5H[46m([44C)[m)[52;163H0[14;50H[?25h[?25l[52;149H~@k[14;50H[52;149H   [14;49H    ([5C[46m([37C)[m)[52;162H49[14;49H[?25h[?25l[52;149H~@k[14;49H[52;149H   [14;48H[14;11H([14C[46m([21C)[m)[52;163H8[14;48H[?25h[?25l[52;149H~@k[14;48H[52;149H   [14;47H[14;26H([13C[46m([6C)[m)[52;163H7[14;47H[?25h[?25l[52;149H~@k[14;47H[52;149H   [14;46H([6C)[52;163H6[14;46H[?25h[?25l[52;149H~@k[14;46H[52;149H   [14;45H[52;163H5[14;45H[?25h[?25l[52;149H~@k[14;45H[52;149H   [14;44H[52;163H4[14;44H[?25h[?25l[52;149H~@k[14;44H[52;149H   [14;43H[52;163H3[14;43H[?25h[?25l[52;149H~@k[14;43H[52;149H   [14;42H[52;163H2[14;42H[?25h[?25l[52;149H~@k[14;42H[52;149H   [14;41H[52;163H1[14;41H[?25h[?25l[52;149H~@k[14;41H[52;149H   [14;40H[46m([6C)[m[52;163H0[14;40H[?25h[?25l[52;149H~@k[14;40H[52;149H   [14;39H ([6C)[52;162H39[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [14;38H[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;37H[52;163H7[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;36H[52;163H6[14;36H[?25h[?25l[52;149H~@k[14;36H[52;149H   [14;35H[52;163H5[14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [14;34H[52;163H4[14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H   [14;33H[52;163H3[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [13;33H[52;160H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;32H[46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;31H ([20C)[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;30H[13;9H[46m([20C)[m[52;163H0[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [14;30H[13;9H([20C)[52;160H4[14;30H[?25h[?25l[52;149H~@k[14;30H[52;149H   [14;29H[52;162H29[14;29H[?25h[?25l[52;149H~@k[14;29H[52;149H   [14;28H[52;163H8[14;28H[?25h[?25l[52;149H~@k[14;28H[52;149H   [14;27H[52;163H7[14;27H[?25h[?25l[52;149H~@k[14;27H[52;149H   [14;26H[46m([21C)[m[52;163H6[14;26H[?25h[?25l[52;149H~@k[14;26H[52;149H   [14;27H([21C)[52;163H7[14;27H[?25h[?25l[52;149H~@k[14;27H[52;149H   [14;26H[46m([21C)[m[52;163H6[14;26H[?25h[?25l[52;149Hi[14;26H[52;149H [14;26H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,26[9CTop[14;26H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;52H[K[14;25H[46m([ms[20C[46m)[m)[52;163H5[14;25H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;51H[K[14;24H[46m([ms[20C[46m)[m)[52;163H4[14;24H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;50H[K[14;23H[46m([ms[20C[46m)[m)[52;163H3[14;23H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;49H[K[14;22H[46m([ms[20C[46m)[m)[52;163H2[14;22H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;48H[K[14;21H[46m([ms[20C[46m)[m)[52;163H1[14;21H[?25h[?25lca([46ms[mums-lengths ([1m[96mcdr[m ls)[14;47H[K[14;20H[46m([ms[20C[46m)[m)[52;163H0[14;20H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;46H[K[14;19H[46m([ms[20C[46m)[m)[52;162H19[14;19H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;45H[K[14;18H[46m([ms[20C[46m)[m)[52;163H8[14;18H[?25h[?25l[46ms[mums-lengths ([1m[96mcdr[m ls)[14;44H[K[14;17H[46m([ms[20C[46m)[m)[52;163H7[14;17H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;43H[K[14;16H[46m([ms[20C[46m)[m)[52;163H6[14;16H[?25h[?25lcon([46ms[mums-lengths ([1m[96mcdr[m ls)[14;42H[K[14;15H[46m([ms[20C[46m)[m)[52;163H5[14;15H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;41H[K[14;14H[46m([ms[20C[46m)[m)[52;163H4[14;14H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;40H[K[14;13H[46m([ms[20C[46m)[m)[52;163H3[14;13H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;39H[K[14;12H[46m([ms[20C[46m)[m)[52;163H2[14;12H[?25h[?25l[46ms[mums-lengths ([1m[96mcdr[m ls)[14;38H[K[14;11H[46m([ms[20C[46m)[m)[52;163H1[14;11H[?25h[?25l[52;163H2[14;12H[?25h[?25l([21C)[52;163H3[14;13H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H5[14;15H[?25h[?25l[52;163H6[14;16H[?25h[?25l[52;163H7[14;17H[?25h[?25l[52;163H8[14;18H[?25h[?25l[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25l[52;163H4[14;24H[?25h[?25l [46m([6C)[m[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l([6C)[52;163H7[14;27H[?25h[?25l[52;163H8[14;28H[?25h[?25l[52;163H9[14;29H[?25h[?25l[52;162H30[14;30H[?25h[?25l[52;163H1[14;31H[?25h[?25l[46m([6C)[m[52;163H2[14;32H[?25h[?25l[14;11H[46m([m[13C([6C)[46m)[m[52;163H3[14;33H[?25h[?25l    [46m([m[5C([21C)[46m)[m[52;163H4[14;34H[?25h[?25l[14;37H[K[14;5H([5C[46m([21C)[m)[52;163H3[14;33H[?25h[?25l    [46m([m[5C([21C)[46m)[m[52;163H4[14;34H[?25h[?25l[10;3H[46m([m[14;5H([28C)[46m)[m[52;163H5[14;35H[?25h[?25l[9;1H[46m([m
  ([14;35H)[46m)[m[52;163H6[14;36H[?25h[?25l[52;163H7[14;37H[?25h[?25l[52;163H6[14;36H[?25h[?25l[9;1H([14;36H)[52;160H3[13;36H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[52;1H[K[13;33H[?25l[52;149H^[[13;33H[52;149H  [13;34H[52;159H13,33[9CTop[13;33H[?25h[?25l[52;149H:[13;33H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2687B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:14:11: sums-lengths: unbound identifier
  in: sums-lengths
  location...:
   lab5-sol.scm:14:11
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2687B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sums-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,33[9CTop[13;33H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sums-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,33[9CTop"lab5-sol.scm" 92L, 2687B[13;33H[?25h[?25l[52;162H18[13;18H[?25h[?25l[52;162H25[13;25H[?25h[?25l[14;25H[46m([6C)[m[52;160H4[14;25H[?25h[?25l([6C)[52;160H3,11[13;11H[?25h[?25l[52;160H5,1-8[15;8H[?25h[?25l[14;5H[46m([28C)[m[52;160H4,34 [14;34H[?25h[?25l[9;1H[46m([m[14;5H([28C))[46m)[m[52;163H6[14;36H[?25h[?25l[9;1H([14;36H)[52;162H15[14;15H[?25h[?25l[10C[46m([6C)[m[52;162H32[14;32H[?25h[?25l[9;1H[46m([m[14;25H([6C))))[46m)[m[52;163H6[14;36H[?25h[?25l[9;1H([14;36H)[52;162H29[14;29H[?25h[?25l[52;162H16[14;16H[?25h[?25l[52;149H~@k[14;16H[52;149H   [14;15H[52;163H5[14;15H[?25h[?25l[52;149H~@k[14;15H[52;149H   [14;16H[52;163H6[14;16H[?25h[?25l[52;149Hi[14;16H[52;149H [14;16H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,16[9CTop[14;16H[?25h[?25l-lengths ([1m[96mcdr[m ls)[14;36H[K[52;163H5[14;15H[?25h[52;1H[K[14;14H[?25l[52;149H^[[14;14H[52;149H  [14;15H[52;159H14,14[9CTop[14;14H[?25h[?25l[52;149H:[14;14H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2686B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2686B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,14[9CTop[14;14H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,14[9CTop"lab5-sol.scm" 92L, 2686B[14;14H[?25h[?25l[46m([20C)[m[52;163H1[14;11H[?25h[?25l[52;149Hi[14;11H[52;149H [14;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,11[9CTop[14;11H[?25h[?25l[46mc[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;11Hc[46m([m[19C)[46m)[m[52;163H2[14;12H[?25h[?25l[46mo[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;12Ho[46m([m[19C)[46m)[m[52;163H3[14;13H[?25h[?25l[46mn[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;13Hn[46m([m[19C)[46m)[m[52;163H4[14;14H[?25h[?25l[1m[96mcon[m[1m[96m[46ms[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;14H[1m[96ms[m[46m([m[19C)[46m)[m[52;163H5[14;15H[?25h[?25lcon([46ms[mum-lengths ([1m[96mcdr[m ls)[14;39H[K[14;14H[46m([ms[19C[46m)[m)[52;163H4[14;14H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;38H[K[14;13H[46m([ms[19C[46m)[m)[52;163H3[14;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;37H[K[14;12H[46m([ms[19C[46m)[m)[52;163H2[14;12H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;36H[K[14;11H[46m([ms[19C[46m)[m)[52;163H1[14;11H[?25h[?25l[1C(sum-lengths ([1m[96mcdr[m ls[4C)[14;11H([46m([m[19C)[46m)[m[52;163H2[14;12H[?25h[?25l[46mc[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;12Hc[46m([m[19C)[46m)[m[52;163H3[14;13H[?25h[?25l[46mo[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;13Ho[46m([m[19C)[46m)[m[52;163H4[14;14H[?25h[?25l[46mn[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;14Hn[46m([m[19C)[46m)[m[52;163H5[14;15H[?25h[?25l[1m[96mcon[m[1m[96m[46ms[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;15H[1m[96ms[m[46m([m[19C)[46m)[m[52;163H6[14;16H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls[4C)[14;16H [46m([m[19C)[46m)[m[52;163H7[14;17H[?25h[?25l[1C(sum-lengths ([1m[96mcdr[m ls[4C)[14;17H([46m([m[19C)[46m)[m[52;163H8[14;18H[?25h[?25l[46m)[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;18H)[46m([m[19C)[46m)[m[52;163H9[14;19H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls[4C)[14;19H [46m([m[19C)[46m)[m[52;162H20[14;20H[?25h[?25l[46m()[m ([20C)[52;162H19[14;19H[?25h[?25l[52;163H8[14;18H[?25h[?25l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;18Hs[46m)[m[52;163H9[14;19H[?25h[?25l[46mu[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;19Hu[46m)[m[52;162H20[14;20H[?25h[?25l[46mm[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;20Hm[46m)[m[52;163H1[14;21H[?25h[?25l[46me[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;21He[46m)[m[52;163H2[14;22H[?25h[?25l)[46m [m(sum-lengths ([1m[96mcdr[m ls)[14;48H[K[14;21H[46m)[m [52;163H1[14;21H[?25h[?25l[46m-[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;21H-[46m)[m[52;163H2[14;22H[?25h[?25l[46ml[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;22Hl[46m)[m[52;163H3[14;23H[?25h[?25l[46me[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;23He[46m)[m[52;163H4[14;24H[?25h[?25l[46mn[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;24Hn[46m)[m[52;163H5[14;25H[?25h[?25l[46mg[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;25Hg[46m)[m[52;163H6[14;26H[?25h[?25l[46mt[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;26Ht[46m)[m[52;163H7[14;27H[?25h[?25l[46mh[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;27Hh[46m)[m[52;163H8[14;28H[?25h[?25l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;28Hs[46m)[m[52;163H9[14;29H[?25h[?25l[46m [m) (sum-lengths ([1m[96mcdr[m ls)))))[14;29H [46m)[m[52;162H30[14;30H[?25h[?25l[46m([m) (sum-lengths ([1m[96mcdr[m ls)))))[14;17H([13C[46m)[m[52;163H1[14;31H[?25h[?25l[46mc[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;31Hc[46m)[m[52;163H2[14;32H[?25h[?25l[46ma[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;32Ha[46m)[m[52;163H3[14;33H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;33H[1m[96mr[m[46m)[m[52;163H4[14;34H[?25h[?25l[46m [m) (sum-lengths ([1m[96mcdr[m ls)))))[14;34H [46m)[m[52;163H5[14;35H[?25h[?25l[46ml[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;35Hl[46m)[m[52;163H6[14;36H[?25h[?25l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;36Hs[46m)[m[52;163H7[14;37H[?25h[?25l[1C) (sum-lengths ([1m[96mcdr[m ls)))))[14;17H[46m([m[12C([6C)[46m)[m[52;163H8[14;38H[?25h[?25l[52;163H9[14;39H[?25h[?25l[14;17H([20C)[52;160H3[13;39H[?25h[52;1H[K[13;38H[?25l[52;149H^[[13;38H[52;149H  [13;39H[52;159H13,38[9CTop[13;38H[?25h[?25l[52;149H:[13;38H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2715B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:9:0: read-syntax: expected a `)` to close `(`
  possible cause: indentation suggests a missing `)` before line 17
  context...:
   /usr/share/racket/collects/syntax/module-reader.rkt:186:17: body
   /usr/share/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal
   /usr/share/racket/collects/racket/../syntax/module-reader.rkt:65:9: lang:read-syntax
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2715B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mcons[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,38[9CTop[13;38H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mcons[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,38[9CTop"lab5-sol.scm" 92L, 2715B[13;38H[?25h[?25l[14;30H[46m([6C)[m[52;160H4,37[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;38H[14;17H[46m([m[12C([6C)[46m)[m[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;39H[14;17H([20C)[52;163H9[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [14;40H[46m([20C)[m[52;162H40[14;40H[?25h[?25l[52;149H~@k[14;40H[52;149H   [14;41H([20C)[52;163H1[14;41H[?25h[?25l[52;149H~@k[14;41H[52;149H   [14;42H[52;163H2[14;42H[?25h[?25l[52;149H~@k[14;42H[52;149H   [14;43H[52;163H3[14;43H[?25h[?25l[52;149H~@k[14;43H[52;149H   [14;44H[52;163H4[14;44H[?25h[?25l[52;149H~@k[14;44H[52;149H   [14;45H[52;163H5[14;45H[?25h[?25l[52;149H~@k[14;45H[52;149H   [14;46H[52;163H6[14;46H[?25h[?25l[52;149H~@k[14;46H[52;149H   [14;47H[52;163H7[14;47H[?25h[?25l[52;149H~@k[14;47H[52;149H   [14;48H[52;163H8[14;48H[?25h[?25l[52;149H~@k[14;48H[52;149H   [14;49H[52;163H9[14;49H[?25h[?25l[52;149H~@k[14;49H[52;149H   [14;50H[52;162H50[14;50H[?25h[?25l[52;149H~@k[14;50H[52;149H   [14;51H[52;163H1[14;51H[?25h[?25l[52;149H~@k[14;51H[52;149H   [14;52H[52;163H2[14;52H[?25h[?25l[52;149H~@k[14;52H[52;149H   [14;53H[46m([6C)[m[52;163H3[14;53H[?25h[?25l[52;149H~@k[14;53H[52;149H   [14;54H([6C)[52;163H4[14;54H[?25h[?25l[52;149H~@k[14;54H[52;149H   [14;55H[52;163H5[14;55H[?25h[?25l[52;149H~@k[14;55H[52;149H   [14;56H[52;163H6[14;56H[?25h[?25l[52;149H~@k[14;56H[52;149H   [14;57H[52;163H7[14;57H[?25h[?25l[52;149H~@k[14;57H[52;149H   [14;58H[52;163H8[14;58H[?25h[?25l[52;149H~@k[14;58H[52;149H   [14;59H[52;163H9[14;59H[?25h[?25l[52;149H~@k[14;59H[52;149H   [14;60H[14;53H[46m([6C)[m[52;162H60[14;60H[?25h[?25l[52;149H~@k[14;60H[52;149H   [14;61H[14;40H[46m([m[12C([6C)[46m)[m[52;163H1[14;61H[?25h[?25l[52;149H~@k[14;61H[52;149H   [14;62H[14;11H[46m([m[28C([20C)[46m)[m[52;163H2[14;62H[?25h[?25l[52;149H~@k[14;62H[52;149H   [14;63H    [46m([m[5C([50C)[46m)[m[52;163H3[14;63H[?25h[?25l[52;149H~@k[14;63H[52;149H   [14;64H[10;3H[46m([m[14;5H([57C)[46m)[m[52;163H4[14;64H[?25h[?25l[52;149H~@k[14;64H[52;149H   [14;64H[?25h[?25l[52;149Hi[14;64H[52;149H [14;64H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,64[9CTop[14;64H[?25h[?25l[1C)[9;1H[46m([m
  ([14;64H)[46m)[m[52;163H5[14;65H[?25h[52;1H[K[14;64H[?25l[52;149H^[[14;64H[52;149H  [14;65H[9;1H(
  [46m([14;64H)[m)[52;159H14,64[9CTop[14;64H[?25h[?25l[52;149H:[14;64H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2716B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     '(0 0 . 0)
expected:   0
--------------------
car: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2716B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  [106m([m[38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mcons[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))[106m)[m)


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,64[9CTop[14;64H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  [46m([m[93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mcons[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[46m)[m)


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,64[9CTop"lab5-sol.scm" 92L, 2716B[14;64H[?25h[?25l[10;3H([14;64H)[52;162H3[14;34H[?25h[?25l[52;163H9[14;39H[?25h[?25l[14;17H[46m([20C)[m[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;37H[14;17H([12C[46m([6C)[m)[52;163H7[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;36H([6C)[52;163H6[14;36H[?25h[?25l[52;149H~@k[14;36H[52;149H   [14;37H[14;30H[46m([6C)[m[52;163H7[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;38H[14;17H[46m([m[12C([6C)[46m)[m[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;39H[14;17H([20C)[52;163H9[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [14;40H[46m([20C)[m[52;162H40[14;40H[?25h[?25l[52;149H~@k[14;40H[52;149H   [14;39H ([20C)[52;162H39[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [14;38H[14;17H[46m([20C)[m[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;37H[14;17H([12C[46m([6C)[m)[52;163H7[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;36H([6C)[52;163H6[14;36H[?25h[?25l[52;149H~@k[14;36H[52;149H   [14;35H[52;163H5[14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [14;34H[52;163H4[14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H   [14;33H[52;163H3[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [14;32H[52;163H2[14;32H[?25h[?25l[52;149H~@k[14;32H[52;149H   [14;31H[52;163H1[14;31H[?25h[?25l[52;149H~@k[14;31H[52;149H   [14;30H[46m([6C)[m[52;163H0[14;30H[?25h[?25l[52;149H~@k[14;30H[52;149H   [14;29H ([6C)[52;162H29[14;29H[?25h[?25l[52;149H~@k[14;29H[52;149H   [14;28H[52;163H8[14;28H[?25h[?25l[52;149H~@k[14;28H[52;149H   [14;27H[52;163H7[14;27H[?25h[?25l[52;149H~@k[14;27H[52;149H   [14;26H[52;163H6[14;26H[?25h[?25l[52;149H~@k[14;26H[52;149H   [14;25H[52;163H5[14;25H[?25h[?25l[52;149H~@k[14;25H[52;149H   [14;24H[52;163H4[14;24H[?25h[?25l[52;149H~@k[14;24H[52;149H   [14;23H[52;163H3[14;23H[?25h[?25l[52;149H~@k[14;23H[52;149H   [14;22H[52;163H2[14;22H[?25h[?25l[52;149H~@k[14;22H[52;149H   [14;21H[52;163H1[14;21H[?25h[?25l[52;149H~@k[14;21H[52;149H   [14;20H[52;163H0[14;20H[?25h[?25l[52;149H~@k[14;20H[52;149H   [14;19H[52;162H19[14;19H[?25h[?25l[52;149H~@k[14;19H[52;149H   [14;18H[52;163H8[14;18H[?25h[?25l[52;149H~@k[14;18H[52;149H   [14;17H[46m([20C)[m[52;163H7[14;17H[?25h[?25l[52;149H~@k[14;17H[52;149H   [14;16H ([20C)[52;163H6[14;16H[?25h[?25l[52;149H~@k[14;16H[52;149H   [14;17H[46m([20C)[m[52;163H7[14;17H[?25h[?25l[52;149H~@k[14;17H[52;149H   [14;16H ([20C)[52;163H6[14;16H[?25h[?25l[52;149Hi[14;16H[52;149H [14;16H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,16[9CTop[14;16H[?25h[?25lcon (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;65H[K[52;163H5[14;15H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;64H[K[52;163H4[14;14H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;63H[K[52;163H3[14;13H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;62H[K[14;11H[46m([46C)[m[52;163H2[14;12H[?25h[?25la (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls[5C)[14;11H([46C)[52;163H3[14;13H[?25h[?25lp (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H4[14;14H[?25h[?25lp (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H5[14;15H[?25h[?25le (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H6[14;16H[?25h[?25ln (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H7[14;17H[?25h[?25l[1m[96mappend[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H8[14;18H[?25h[52;1H[K[14;17H[?25l[52;149H^[[14;17H[52;149H  [14;18H[52;159H14,17[9CTop[14;17H[?25h[?25l[52;149H:[14;17H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2718B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lappend: contract violation
  expected: list?
  given: 0
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2718B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mappend[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,17[9CTop[14;17H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mappend[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,17[9CTop"lab5-sol.scm" 92L, 2718B[14;17H[?25h[?25l[2C[46m([20C)[m[52;163H9[14;19H[?25h[?25l([20C)[52;163H8[14;18H[?25h[?25l[52;149Hi[14;18H[52;149H [14;18H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,18[9CTop[14;18H[?25h[?25lappen (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;67H[K[52;163H7[14;17H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;66H[K[52;163H6[14;16H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;65H[K[52;163H5[14;15H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;64H[K[52;163H4[14;14H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;63H[K[52;163H3[14;13H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;62H[K[14;11H[46m([46C)[m[52;163H2[14;12H[?25h[?25ll (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls[5C)[14;11H([46C)[52;163H3[14;13H[?25h[?25li (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H4[14;14H[?25h[?25ls (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H5[14;15H[?25h[?25l[1m[96mlist[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H6[14;16H[?25h[52;1H[K[14;15H[?25l[52;149H^[[14;15H[52;149H  [14;16H[52;159H14,15[9CTop[14;15H[?25h[?25l[52;149H:[14;15H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2716B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     '(0 (0 0))
expected:   0
--------------------
car: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2716B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mlist[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,15[9CTop[14;15H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mlist[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,15[9CTop"lab5-sol.scm" 92L, 2716B[14;15H[?25h[?25l[52;162H29[14;29H[?25h[?25l    [46m([57C)[m[52;162H5 [14;5H[?25h[?25l[52;149H2[14;6H[48;5;242m([m[57C)[52;1H[1m-- VISUAL --[m[52;13H[K[52;149H2[14;6H[52;159H14,6[10CTop[14;6H[?25h[?25l[52;149H5[14;9H[93m[48;5;242mels[m[52;162H9[14;9H[?25h[?25l[52;149H8[14;12H[93m[48;5;242me[m[48;5;242m ([m[52;162H12[14;12H[?25h[?25l[52;149H14[14;18H[1m[96m[48;5;242mlist[m[48;5;242m ([m[52;163H8[14;18H[?25h[?25l[52;149H21[14;25H[14;18H[48;5;242msum-len[m[52;162H25[14;25H[?25h[?25l[52;150H6[14;30H[48;5;242mgths [m[46m([6C)[m[52;162H30[14;30H[?25h[?25l[52;150H9[14;33H[48;5;242m([m[1m[96m[48;5;242mca[m[1m[96mr[m ls)[52;163H3[14;33H[?25h[?25l[52;149H33[14;37H[1m[96m[48;5;242mr[m[48;5;242m ls[m[46m)[m[52;163H7[14;37H[?25h[?25l[52;150H6[14;40H[48;5;242m)) [m[46m([20C)[m[52;162H40[14;40H[?25h[?25l[52;150H8[14;42H[48;5;242m(s[m[19C)[52;163H2[14;42H[?25h[?25l[52;150H9[14;43H[48;5;242mu[m[52;163H3[14;43H[?25h[?25l[52;149H40[14;44H[48;5;242mm[m[52;163H4[14;44H[?25h[?25l[52;150H1[14;45H[48;5;242m-[m[52;163H5[14;45H[?25h[?25l[52;150H3[14;47H[48;5;242mle[m[52;163H7[14;47H[?25h[?25l[52;150H5[14;49H[48;5;242mng[m[52;163H9[14;49H[?25h[?25l[52;150H7[14;51H[48;5;242mth[m[52;162H51[14;51H[?25h[?25l[52;150H9[14;53H[48;5;242ms [m[46m([6C)[m[52;163H3[14;53H[?25h[?25l[52;149H52[14;56H[48;5;242m([m[1m[96m[48;5;242mcd[m[1m[96mr[m ls)[52;163H6[14;56H[?25h[?25l[52;150H5[14;59H[1m[96m[48;5;242mr[m[48;5;242m l[m[52;163H9[14;59H[?25h[?25l[52;150H9[14;63H[48;5;242ms)))[m[46m)[m[52;162H63[14;63H[?25h[?25l[52;149H60[14;64H[10;3H[46m([m[14;63H[48;5;242m)[m[46m)[m[52;163H4[14;64H[?25h[?25l[52;150H1[14;65H[9;1H[46m([m
  ([14;64H[48;5;242m)[m[46m)[m[52;163H5[14;65H[?25h[?25l[52;150H2[14;66H[9;1H([14;65H[48;5;242m)[m[52;163H6[14;66H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[52;150H1[14;65H[9;1H[46m([14;65H)[m[52;163H5[14;65H[?25h[?25l[?25h[?25l[52;149Hc [14;65H[52;149H [14;5H[52;4H[1mINSERT [m[52;159H[K[52;159H14,5[10CTop[14;5H[K[9;1H([14;5H[?25h[?25l[52;162H4[14;4H[?25h[?25l[52;162H3[14;3H[?25h[?25l[52;162H2[14;2H[?25h[?25l[52;162H1[14;1H[?25h[?25l[13;51r[51;1H
[1;52r[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[51;9H[38;5;224m'()[m[52;159H[K[52;159H13,56[9CTop[12;5H[46m([13;55H)[?25h[?25l[m[12;5H([13;55H)[52;160H2,23[12;23H[?25h[?25l[11;5H[46m([12C)[m[52;160H1,19[11;19H[?25h[?25l    ([12C)[52;160H2,23[12;23H[?25h[?25l[52;160H0,3 [10;3H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[10;4H[52;159H10,4[10CTop[10;4H[48;5;242m([?25h[?25l
[m    [10;4H[93m[48;5;242mcond[m[48;5;242m  
    [m[46m([12C)[m[52;160H1,5[11;5H[?25h[?25l[2C[48;5;242m(([m[11C)[52;162H7[11;7H[?25h[?25l[1C[1m[96m[48;5;242mn[m[1m[96mull?[m [52;162H8[11;8H[?25h[?25l[2C[1m[96m[48;5;242mul[m[1m[96ml?[m [52;162H10[11;10H[?25h[?25l[1C[1m[96m[48;5;242ml[m[1m[96m?[m [52;163H1[11;11H[?25h[?25l[2C[1m[96m[48;5;242m?[m[48;5;242m [m[52;163H3[11;13H[?25h[?25ll[48;5;242ml[m[52;163H4[11;14H[?25h[?25ls[48;5;242ms[m[46m)[m[52;163H5[11;15H[?25h[?25l[1C[48;5;242m)[m[52;163H6[11;16H[?25h[?25l [48;5;242m [m[52;163H7[11;17H[?25h[?25l[1C[95m[48;5;242m0[m[46m)[m[52;163H8[11;18H[?25h[?25l[1C[48;5;242m)[m[52;163H9[11;19H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[52;149H3[12;22H[11;19H[48;5;242m 
    (([m[1m[96m[48;5;242mpair?[m[48;5;242m ([m[1m[96m[48;5;242mcar[m[48;5;242m ls))[m[52;160H2,22[12;22H[?25h[?25l[46m)[m[52;163H1[12;21H[?25h[?25l[46m)[m)[52;163H0[12;20H[?25h[?25l[?25h[?25l[52;149H [11;6H[52;4H[1mINSERTt --[m[52;13H[K[52;159H11,6[10CTop[10;3H([93mcond[m [10;9H[K[11;1H    (([1m[96mnull?[m ls) [95m0[m)[11;19H[K[12;1H    (([1m[96mpair?[m [46m([m[1m[96mcar[m ls[11;6H[46m([8C)[m[12;13H([6C)[11;6H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[10;4H[52;159H10,4[10CTop[10;3H[48;5;242m([m[11;6H([8C)[10;4H[?25h[?25l[52;149H3[10;5H[93m[48;5;242mc[m[52;162H5[10;5H[?25h[?25l[52;149H2[11;6H[10;5H[93m[48;5;242mond[m[48;5;242m  
    ([m[46m([8C)[m[52;160H1,6[11;6H[?25h[?25l[2C[48;5;242m([m[1m[96m[48;5;242mn[m[1m[96mull?[m ls)[52;162H8[11;8H[?25h[?25l[4C[1m[96m[48;5;242mull?[m [52;162H12[11;12H[?25h[?25l l[48;5;242m l[m[52;163H4[11;14H[?25h[?25l[52;149H3[12;16H[11;14H[48;5;242ms) [m[95m[48;5;242m0[m[48;5;242m) 
    (([m[1m[96m[48;5;242mpair?[m[48;5;242m ([m[1m[96m[48;5;242mca[m[1m[96mr[m [52;160H2,16[12;16H[?25h[?25l[2C[1m[96m[48;5;242mr[m[48;5;242m [m[52;163H8[12;18H[?25h[?25lls)[48;5;242mls)[m[46m)[m[52;162H21[12;21H[?25h[?25l[1C[48;5;242m)[m[52;163H2[12;22H[?25h[?25l[52;149H4[13;24H[12;22H[48;5;242m  
     ([m[1m[96m[48;5;242m+[m[48;5;242m (sum-lengths ([m[1m[96m[48;5;242mc[m[1m[96mar[m [52;160H3,24[13;24H[?25h[?25l[1C[1m[96m[48;5;242ma[m[1m[96mr[m [52;163H5[13;25H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;163H6[13;26H[?25h[?25l [48;5;242m [m[52;163H7[13;27H[?25h[?25ll[48;5;242ml[m[52;163H8[13;28H[?25h[?25ls)[48;5;242ms)[m[46m)[m[52;162H30[13;30H[?25h[?25l[2C[48;5;242m) [m[46m([20C)[m[52;163H2[13;32H[?25h[?25l[2C[48;5;242m(s[m[19C)[52;163H4[13;34H[?25h[?25lum[48;5;242mum[m[52;163H6[13;36H[?25h[?25l-[48;5;242m-[m[52;163H7[13;37H[?25h[?25l[52;149H3[12;23H[12;23H[K[13;1H     ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-[52;160H2,23[12;23H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[52;149H4[13;46H[12;23H[48;5;242m 
     ([m[1m[96m[48;5;242m+[m[48;5;242m (sum-lengths ([m[1m[96m[48;5;242mcar[m[48;5;242m ls)) (sum-lengths ([m[52;160H3,46[13;46H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mdr[m [52;163H7[13;47H[?25h[?25l[1C[1m[96m[48;5;242md[m[1m[96mr[m [52;163H8[13;48H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;163H9[13;49H[?25h[?25l [48;5;242m [m[52;162H50[13;50H[?25h[?25ll[48;5;242ml[m[52;163H1[13;51H[?25h[?25ls))))[48;5;242ms))))[m[52;163H6[13;56H[?25h[?25l[46m)[m[52;163H5[13;55H[?25h[?25l[46m)[m)[52;163H4[13;54H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H5[13;55H[?25h[?25l[?25h[?25l[52;149Hc[13;55H[52;1H3 fewer lines[1mI[m[52;14H[K[10;3H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,3[10CTop[10;51r[10;1H[3M[1;52r[10;1H  [10;3H[K[49;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[50;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H10,3[10CTop[10;3H[?25h[?25l([52;162H4[10;4H[?25h[?25li[52;162H5[10;5H[?25h[?25l[93mif[m[52;162H6[10;6H[?25h[?25l[52;162H7[10;7H[?25h[?25lp[52;162H8[10;8H[?25h[?25la[52;162H9[10;9H[?25h[?25lr[52;162H10[10;10H[?25h[?25l[10;9H[K[52;162H9 [10;9H[?25h[?25l[10;8H[K[52;162H8[10;8H[?25h[?25l[10;7H[K[52;162H7[10;7H[?25h[?25l([52;162H8[10;8H[?25h[?25lp[52;162H9[10;9H[?25h[?25la[52;162H10[10;10H[?25h[?25li[52;163H1[10;11H[?25h[?25lr[52;163H2[10;12H[?25h[?25l[1m[96mpair?[m[52;163H3[10;13H[?25h[?25l[52;163H4[10;14H[?25h[?25lc[52;163H5[10;15H[?25h[?25la[52;163H6[10;16H[?25h[?25l[1m[96mcar[m[52;163H7[10;17H[?25h[?25lca[10;16H[K[52;163H6[10;16H[?25h[?25l[10;15H[K[52;163H5[10;15H[?25h[?25l[10;14H[K[52;163H4[10;14H[?25h[?25l([52;163H5[10;15H[?25h[?25lc[52;163H6[10;16H[?25h[?25la[52;163H7[10;17H[?25h[?25l[1m[96mcar[m[52;163H8[10;18H[?25h[?25l[52;163H9[10;19H[?25h[?25ll[52;162H20[10;20H[?25h[?25ls[52;163H1[10;21H[?25h[?25l)[10;14H[46m([6C)[m[52;163H2[10;22H[?25h[?25l[10;14H([6C)[52;159H9,22 [9;22H[?25h[?25l[10;14H[46m([6C)[m[52;159H10,22[10;22H[?25h[?25l[52;163H1[10;21H[?25h[?25l[10;14H([6C)[52;163H0[10;20H[?25h[?25l[52;162H19[10;19H[?25h[?25l[52;163H8[10;18H[?25h[?25l[52;163H7[10;17H[?25h[?25l[52;163H8[10;18H[?25h[?25l[52;163H9[10;19H[?25h[?25l[52;162H20[10;20H[?25h[?25l[46m([6C)[m[52;163H1[10;21H[?25h[?25l[52;163H2[10;22H[?25h[?25l[52;163H1[10;21H[?25h[?25l[10;14H([6C)[52;163H0[10;20H[?25h[?25l[52;162H19[10;19H[?25h[?25l[52;162H20[10;20H[?25h[?25l[46m([6C)[m[52;163H1[10;21H[?25h[?25l[52;163H2[10;22H[?25h[?25l[10;21H[K[10;14H([52;163H1[10;21H[?25h[?25l[10;20H[K[52;163H0[10;20H[?25h[?25l[10;19H[K[52;162H19[10;19H[?25h[?25l[52;163H8[10;18H[?25h[?25lca[10;17H[K[52;163H7[10;17H[?25h[?25l[10;16H[K[52;163H6[10;16H[?25h[?25l[10;15H[K[52;163H5[10;15H[?25h[?25l[10;14H[K[52;163H4[10;14H[?25h[?25l[52;163H3[10;13H[?25h[?25lpair[10;12H[K[52;163H2[10;12H[?25h[?25l[10;11H[K[52;163H1[10;11H[?25h[?25l[10;10H[K[52;163H0[10;10H[?25h[?25l[10;9H[K[52;162H9 [10;9H[?25h[?25l[10;8H[K[52;162H8[10;8H[?25h[?25ln[52;162H9[10;9H[?25h[?25lu[52;162H10[10;10H[?25h[?25ll[52;163H1[10;11H[?25h[?25ll[52;163H2[10;12H[?25h[?25l[1m[96mnull?[m[52;163H3[10;13H[?25h[?25l[52;163H4[10;14H[?25h[?25ll[52;163H5[10;15H[?25h[?25ls[52;163H6[10;16H[?25h[?25l)[10;7H[46m([8C)[m[52;163H7[10;17H[?25h[?25l[10;7H([8C)[52;163H8[10;18H[?25h[?25l[95m0[m[52;163H9[10;19H[?25h[?25l)  [46m([15C)[m[52;162H20[10;20H[?25h[?25l[11;51r[11;1H[L[1;52r[52;159H[K[52;159H11,3[10CTop[10;3H([15C)
  [?25h[?25li[52;162H4[11;4H[?25h[?25l[93mif[m[52;162H5[11;5H[?25h[?25l[52;162H6[11;6H[?25h[?25l[52;162H5[11;5H[?25h[?25li[11;4H[K[52;162H4[11;4H[?25h[?25l[11;3H[K[52;162H3[11;3H[?25h[?25l([52;162H4[11;4H[?25h[?25li[52;162H5[11;5H[?25h[?25l[93mif[m[52;162H6[11;6H[?25h[?25l[52;162H7[11;7H[?25h[?25l([52;162H8[11;8H[?25h[?25lp[52;162H9[11;9H[?25h[?25la[52;162H10[11;10H[?25h[?25lr[52;163H1[11;11H[?25h[?25li[52;163H2[11;12H[?25h[?25l[11;11H[K[52;163H1[11;11H[?25h[?25l[11;10H[K[52;163H0[11;10H[?25h[?25li[52;163H1[11;11H[?25h[?25lr[52;163H2[11;12H[?25h[?25l[1m[96mpair?[m[52;163H3[11;13H[?25h[?25l[52;163H4[11;14H[?25h[?25lc[52;163H5[11;15H[?25h[?25la[52;163H6[11;16H[?25h[?25l[1m[96mcar[m[52;163H7[11;17H[?25h[?25lca[11;16H[K[52;163H6[11;16H[?25h[?25l[11;15H[K[52;163H5[11;15H[?25h[?25l[11;14H[K[52;163H4[11;14H[?25h[?25l([52;163H5[11;15H[?25h[?25lc[52;163H6[11;16H[?25h[?25la[52;163H7[11;17H[?25h[?25l[1m[96mcar[m[52;163H8[11;18H[?25h[?25l[52;163H9[11;19H[?25h[?25ll[52;162H20[11;20H[?25h[?25ls[52;163H1[11;21H[?25h[?25l)[11;14H[46m([6C)[m[52;163H2[11;22H[?25h[?25l[11;14H([6C)[52;163H3[11;23H[?25h[?25l[11;14H[46m([6C)[m[52;163H2[11;22H[?25h[?25l)[11;7H[46m([m[6C([6C)[46m)[m[52;163H3[11;23H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,5[10CTop[11;7H([14C)
    [?25h[?25l([52;162H6[12;6H[?25h[?25l[1m[96m+[m[52;162H7[12;7H[?25h[?25l[52;162H8[12;8H[?25h[?25l[95m1[m[52;162H9[12;9H[?25h[?25l[52;162H10[12;10H[?25h[?25ls[52;163H1[12;11H[?25h[?25lu[52;163H2[12;12H[?25h[?25lm[52;163H3[12;13H[?25h[?25l-[52;163H4[12;14H[?25h[?25ll[52;163H5[12;15H[?25h[?25le[52;163H6[12;16H[?25h[?25ln[52;163H7[12;17H[?25h[?25lg[52;163H8[12;18H[?25h[?25lt[52;163H9[12;19H[?25h[?25lh[52;162H20[12;20H[?25h[?25ls[52;163H1[12;21H[?25h[?25l[52;163H0[12;20H[?25h[?25l[52;162H19[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H5[12;15H[?25h[?25l[52;163H4[12;14H[?25h[?25l[52;163H3[12;13H[?25h[?25l[52;163H2[12;12H[?25h[?25l[52;163H1[12;11H[?25h[?25l[52;163H0[12;10H[?25h[?25l(sum-lengths[52;163H1[12;11H[?25h[?25l[52;160H3,2-9[13;9H[?25h[?25l[52;160H2,22 [12;22H[?25h[?25l[52;163H3[12;23H[?25h[?25l([52;163H4[12;24H[?25h[?25lc[52;163H5[12;25H[?25h[?25ld[52;163H6[12;26H[?25h[?25l[1m[96mcdr[m[52;163H7[12;27H[?25h[?25l[52;163H8[12;28H[?25h[?25l([52;163H9[12;29H[?25h[?25lc[52;162H30[12;30H[?25h[?25ld[52;163H1[12;31H[?25h[?25l[1m[96mcdr[m[52;163H2[12;32H[?25h[?25l[52;163H3[12;33H[?25h[?25ll[52;163H4[12;34H[?25h[?25ls[52;163H5[12;35H[?25h[?25l)[12;28H[46m([6C)[m[52;163H6[12;36H[?25h[?25l)[12;23H[46m([m[4C([6C)[46m)[m[52;163H7[12;37H[?25h[?25l[12;23H([12C)[52;163H2[12;32H[?25h[?25lcd ls)[12;36H[K[52;163H1[12;31H[?25h[?25l ls)[12;35H[K[52;163H0[12;30H[?25h[?25l ls)[12;34H[K[12;28H[46m([m ls[46m)[m[52;162H29[12;29H[?25h[?25lc l[46ms[m))[12;28H(c ls[52;162H30[12;30H[?25h[?25la ls))[52;163H1[12;31H[?25h[?25l[1m[96mcar[m ls))[52;163H2[12;32H[?25h[?25l[12;23H[46m([12C)[m[52;163H7[12;37H[?25h[?25l[12;23H([12C)[52;162H10[12;10H[?25h[?25l[18C[46m([6C)[m[52;162H28[12;28H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[12;36H[K[12;27H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H7[12;27H[?25h[?25lcd([1m[96m[46mc[m[1m[96mar[m ls)[12;35H[K[12;26H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H6[12;26H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[12;34H[K[12;25H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H5[12;25H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[12;33H[K[12;24H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H4[12;24H[?25h[?25l[46m([m([6C)[46m)[m[52;162H33[12;33H[?25h[?25l[52;163H2[12;32H[?25h[?25l[12;23H([46m([6C)[m)[52;163H1[12;31H[?25h[?25l[12;24H([6C)[52;163H0[12;30H[?25h[?25l[52;162H29[12;29H[?25h[?25l[52;163H8[12;28H[?25h[?25l[52;163H7[12;27H[?25h[?25l[52;163H6[12;26H[?25h[?25l[46m([6C)[m[52;163H5[12;25H[?25h[?25l[52;163H4[12;24H[?25h[?25l[1m[96m[46mc[m[1m[96mar[m ls)[12;32H[K[12;23H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H3[12;23H[?25h[?25l[52;163H4[12;24H[?25h[?25l([6C)[52;163H5[12;25H[?25h[?25l[52;163H6[12;26H[?25h[?25l[52;163H7[12;27H[?25h[?25l[52;163H8[12;28H[?25h[?25l[52;163H9[12;29H[?25h[?25l[46m([6C)[m[52;162H30[12;30H[?25h[?25l[12;10H[46m([m[12C([6C)[46m)[m[52;163H1[12;31H[?25h[?25l[52;163H2[12;32H[?25h[?25l[12;31H[K[12;10H([12C[46m([6C)[m[52;163H1[12;31H[?25h[?25l[12;23H([6C)[52;163H2[12;32H[?25h[?25l)[12;10H[46m([21C)[m[52;163H3[12;33H[?25h[?25l[52;163H2[12;32H[?25h[?25l)[12;32H[K[12;31H[46m)[m[52;163H1[12;31H[?25h[?25l[52;163H2[12;32H[?25h[?25l[12;10H([20C)[52;163H3[12;33H[?25h[?25l([52;163H4[12;34H[?25h[?25ls[52;163H5[12;35H[?25h[?25lu[52;163H6[12;36H[?25h[?25lm[52;163H7[12;37H[?25h[?25l-[52;163H8[12;38H[?25h[?25ll[52;163H9[12;39H[?25h[?25le[52;162H40[12;40H[?25h[?25ln[52;163H1[12;41H[?25h[?25lg[52;163H2[12;42H[?25h[?25lt[52;163H3[12;43H[?25h[?25lh[52;163H4[12;44H[?25h[?25ls[52;163H5[12;45H[?25h[?25l[52;163H6[12;46H[?25h[?25l([52;163H7[12;47H[?25h[?25lc[52;163H8[12;48H[?25h[?25ld[52;163H9[12;49H[?25h[?25l[1m[96mcdr[m[52;162H50[12;50H[?25h[?25l[52;163H1[12;51H[?25h[?25ll[52;163H2[12;52H[?25h[?25ls[52;163H3[12;53H[?25h[?25l)[12;46H[46m([6C)[m[52;163H4[12;54H[?25h[?25l)[12;33H[46m([m[12C([6C)[46m)[m[52;163H5[12;55H[?25h[?25l)    [46m([m[27C([20C)[46m)[m[52;163H6[12;56H[?25h[?25l[13;51r[13;1H[L[1;52r[52;159H[K[52;159H13,5[10CTop[12;5H([49C)
    [?25h[?25ls[52;162H6[13;6H[?25h[?25lu[52;162H7[13;7H[?25h[?25lm[52;162H8[13;8H[?25h[?25l-[52;162H9[13;9H[?25h[?25ll[52;162H10[13;10H[?25h[?25le[52;163H1[13;11H[?25h[?25ln[52;163H2[13;12H[?25h[?25lg[52;163H3[13;13H[?25h[?25lt[52;163H4[13;14H[?25h[?25lh[52;163H5[13;15H[?25h[?25ls[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l([52;163H8[13;18H[?25h[?25lc[52;163H9[13;19H[?25h[?25ld[52;162H20[13;20H[?25h[?25l[1m[96mcdr[m[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25lc[52;163H3[13;23H[?25h[?25la[52;163H4[13;24H[?25h[?25ld[52;163H5[13;25H[?25h[?25l[13;24H[K[52;163H4[13;24H[?25h[?25l[13;23H[K[52;163H3[13;23H[?25h[?25l[13;22H[K[52;163H2[13;22H[?25h[?25ll[52;163H3[13;23H[?25h[?25ls[52;163H4[13;24H[?25h[?25l)[13;17H[46m([6C)[m[52;163H5[13;25H[?25h[?25l)[11;3H[46m([m[13;17H([6C)[46m)[m[52;163H6[13;26H[?25h[?25l[11;3H([13;25H)[52;162H6 [13;6H[?25h[?25l[52;162H5[13;5H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls))    [46m([20C)[m[52;162H6[13;6H[?25h[?25l[52;162H27[13;27H[?25h[?25l)[11;3H[46m([m[13;5H([20C)[46m)[m[52;163H8[13;28H[?25h[?25l)[9;1H[46m([m

  ([13;27H)[46m)[m[52;163H9[13;29H[?25h[52;1H[K[13;28H[?25l[52;149H^[[13;28H[52;149H  [13;29H[52;159H13,28[9CTop[13;28H[?25h[?25l[52;149H:[13;28H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 91L, 2671B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:10:2: if: missing an "else" expression
  in: (if (null? ls) 0)
  location...:
   lab5-sol.scm:10:2
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 91L, 2671B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls) [31m0[m)
  ([38;5;130mif[m ([36mpair?[m ([36mcar[m ls))
    ([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))
    (sum-lengths ([36mcdr[m ls)))[106m)[m


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[51;9H[35m'()[m[52;159H13,28[9CTop[13;28H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls) [95m0[m)
  ([93mif[m ([1m[96mpair?[m ([1m[96mcar[m ls))
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))
    (sum-lengths ([1m[96mcdr[m ls)))[46m)[m


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[51;9H[38;5;224m'()[m[52;159H13,28[9CTop"lab5-sol.scm" 91L, 2671B[13;28H[?25h[?25l[9;1H(
  [46m([15C)[m[13;28H)[52;160H0,19[10;19H[?25h[?25l  ([15C)[52;160H1,4 [11;4H[?25h[?25l[3C[46m([14C)[m[52;162H7[11;7H[?25h[?25l([14C)[52;159H8,28[8;28H[?25h[?25l[9;9H[46m([14C)[m[52;159H9,24[9;24H[?25h[?25l[52;149Hi[9;24H[52;149H [9;24H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H9,24[10CTop[9;24H[?25h[?25l[52;162H5[9;25H[?25h[?25l[10;51r[10;1H[L[1;52r[52;159H[K[52;159H10,3[10CTop[9;9H([14C)
  [?25h[?25l[11;51r[11;1H[3L[1;52r[10;3H([93mcond[m
(([1m[96mnull?[m ls) [38;5;224m'()[m)
(([1m[96mpair?[m ([1m[96mcar[m ls))
(appen[52;11H[1m(paste) --[m[52;159H[K[13;7H[?25h[?25l[14;51r[14;1H[2L[1;52r[13;2H[1m[96mappend[m (my-[38;5;81m^][matten ([1m[96mcar[m ls))
(my-[38;5;81m^][matten ([1m[96mcdr[m ls))))
([93melse[m (con[?25h[?25l[1m[96mcons[m ([1m[96mcar[m ls) (my-[38;5;81m^][matten ([1m[96mcdr[m ls)))))))[52;159H15,47-48      Top[15;48H[?25h[?25l[11;1H[46m([14C)[m[52;160H1,1    [11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;1H  ([93mcond[m(([1m[96mnull?[m ls) [38;5;224m'()[m)
[46m([14C)[m[51;1H[96m;;map elements of ls to #t or #f depending on whether or not[m[52;11H[1m--a[m[52;13H[K[52;159H10,8[10CTop[10;8H[46m([14C)[m
([14C)[10;8H[?25h[?25l[11;51r[11;1H[L[1;52r[10;8H[K[11;5H(([1m[96mnull?[m ls) [38;5;224m'()[m)[52;159H[K[52;159H11,5[10CTop[11;5H[46m([14C)[m    [?25h[?25l([14C)
[46m([14;23H)[m[52;160H2,1[12;1H[?25h[?25l[11;51r[51;1H
[1;52r[11;1H    (([1m[96mnull?[m ls) [38;5;224m'()[m)(([1m[96mpair?[m ([1m[96mcar[m ls))
[46m([m[13;23H)[14;22H[46m([m[51;1H[96m;;map elements of ls to #t or #f depending on whether or not[m[52;159H[K[52;159H11,21[9CTop[11;21H[46m([m
([13;23H[46m)[m[14;22H([11;21H[?25h[?25l[12;51r[12;1H[L[1;52r[11;21H[K[12;5H(([1m[96mpair?[m ([1m[96mcar[m ls))[13;23H[1m[96m[46ma[m[1m[96mr[m [14;23H)[52;159H[K[52;159H12,5[10CTop[12;5H[46m([m[13;23H[1m[96mar[m [14;23H[46m)[12;5H[?25h[?25l[11;5H([14C)[m
    ([14;23H)[52;160H1,20[11;20H[?25h[?25l[11;20H[K[11;5H([12C[38;5;224m[46m()[m[52;162H19[11;19H[?25h[?25l[46m)[m[11;19H[K[11;5H[46m([m[52;163H8[11;18H[?25h[?25l)[11;18H[K[11;17H[46m)[m[52;163H7[11;17H[?25h[?25l[95m[46m0[m)[95m0[m[46m)[m[52;163H8[11;18H[?25h[?25l[52;163H9[11;19H[?25h[?25l    ([12C)
    [46m([14;23H)[m[52;160H2,5 [12;5H[?25h[?25l([7C[46m([6C)[m[14;23H)[52;162H13[12;13H[?25h[?25l([6C)
[46m([14;22H)[m[52;160H3,1 [13;1H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[13;2H[52;159H13,2[10CTop[13;2H[48;5;242m([m[14;22H)[13;2H[?25h[?25l
(m[13;2H[1m[96m[48;5;242mappend[m[48;5;242m (my-^]atten ([m[1m[96m[48;5;242mcar[m[48;5;242m ls)) 
(m[m[52;160H4,3[14;3H[?25h[?25ly[48;5;242my[m[52;162H4[14;4H[?25h[?25l-[48;5;242m-[1C][m[52;162H5[14;5H[?25h[?25l[?25h[?25l[2C[48;5;242m^[m[52;162H6-7[14;7H[?25h[?25la[48;5;242ma[m[52;162H7-8[14;8H[?25h[?25lt[48;5;242mt[m[52;162H8-9[14;9H[?25h[?25lt[48;5;242mt[m[52;162H9-10[14;10H[?25h[?25le[48;5;242me[m[52;162H10-11[14;11H[?25h[?25ln[48;5;242mn[m[52;163H1-12[14;12H[?25h[?25l [48;5;242m [m[46m([6C)[m[52;163H2-13[14;13H[?25h[?25l[1C[48;5;242m([m[6C)[52;163H3-14[14;14H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mdr[m [52;163H4-15[14;15H[?25h[?25l[1C[1m[96m[48;5;242md[m[1m[96mr[m [52;163H5-16[14;16H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;163H6-17[14;17H[?25h[?25l [48;5;242m [m[52;163H7-18[14;18H[?25h[?25ll[48;5;242ml[m[52;163H8-19[14;19H[?25h[?25ls[48;5;242ms[m[46m)[m[52;163H9-20[14;20H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;162H20-21[14;21H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H1-22[14;22H[?25h[?25l[1C[12;5H[46m([m[14;22H[48;5;242m)[m[46m)[m[52;163H2-23[14;23H[?25h[?25l[12;5H([14;22H[46m)[m)[52;163H1-22[14;22H[?25h[?25l[52;149H3[15;22H[14;22H[48;5;242m)) 
([m[93m[48;5;242melse[m[48;5;242m ([m[1m[96m[48;5;242mcons[m[48;5;242m ([m[1m[96m[48;5;242mcar[m[48;5;242m ls) [m[46m([19C)[m[52;160H5,22   [15;22H[?25h[?25l[1C[48;5;242m([m[19C)[52;163H3[15;23H[?25h[?25l[46m([19C)[m[52;163H2[15;22H[?25h[?25l[52;149H2[14;22H[46m)[m)[14;24H[K[15;1H([93melse[m ([1m[96mcons[m ([1m[96mcar[m ls) ([19C)[52;160H4,21-22[14;22H[?25h[?25l[52;149H3[15;22H[14;22H[48;5;242m)) 
([m[93m[48;5;242melse[m[48;5;242m ([m[1m[96m[48;5;242mcons[m[48;5;242m ([m[1m[96m[48;5;242mcar[m[48;5;242m ls) [m[46m([19C)[m[52;160H5,22   [15;22H[?25h[?25l[1C[48;5;242m([m[19C)[52;163H3[15;23H[?25h[?25lm[48;5;242mm[m[52;163H4[15;24H[?25h[?25ly[48;5;242my[m[52;163H5[15;25H[?25h[?25l-[48;5;242m-[1C][m[52;163H6[15;26H[?25h[?25l[?25h[?25l[3C[48;5;242m^]a[m[52;163H8-29[15;29H[?25h[?25ltt[48;5;242mtt[m[52;162H30-31[15;31H[?25h[?25len[48;5;242men[m[52;163H2-33[15;33H[?25h[?25l ([48;5;242m ([m[52;163H4-35[15;35H[?25h[?25l[52;149H4[16;20H[15;35H[1m[96m[48;5;242mcdr[m[48;5;242m ls))))))) 
  ([m[93m[48;5;242mif[m[48;5;242m ([m[1m[96m[48;5;242mnull?[m[48;5;242m ls) [m[95m[48;5;242m0[m[48;5;242m)[m[52;160H6,20   [16;20H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[52;149H3[15;45H[10;3H[46m([15;45H)[m))[15;48H[K[16;1H  ([93mif[m ([1m[96mnull?[m ls) [95m0[m)[52;160H5,44-45[15;45H[?25h[?25l[1C[9;1H[46m([m
  ([15;45H[48;5;242m)[m[46m)[m[52;163H5-46[15;46H[?25h[?25l[1C[9;1H([15;46H[48;5;242m)[m[52;163H6-47[15;47H[?25h[?25l[?25h[?25l[52;149Hc[15;47H[52;149H [13;1H[52;4H[1mINSERTt --[m[52;13H[K[52;159H13,1[10CTop[13;51r[13;1H[2M[1;52r[13;1H[K[50;1H[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m[52;159H[K[52;159H13,1[10CTop[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;5H(([1m[96mpair?[m ([1m[96mcar[m ls))[51;1H([93mdefine[m greater-than[52;159H[K[52;159H12,22[9CTop[12;6H[46m([14C)[?25h[?25l[m    (([14C)
  [46m([15C)[m[52;160H3,3 [13;3H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[13;4H[52;159H13,4[10CTop[13;4H[48;5;242m([m[15C)[13;4H[?25h[?25l[52;149H3[13;5H[93m[48;5;242mi[m[52;162H5[13;5H[?25h[?25l[52;149H4[13;6H[93m[48;5;242mf[m[52;162H6[13;6H[?25h[?25l[52;149H5[13;7H[48;5;242m [m[46m([8C)[m[52;162H7[13;7H[?25h[?25l[52;149H7[13;9H[48;5;242m([m[1m[96m[48;5;242mn[m[1m[96mull?[m ls)[52;162H9[13;9H[?25h[?25l[52;149H8[13;10H[1m[96m[48;5;242mu[m[1m[96mll?[m [52;162H10[13;10H[?25h[?25l[52;149H9[13;11H[1m[96m[48;5;242ml[m[1m[96ml?[m [52;163H1[13;11H[?25h[?25l[52;149H10[13;12H[1m[96m[48;5;242ml[m[1m[96m?[m [52;163H2[13;12H[?25h[?25l[52;150H1[13;13H[1m[96m[48;5;242m?[m [52;163H3[13;13H[?25h[?25l[52;150H2[13;14H[48;5;242m [m[52;163H4[13;14H[?25h[?25l[52;149H2 [14;15H[13;14H[48;5;242mls) [m[95m[48;5;242m0[m[48;5;242m) 
  ([m[93m[48;5;242mif[m[48;5;242m ([m[1m[96m[48;5;242mpair?[m[48;5;242m ([m[52;160H4,15[14;15H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mar[m [52;163H6[14;16H[?25h[?25l[1C[1m[96m[48;5;242ma[m[1m[96mr[m [52;163H7[14;17H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;163H8[14;18H[?25h[?25l [48;5;242m [m[52;163H9[14;19H[?25h[?25ll[48;5;242ml[m[52;162H20[14;20H[?25h[?25ls[48;5;242ms[m[46m)[m[52;163H1[14;21H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H2[14;22H[?25h[?25l[?25h[?25l[52;149Hc[14;22H[52;149H [13;3H[52;4H[1mINSERTt --[m[52;13H[K[52;159H13,3[10CTop[13;51r[51;1H
[1;52r[13;1H  [13;3H[K[14;7H[46m [14C [m[51;3H([93mlambda[m (ls (v [95m0[m))[52;159H[K[52;159H13,3[10CTop[14;7H [14C [13;3H[?25h[?25l[52;162H2[13;2H[?25h[?25l[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;5H(([1m[96mpair?[m ([1m[96mcar[m ls))[51;5H([93mif[m ([1m[96mnull?[m ls)[52;159H[K[52;159H12,22[9CTop[12;6H[46m([14C)[?25h[?25l[m    (([14C)
    [46m([49C)[m[52;160H3,5 [13;5H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;4H[46m([m[1m[96m+[m [47C[46m)[m[52;162H4[13;4H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;54H[K[13;3H[46m([m[1m[96m+[m [47C[46m)[m[52;162H3[13;3H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;53H[K[13;2H[46m([m[1m[96m+[m [47C[46m)[m[52;162H2[13;2H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;52H[K[13;1H[46m([m[1m[96m+[m [47C[46m)[m[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;1H    (([1m[96mpair?[m ([1m[96mcar[m ls))([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))
[46m [m[51;9H[38;5;224m'()[m[52;159H[K[52;159H12,22[9CTop[12;22H[46m([49C)[m
 [12;22H[?25h[?25l[13;51r[13;1H[L[1;52r[12;22H[K[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))[52;159H[K[52;159H13,6[10CTop[13;6H[46m([49C)[m     [?25h[?25l([49C)
    [46m([20C)[m[52;160H4,5[14;5H[?25h[?25l[13;6H[46m([49C)[m
    ([20C)[52;160H3,57[13;57H[?25h[?25l)[12;5H[46m([m[13;6H([49C)[46m)[m[52;163H8[13;58H[?25h[?25l[12;5H([13;57H)
    [46m([20C)[m[52;160H4,5 [14;5H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;28H[K[14;4H[46m([ms[19C[46m)[m)[52;162H4[14;4H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;27H[K[14;3H[46m([ms[19C[46m)[m)[52;162H3[14;3H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;26H[K[14;2H[46m([ms[19C[46m)[m)[52;162H2[14;2H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;25H[K[14;1H[46m([ms[19C[46m)[m)[52;162H1[14;1H[?25h[?25l[13;51r[51;1H
[1;52r[13;1H     ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))(sum-lengths ([1m[96mcdr[m ls))))
[46m        [m[51;9H[38;5;224m'()[m[52;159H[K[52;159H13,58[9CTop[13;58H[46m([20C)[m
        [13;58H[?25h[?25l[14;51r[14;1H[L[1;52r[13;58H[K[14;5H(sum-lengths ([1m[96mcdr[m ls))))[52;159H[K[52;159H14,5[10CTop[14;5H[46m([20C)[m    [?25h[?25l[52;162H6[14;6H[?25h[?25lesum-lengths ([1m[96mcdr[m ls[3C)    ([20C)[52;162H7[14;7H[?25h[?25llsum-lengths ([1m[96mcdr[m ls))))[52;162H8[14;8H[?25h[?25lssum-lengths ([1m[96mcdr[m ls))))[52;162H9[14;9H[?25h[?25lesum-lengths ([1m[96mcdr[m ls))))[52;162H10[14;10H[?25h[?25l[93melse[m sum-lengths ([1m[96mcdr[m ls))))[52;163H1[14;11H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls))))[14;11H[46m([20C)[m[52;163H2[14;12H[?25h[?25l([20C)[52;163H3[14;13H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H5[14;15H[?25h[?25l[52;163H6[14;16H[?25h[?25l[52;163H7[14;17H[?25h[?25l[52;163H8[14;18H[?25h[?25l[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25l [46m([6C)[m[52;163H4[14;24H[?25h[?25l[52;163H5[14;25H[?25h[?25l([6C)[52;163H6[14;26H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H8[14;28H[?25h[?25l[52;163H9[14;29H[?25h[?25l[52;162H30[14;30H[?25h[?25l[46m([6C)[m[52;163H1[14;31H[?25h[?25l[14;11H[46m([m[12C([6C)[46m)[m[52;163H2[14;32H[?25h[?25l    [46m([m[5C([20C)[46m)[m[52;163H3[14;33H[?25h[?25l[10;3H[46m([m[14;5H([27C)[46m)[m[52;163H4[14;34H[?25h[?25l[52;163H5[14;35H[?25h[?25l)[9;1H[46m([m
  ([14;34H)[46m)[m[52;163H6[14;36H[?25h[52;1H[K[14;35H[?25l[52;149H^[[14;35H[52;149H  [14;36H[52;159H14,35[9CTop[14;35H[?25h[?25l[52;149H:[14;35H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2686B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     5
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2686B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls))))[106m)[m


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,35[9CTop[14;35H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls))))[46m)[m


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,35[9CTop"lab5-sol.scm" 92L, 2686B[14;35H[?25h[?25l[9;1H([14;35H)[19;26H[38;5;224m[46m([11C)[m[52;160H9,38[19;38H[?25h[?25l[19;26H[38;5;224m([11C)[m[52;159H20,41[20;41H[?25h[?25l[19;26H[38;5;224m[46m([11C)[m[52;159H19,38[19;38H[?25h[?25l[18;1H[46m([34C)[m[19;26H[38;5;224m([11C)[m[52;160H8,36[18;36H[?25h[?25l([34C)[19;33H[38;5;224m[46m([3C)[m[52;160H9,37[19;37H[?25h[?25l[13;11H[46m([20C)[m[19;33H[38;5;224m([3C)[m[52;160H3,11[13;11H[?25h[?25l[52;149H~@k[13;11H[52;149H   [13;10H ([20C)[52;163H0[13;10H[?25h[?25l[52;149H~@k[13;10H[52;149H   [13;9H[52;162H9 [13;9H[?25h[?25l[52;149H~@k[13;9H[52;149H   [13;10H[52;162H10[13;10H[?25h[?25l[52;149H~@k[13;10H[52;149H   [13;11H[46m([20C)[m[52;163H1[13;11H[?25h[?25l[52;149Hi[13;11H[52;149H [13;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,11[9CTop[13;11H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;57H[K[13;10H[46m([ms[19C[46m)[m [52;163H0[13;10H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;56H[K[13;9H[46m([ms[19C[46m)[m [52;162H9 [13;9H[?25h[?25l[52;162H10[13;10H[?25h[?25l([20C)[52;163H1[13;11H[?25h[52;1H[K[13;10H[?25l[52;149H^[[13;10H[52;149H  [13;11H[52;159H13,10[9CTop[13;10H[?25h[?25l[52;149H:[13;10H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2684B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2684B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,10[9CTop[13;10H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,10[9CTop"lab5-sol.scm" 92L, 2684B[13;10H[?25h[?25l[52;162H23[13;23H[?25h[?25l[13;9H[46m([20C)[m[52;162H9 [13;9H[?25h[?25l[52;149Hi[13;9H[52;149H [13;9H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,9[10CTop[13;9H[?25h[?25l[95m[46m1[m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;9H[95m1[m[46m([m[19C)[46m)[m[52;162H10[13;10H[?25h[?25l[46m [m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;10H [46m([m[19C)[46m)[m[52;163H1[13;11H[?25h[?25l([20C)[52;162H27[13;27H[?25h[?25l[52;162H10[13;10H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;57H[K[52;162H9 [13;9H[?25h[?25l[95m2[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;162H10[13;10H[?25h[?25l[14C[46m([6C)[m[52;162H24[13;24H[?25h[52;1H[K[13;23H[?25l[52;149H^[[13;23H[52;149H  [13;24H([6C)[52;159H13,23[9CTop[13;23H[?25h[?25l[52;149H:[13;23H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2686B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     10
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ clear
[?2004l[H[2J[3J[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ clear./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2686B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m2[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,23[9CTop[13;23H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m2[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,23[9CTop"lab5-sol.scm" 92L, 2686B[13;23H[?25h[?25l[52;162H10[13;10H[?25h[?25l[52;149Hi[13;10H[52;149H [13;10H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,10[9CTop[13;10H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;57H[K[52;162H9 [13;9H[?25h[?25l[95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;162H10[13;10H[?25h[?25l[52;163H9[13;19H[?25h[?25l[13;11H[46m([20C)[m[52;163H1[13;11H[?25h[?25l[1C(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;11H([46m([m[19C)[46m)[m[52;163H2[13;12H[?25h[?25l[46m [m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;12H [46m([m[19C)[46m)[m[52;163H3[13;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;59H[K[13;12H[46m([ms[19C[46m)[m [52;163H2[13;12H[?25h[?25l[46m [m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;12H [46m([m[19C)[46m)[m[52;163H3[13;13H[?25h[?25l[1m[96m[46m=[m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;13H[1m[96m=[m[46m([m[19C)[46m)[m[52;163H4[13;14H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;60H[K[13;13H[46m([ms[19C[46m)[m [52;163H3[13;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;59H[K[13;12H[46m([ms[19C[46m)[m [52;163H2[13;12H[?25h[?25l[1m[96m[46m+[m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;12H[1m[96m+[m[46m([m[19C)[46m)[m[52;163H3[13;13H[?25h[?25l[46m [m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;13H [46m([m[19C)[46m)[m[52;163H4[13;14H[?25h[?25l     [46m([m[7C([20C)[24C[46m)[m[52;162H60[13;60H[?25h[?25l[1C)[12;5H[46m([m[13;6H([53C)[46m)[m[52;163H1[13;61H[?25h[52;1H[K[13;60H[?25l[52;149H^[[13;60H[52;149H  [13;61H[12;5H([13;6H[46m([53C)[m)[52;159H13,60[9CTop[13;60H[?25h[?25l[52;149H:[13;60H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2690B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm clear[K./lab5-sol.scm 
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     5
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2690B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H[106m([m[36m+[m [31m1[m ([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))[106m)[m)
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,60[9CTop[13;60H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H[46m([m[1m[96m+[m [95m1[m ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))[46m)[m)
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,60[9CTop"lab5-sol.scm" 92L, 2690B[13;60H[?25h[?25l     ([7C[46m([20C)[m[24C)[52;162H14[13;14H[?25h[?25l[52;149Hi[13;14H[52;149H [13;14H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,14[9CTop[13;14H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;61H[K[13;13H[46m([ms[19C[46m)[m [52;163H3[13;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;60H[K[13;12H[46m([ms[19C[46m)[m [52;163H2[13;12H[?25h[?25l[46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;59H[K[13;11H[46m([ms[19C[46m)[m [52;163H1[13;11H[?25h[?25l[12;5H[46m([m[13;11H([20C)[24C[46m)[m[52;162H57[13;57H[?25h[?25l[13;58H[K[12;5H([13;6H[46m([49C)[m)[52;163H6[13;56H[?25h[?25l[12;5H[46m([m[13;6H([49C)[46m)[m[52;163H8[13;58H[?25h[?25l[12;5H([13;57H)[52;162H36[13;36H[?25h[?25l[19;27H[38;5;224m[46m([3C)[m[52;160H9,27[19;27H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[19;28H[52;159H19,28[9CTop[19;28H[38;5;224m[48;5;242m([m[3C[38;5;224m)[?25h[?25l[m[52;149H3[19;29H[95m[48;5;242m1[m[52;163H9[19;29H[?25h[?25l[52;149H4[19;30H[48;5;242m [m[52;162H30[19;30H[?25h[?25l[52;149H5[19;31H[95m[48;5;242m2[m[38;5;224m[46m)[m[52;163H1[19;31H[?25h[?25l[52;149H6[19;32H[38;5;224m[48;5;242m)[m[52;163H2[19;32H[?25h[?25l[52;149H5[19;31H[38;5;224m[46m)[m[52;163H1[19;31H[?25h[?25l[?25h[?25l[52;149H [19;33H[52;4H[1mINSERTt --[m[52;13H[K[52;159H19,33[9CTop[19;27H[38;5;224m[46m([m[95m1[m [95m2[m[38;5;224m([3C)[m[1C[38;5;224m[46m([3C)[?25h[?25l[m[13;24H[46m([6C)[m[19;33H[38;5;224m([3C)[m[52;160H3,31[13;31H[?25h[?25l)[1C (sum-lengths ([1m[96mcdr[m ls)[13;57H[K[13;30H[46m)[m)[52;163H0[13;30H[?25h[?25l)[1C (sum-lengths ([1m[96mcdr[m ls)[13;56H[K[13;29H[46m)[m)[52;162H29[13;29H[?25h[?25l[46m([m)) (sum-lengths ([1m[96mcdr[m ls))))[13;24H([5C[46m)[m[52;162H30[13;30H[?25h[?25l[46mc[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;30Hc[46m)[m[52;163H1[13;31H[?25h[?25l[46ma[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;31Ha[46m)[m[52;163H2[13;32H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;32H[1m[96mr[m[46m)[m[52;163H3[13;33H[?25h[?25l[46m [m)) (sum-lengths ([1m[96mcdr[m ls))))[13;33H [46m)[m[52;163H4[13;34H[?25h[?25l[46ml[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;34Hl[46m)[m[52;163H5[13;35H[?25h[?25l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;35Hs[46m)[m[52;163H6[13;36H[?25h[?25l[13;29H([6C)[52;162H48[13;48H[?25h[52;1H[K[13;47H[?25l[52;149H^[[13;47H[52;149H  [13;48H[52;159H13,47[9CTop[13;47H[?25h[?25l[52;162H12[13;12H[?25h[?25l[52;149Hi[13;12H[52;149H [13;12H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H13,12[9CTop[13;12H[?25h[?25l+sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;163H3[13;13H[?25h[?25l[1m[96m+[m sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;163H4[13;14H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;162H14[13;14H[?25h[?25l[46m([51C)[m[52;163H1[13;11H[?25h[?25l([19C[46m([6C)[m[24C)[52;162H38[13;38H[?25h[?25l[13;31H([6C)[52;162H2[13;28H[?25h[?25l[52;162H33[13;33H[?25h[?25l[13;26H[46m([12C)[m[52;163H9[13;39H[?25h[?25l[52;162H40[13;40H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls))))[13;11H[46m([m[14C([12C)[46m)[m[52;163H1[13;41H[?25h[?25l[52;163H0[13;40H[?25h[?25l[46m [m) (sum-lengths ([1m[96mcdr[m ls))))[13;40H [46m)[m[52;163H1[13;41H[?25h[?25l[13;11H([14C[46m([12C)[m )[52;163H0[13;40H[?25h[?25l[52;162H39[13;39H[?25h[?25l[13;26H([4C[46m([6C)[m)[52;163H8[13;38H[?25h[?25l[13;31H([6C)[52;163H7[13;37H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H3[13;33H[?25h[?25l[46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;163H1[13;31H[?25h[?25l([6C)[52;163H0[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l[52;163H8[13;28H[?25h[?25l[46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;163H6[13;26H[?25h[?25l([12C)[52;163H5[13;25H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H3[13;23H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H0[13;20H[?25h[?25l[52;162H19[13;19H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l(sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls)) ) (sum-lengths ([1m[96mcdr[m ls))))[13;14H[46m([27C)[m[52;163H5[13;15H[?25h[?25l[52;162H42[13;42H[?25h[?25l[46m([m) (sum-lengths ([1m[96mcdr[m ls))))[13;14H([28C[46m)[m[52;163H3[13;43H[?25h[?25l[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;14H[46m([m[27C()[46m)[m[52;163H4[13;44H[?25h[?25l[13;14H([27C[46m()[m)[52;163H3[13;43H[?25h[?25l[13;14H[46m([m[27C()[46m)[m[52;163H4[13;44H[?25h[?25l[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;11H[46m([m[2C([29C)[46m)[m[52;163H5[13;45H[?25h[?25l[13;11H([2C[46m([29C)[m)[52;163H4[13;44H[?25h[?25l[13;14H([27C[46m()[m)[52;163H3[13;43H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l[13;14H[46m([m[27C()[46m)[m[52;163H4[13;44H[?25h[?25l[13;11H[46m([m[2C([29C)[46m)[m[52;163H5[13;45H[?25h[?25l[13;11H([2C[46m([29C)[m)[52;163H4[13;44H[?25h[?25l[13;11H[46m([m[2C([29C)[46m)[m[52;163H5[13;45H[?25h[?25l[13;11H([2C[46m([29C)[m)[52;163H4[13;44H[?25h[?25l[13;11H[46m([m[2C([29C)[46m)[m[52;163H5[13;45H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;70H[K[13;11H([2C[46m([29C)[m [52;163H4[13;44H[?25h[?25l[13;14H([27C[46m()[m)[52;163H3[13;43H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l[46m)[m[1C (sum-lengths ([1m[96mcdr[m ls)[13;69H[K[13;14H[46m([m[28C)[52;163H2[13;42H[?25h[?25l)[1C (sum-lengths ([1m[96mcdr[m ls)[13;68H[K[13;41H[46m)[m)[52;163H1[13;41H[?25h[?25l[13;11H[46m([m[2C([26C)[46m)[m[52;163H2[13;42H[?25h[?25l[46m [m) (sum-lengths ([1m[96mcdr[m ls))))[13;42H [46m)[m[52;163H3[13;43H[?25h[?25l[46m([m) (sum-lengths ([1m[96mcdr[m ls))))[13;11H([32C[46m)[m[52;163H4[13;44H[?25h[?25l[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;11H[46m([m[31C()[46m)[m[52;163H5[13;45H[?25h[?25l[13;11H([31C[46m()[m)[52;163H4[13;44H[?25h[?25l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;44Hs[46m)[m[52;163H5[13;45H[?25h[?25l[46mu[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;45Hu[46m)[m[52;163H6[13;46H[?25h[?25l[46mm[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;46Hm[46m)[m[52;163H7[13;47H[?25h[?25l[46m-[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;47H-[46m)[m[52;163H8[13;48H[?25h[?25l[46ml[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;48Hl[46m)[m[52;163H9[13;49H[?25h[?25l[46me[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;49He[46m)[m[52;162H50[13;50H[?25h[?25l[46mn[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;50Hn[46m)[m[52;163H1[13;51H[?25h[?25l[46mg[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;51Hg[46m)[m[52;163H2[13;52H[?25h[?25l[46mt[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;52Ht[46m)[m[52;163H3[13;53H[?25h[?25l[46mh[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;53Hh[46m)[m[52;163H4[13;54H[?25h[?25l[46md[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;54Hd[46m)[m[52;163H5[13;55H[?25h[?25l)[1C (sum-lengths ([1m[96mcdr[m ls)[13;81H[K[13;54H[46m)[m)[52;163H4[13;54H[?25h[?25l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;54Hs[46m)[m[52;163H5[13;55H[?25h[?25l[46m [m)) (sum-lengths ([1m[96mcdr[m ls))))[13;55H [46m)[m[52;163H6[13;56H[?25h[?25l[46m([m)) (sum-lengths ([1m[96mcdr[m ls))))[13;43H([13C[46m)[m[52;163H7[13;57H[?25h[?25l[46mc[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;57Hc[46m)[m[52;163H8[13;58H[?25h[?25l[46md[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;58Hd[46m)[m[52;163H9[13;59H[?25h[?25l[1m[96mcd[m[1m[96m[46mr[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;59H[1m[96mr[m[46m)[m[52;162H60[13;60H[?25h[?25l[46m [m)) (sum-lengths ([1m[96mcdr[m ls))))[13;60H [46m)[m[52;163H1[13;61H[?25h[?25l[46m([m)) (sum-lengths ([1m[96mcdr[m ls))))[13;56H([5C[46m)[m[52;163H2[13;62H[?25h[?25l[46mc[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;62Hc[46m)[m[52;163H3[13;63H[?25h[?25l[46ma[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;63Ha[46m)[m[52;163H4[13;64H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;64H[1m[96mr[m[46m)[m[52;163H5[13;65H[?25h[?25l[46m [m)) (sum-lengths ([1m[96mcdr[m ls))))[13;65H [46m)[m[52;163H6[13;66H[?25h[?25l[46ml[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;66Hl[46m)[m[52;163H7[13;67H[?25h[?25l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;67Hs[46m)[m[52;163H8[13;68H[?25h[?25l[2C) (sum-lengths ([1m[96mcdr[m ls))))[13;56H[46m([m[4C([6C)[46m)[m[52;163H9[13;69H[?25h[?25l[13;43H[46m([m[12C([12C)[46m)[m[52;162H70[13;70H[?25h[?25l[52;163H1[13;71H[?25h[?25l[52;163H0[13;70H[?25h[?25l[52;163H1[13;71H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls))))[13;11H[46m([m[31C([26C)[46m)[m[52;163H2[13;72H[?25h[?25l[52;163H1[13;71H[?25h[?25l[13;11H([31C[46m([26C)[m)[52;163H0[13;70H[?25h[?25l[13;43H([12C[46m([12C)[m)[52;162H69[13;69H[?25h[?25l[13;56H([4C[46m([6C)[m)[52;163H8[13;68H[?25h[?25l[13;61H([6C)[52;163H7[13;67H[?25h[?25l[52;163H6[13;66H[?25h[?25l[52;163H5[13;65H[?25h[?25l[52;163H4[13;64H[?25h[?25l[52;163H3[13;63H[?25h[?25l[46m([6C)[m[52;163H2[13;62H[?25h[?25l[52;163H1[13;61H[?25h[?25l([6C)[52;163H0[13;60H[?25h[?25l[52;162H59[13;59H[?25h[?25l[52;163H8[13;58H[?25h[?25l[46m([12C)[m[52;163H7[13;57H[?25h[?25l[52;163H6[13;56H[?25h[?25l([12C)[52;163H5[13;55H[?25h[?25l[52;163H4[13;54H[?25h[?25l[52;163H3[13;53H[?25h[?25l[52;163H2[13;52H[?25h[?25l[52;163H1[13;51H[?25h[?25l[52;163H0[13;50H[?25h[?25l[52;162H49[13;49H[?25h[?25l[52;163H8[13;48H[?25h[?25l[52;163H7[13;47H[?25h[?25l[52;163H6[13;46H[?25h[?25l[52;163H5[13;45H[?25h[?25l[46m([26C)[m[52;163H4[13;44H[?25h[?25l[52;163H3[13;43H[?25h[?25l[13;14H[46m([26C)[m ([26C)[52;163H2[13;42H[?25h[?25l[52;163H1[13;41H[?25h[?25l[13;14H([12C[46m([12C)[m)[52;163H0[13;40H[?25h[?25l[13;27H([4C[46m([6C)[m)[52;162H39[13;39H[?25h[?25l[13;32H([6C)[52;163H8[13;38H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[46m([6C)[m[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l([6C)[52;163H1[13;31H[?25h[?25l[52;163H0[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l[46m([12C)[m[52;163H8[13;28H[?25h[?25l[52;163H7[13;27H[?25h[?25l([12C)[52;163H6[13;26H[?25h[?25l [46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l([12C)[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l [46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l([6C)[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[46m([6C)[m[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l([6C)[52;163H1[13;31H[?25h[?25l[52;163H0[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l[46m([12C)[m[52;163H8[13;28H[?25h[?25l[52;163H7[13;27H[?25h[?25l([12C)[52;163H6[13;26H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H3[13;23H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H0[13;20H[?25h[?25l[52;162H19[13;19H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[46m([26C)[m[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l([26C)[52;163H3[13;13H[?25h[?25l[46m([59C)[m[52;163H2[13;12H[?25h[?25l[95m1+[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls[3C) (sum-lengths ([1m[96mcdr[m ls))))[13;11H([59C)[52;163H3[13;13H[?25h[?25l [1m[96m+[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))[52;163H4[13;14H[?25h[?25l[95m+[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls)[13;98H[K[52;163H3[13;13H[?25h[?25l[1m[96m+[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls)[13;97H[K[13;11H[46m([59C)[m[52;163H2[13;12H[?25h[?25l([59C)[52;163H3[13;13H[?25h[?25l  (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))[52;163H4[13;14H[?25h[?25l[95m1[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))[52;163H5[13;15H[?25h[?25l [46m([26C)[m[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l([26C)[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[46m([61C)[m[52;163H2[13;12H[?25h[?25l[52;163H1[13;11H[?25h[?25l[52;163H2[13;12H[?25h[?25l([61C)[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l [46m([26C)[m[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l([26C)[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l [46m([12C)[m[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l([12C)[52;163H1[13;31H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l [46m([6C)[m[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l([6C)[52;163H6[13;36H[?25h[52;1H[K[13;35H[?25l[52;149H^[[13;35H[52;149H  [13;36H[52;159H13,35[9CTop[13;35H[?25h[?25l[52;149H:[13;35H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2727B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2727B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m ([36m+[m [31m1[m (sum-lengths ([36mcar[m ([36mcar[m ls))) (sum-lengths ([36mcdr[m ([36mcar[m ls)))) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,35[9CTop[13;35H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,35[9CTop"lab5-sol.scm" 92L, 2727B[13;35H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;160H4,2[14;23H[?25h[?25l[52;160H3,21[13;21H[?25h[?25l[52;162H15[13;15H[?25h[?25l[52;163H7[13;17H[?25h[?25l[46m([26C)[m[52;163H6[13;16H[?25h[?25l[52;149H~@k[13;16H[52;149H   [13;15H ([26C)[52;163H5[13;15H[?25h[?25l[52;149H~@k[13;15H[52;149H   [13;14H[52;163H4[13;14H[?25h[?25l[52;149H~@k[13;14H[52;149H   [13;15H[52;163H5[13;15H[?25h[?25l[52;149H~@k[13;15H[52;149H   [13;16H[46m([26C)[m[52;163H6[13;16H[?25h[?25l[52;149Hi[13;16H[52;149H [13;16H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,16[9CTop[13;16H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ([1m[96mcar[m ls)))[46m [m(sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls)[13;98H[K[13;15H[46m([ms[25C[46m)[m [52;163H5[13;15H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ([1m[96mcar[m ls)))[46m [m(sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls)[13;97H[K[13;14H[46m([ms[25C[46m)[m [52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l([26C)[52;163H6[13;16H[?25h[52;1H[K[13;15H[?25l[52;149H^[[13;15H[52;149H  [13;16H[52;159H13,15[9CTop[13;15H[?25h[?25l[52;149H:[13;15H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2725B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2725B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m ([36m+[m (sum-lengths ([36mcar[m ([36mcar[m ls))) (sum-lengths ([36mcdr[m ([36mcar[m ls)))) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,15[9CTop[13;15H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m ([1m[96m+[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,15[9CTop"lab5-sol.scm" 92L, 2725B[13;15H[?25h[?25l[52;162H24[13;24H[?25h[?25l[52;149H~@k[13;24H[52;149H   [13;23H[52;163H3[13;23H[?25h[?25l[52;149H~@k[13;23H[52;149H   [12;21H    ([46m([14C)[m[52;160H2,21[12;21H[?25h[?25l[52;149H~@k[12;21H[52;149H   [13;23H[12;6H([14C)[52;160H3,23[13;23H[?25h[?25l[52;149H~@k[13;23H[52;149H   [13;24H[52;163H4[13;24H[?25h[?25l[52;149H~@k[13;24H[52;149H   [13;25H[52;163H5[13;25H[?25h[?25l[52;149H~@k[13;25H[52;149H   [13;26H[52;163H6[13;26H[?25h[?25l[52;149H~@k[13;26H[52;149H   [13;27H[46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;149H~@k[13;27H[52;149H   [13;28H([12C)[52;163H8[13;28H[?25h[?25l[52;149H~@k[13;28H[52;149H   [13;29H[52;163H9[13;29H[?25h[?25l[52;149H~@k[13;29H[52;149H   [13;30H[52;162H30[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [13;31H[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;32H[46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;33H([6C)[52;163H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;34H[52;163H4[13;34H[?25h[?25l[52;149H~@k[13;34H[52;149H   [13;35H[52;163H5[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [13;38H[52;163H8[13;38H[?25h[?25l[52;149H~@k[13;38H[52;149H   [12;21H    ([46m([14C)[m[52;160H2,21[12;21H[?25h[?25l[52;149H~@k[12;21H[52;149H   [11;18H    [46m([12C)[m[12;6H([14C)[52;160H1,18[11;18H[?25h[?25l[52;149H~@k[11;18H[52;149H   [11;18H[?25h[?25l[52;149H~@k[11;18H[52;149H   [12;21H[11;5H([12C)[12;6H[46m([14C)[m[52;160H2,21[12;21H[?25h[?25l[52;149H~@k[12;21H[52;149H   [13;38H[12;6H([14C)[52;160H3,38[13;38H[?25h[?25l[52;149H~@k[13;38H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;35H[52;163H5[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;34H[52;163H4[13;34H[?25h[?25l[52;149H~@k[13;34H[52;149H   [13;33H[52;163H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;32H[46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;31H ([6C)[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;30H[52;163H0[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [13;29H[52;162H29[13;29H[?25h[?25l[52;149H~@k[13;29H[52;149H   [13;28H[52;163H8[13;28H[?25h[?25l[52;149H~@k[13;28H[52;149H   [13;27H[46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;149H~@k[13;27H[52;149H   [13;28H([12C)[52;163H8[13;28H[?25h[?25l[52;149H~@k[13;28H[52;149H   [13;29H[52;163H9[13;29H[?25h[?25l[52;149H~@k[13;29H[52;149H   [13;30H[52;162H30[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [13;31H[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;32H[46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;33H([6C)[52;163H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;34H[52;163H4[13;34H[?25h[?25l[52;149H~@k[13;34H[52;149H   [13;35H[52;163H5[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [14;35H[9;1H[46m([14;35H)[m[52;160H4,35[14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [15;8H[9;1H([14;35H)[52;160H5,1-8[15;8H[?25h[?25l[52;149H~@k[15;8H[52;149H   [16;1H[52;160H6,0-1[16;1H[?25h[?25l[52;149H~@k[16;1H[52;149H   [17;31H[46m([29C)[m[52;160H7,31 [17;31H[?25h[?25l[52;149H~@k[17;31H[52;149H   [18;36H[17;1H([29C)
[46m([34C)[m[52;160H8,36[18;36H[?25h[?25l[52;149H~@k[18;36H[52;149H   [19;37H[18;1H([34C)[19;33H[38;5;224m[46m([3C)[m[52;160H9,37[19;37H[?25h[?25l[52;149H~@k[19;37H[52;149H   [19;38H[19;26H[38;5;224m[46m([m[6C[38;5;224m([3C)[m[38;5;224m[46m)[m[52;163H8[19;38H[?25h[?25l[52;149H~@k[19;38H[52;149H   [19;39H[19;12H[46m([m[13C[38;5;224m([11C)[m[46m)[m[52;163H9[19;39H[?25h[?25l[52;149H~@k[19;39H[52;149H   [19;40H[19;12H([26C)[52;162H40[19;40H[?25h[?25l[52;149H~@k[19;40H[52;149H   [19;41H[52;163H1[19;41H[?25h[?25l[52;149H~@k[19;41H[52;149H   [19;42H[46m([40C)[m[52;163H2[19;42H[?25h[?25l[52;149H~@k[19;42H[52;149H   [19;41H([40C)[52;163H1[19;41H[?25h[?25l[52;149H~@k[19;41H[52;149H   [19;40H[52;163H0[19;40H[?25h[?25l[52;149H~@k[19;40H[52;149H   [19;39H[19;12H[46m([26C)[m[52;162H39[19;39H[?25h[?25l[52;149H~@k[19;39H[52;149H   [19;38H[19;12H([13C[38;5;224m[46m([11C)[m)[52;163H8[19;38H[?25h[?25l[52;149H~@k[19;38H[52;149H   [18;36H[46m([34C)[m[19;26H[38;5;224m([11C)[m[52;160H8,36[18;36H[?25h[?25l[52;149H~@k[18;36H[52;149H   [17;31H[46m([29C)[m
([34C)[52;160H7,31[17;31H[?25h[?25l[52;149H~@k[17;31H[52;149H   [16;1H
([29C)[52;160H6,0-1[16;1H[?25h[?25l[52;149H~@k[16;1H[52;149H   [15;8H[52;160H5,1-8[15;8H[?25h[?25l[52;149H~@k[15;8H[52;149H   [14;35H[9;1H[46m([14;35H)[m[52;160H4,35 [14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [14;34H[9;1H(
  [46m([14;34H)[m)[52;163H4[14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H   [14;33H[10;3H([14;5H[46m([27C)[m)[52;163H3[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [14;34H[10;3H[46m([m[14;5H([27C)[46m)[m[52;163H4[14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H   [14;35H[9;1H[46m([m
  ([14;34H)[46m)[m[52;163H5[14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [13;35H[9;1H([14;35H)[52;160H3[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [12;21H    ([46m([14C)[m[52;160H2,21[12;21H[?25h[?25l[52;149H~@k[12;21H[52;149H   [13;35H[12;6H([14C)[52;160H3,35[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [13;38H[52;163H8[13;38H[?25h[?25l[52;149H~@k[13;38H[52;149H   [13;39H[13;32H[46m([6C)[m[52;163H9[13;39H[?25h[?25l[52;149H~@k[13;39H[52;149H   [13;40H[13;27H[46m([m[4C([6C)[46m)[m[52;162H40[13;40H[?25h[?25l[52;149H~@k[13;40H[52;149H   [13;41H[13;14H[46m([m[12C([12C)[46m)[m[52;163H1[13;41H[?25h[?25l[52;149H~@k[13;41H[52;149H   [13;42H[13;14H([26C)[52;163H2[13;42H[?25h[?25l[52;149H~@k[13;42H[52;149H   [13;41H[13;14H[46m([26C)[m[52;163H1[13;41H[?25h[?25l[52;149H~@k[13;41H[52;149H   [13;40H[13;14H([12C[46m([12C)[m)[52;163H0[13;40H[?25h[?25l[52;149H~@k[13;40H[52;149H   [13;39H[13;27H([4C[46m([6C)[m)[52;162H39[13;39H[?25h[?25l[52;149H~@k[13;39H[52;149H   [13;38H([6C)[52;163H8[13;38H[?25h[?25l[52;149H~@k[13;38H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;35H[52;163H5[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;34H[52;163H4[13;34H[?25h[?25l[52;149H~@k[13;34H[52;149H   [13;33H[52;163H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;32H[46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;31H ([6C)[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;30H[52;163H0[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [13;29H[52;162H29[13;29H[?25h[?25l[52;149H~@k[13;29H[52;149H   [13;28H[52;163H8[13;28H[?25h[?25l[52;149H~@k[13;28H[52;149H   [13;27H[46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;149H~@k[13;27H[52;149H   [13;26H ([12C)[52;163H6[13;26H[?25h[?25l[52;149H~@k[13;26H[52;149H   [13;25H[52;163H5[13;25H[?25h[?25l[52;149H~@k[13;25H[52;149H   [13;24H[52;163H4[13;24H[?25h[?25l[52;149H~@k[13;24H[52;149H   [13;23H[52;163H3[13;23H[?25h[?25l[52;149H~@k[13;23H[52;149H   [13;22H[52;163H2[13;22H[?25h[?25l[52;149H~@k[13;22H[52;149H   [13;21H[52;163H1[13;21H[?25h[?25l[52;149H~@k[13;21H[52;149H   [13;20H[52;163H0[13;20H[?25h[?25l[52;149H~@k[13;20H[52;149H   [13;19H[52;162H19[13;19H[?25h[?25l[52;149H~@k[13;19H[52;149H   [13;18H[52;163H8[13;18H[?25h[?25l[52;149H~@k[13;18H[52;149H   [13;17H[52;163H7[13;17H[?25h[?25l[52;149H~@k[13;17H[52;149H   [13;16H[52;163H6[13;16H[?25h[?25l[52;149H~@k[13;16H[52;149H   [13;15H[52;163H5[13;15H[?25h[?25l[52;149H~@k[13;15H[52;149H   [13;14H[46m([26C)[m[52;163H4[13;14H[?25h[?25l[52;149H~@k[13;14H[52;149H   [13;13H ([26C)[52;163H3[13;13H[?25h[?25l[52;149H~@k[13;13H[52;149H   [13;12H[52;163H2[13;12H[?25h[?25l[52;149H~@k[13;12H[52;149H   [13;11H[46m([59C)[m[52;163H1[13;11H[?25h[?25l([59C)[52;163H8[13;18H[?25h[?25l[52;163H2[13;12H[?25h[?25l[52;149Hi[13;12H[52;149H [13;12H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,12[9CTop[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l [46m([26C)[m[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l([26C)[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l [46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l([12C)[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l [46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l([6C)[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[46m([6C)[m[52;163H9[13;39H[?25h[?25l[13;32H([6C)[52;163H8[13;38H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[46m([6C)[m[52;163H9[13;39H[?25h[?25l[13;27H[46m([m[4C([6C)[46m)[m[52;162H40[13;40H[?25h[?25l[13;14H[46m([m[12C([12C)[46m)[m[52;163H1[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[13;14H([26C) [46m([26C)[m[52;163H3[13;43H[?25h[?25l[52;163H4[13;44H[?25h[?25l[52;163H3[13;43H[?25h[?25l[13;14H[46m([26C)[m ([26C)[52;163H2[13;42H[?25h[?25l[52;163H1[13;41H[?25h[?25l[13;14H([12C[46m([12C)[m)[52;163H0[13;40H[?25h[?25l[13;27H([4C[46m([6C)[m)[52;162H39[13;39H[?25h[?25l[13;27H[46m([m[4C([6C)[46m)[m[52;162H40[13;40H[?25h[?25l[13;14H[46m([m[12C([12C)[46m)[m[52;163H1[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[13;14H([26C) [46m([26C)[m[52;163H3[13;43H[?25h[?25l[9;1H[46m([m[13;43H([26C)[14;35H[46m)[m[52;160H4,36[14;36H[?25h[?25l[9;1H([13;43H[46m([26C)[m[14;35H)[52;160H3,43[13;43H[?25h[?25l[52;163H4[13;44H[?25h[?25l([26C)[52;163H5[13;45H[?25h[?25l[52;163H6[13;46H[?25h[?25l[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l[52;163H9[13;49H[?25h[?25l[52;162H50[13;50H[?25h[?25l[52;163H1[13;51H[?25h[?25l[52;163H2[13;52H[?25h[?25l[52;163H3[13;53H[?25h[?25l[52;163H4[13;54H[?25h[?25l[52;163H5[13;55H[?25h[?25l [46m([12C)[m[52;163H6[13;56H[?25h[?25l[52;163H7[13;57H[?25h[?25l([12C)[52;163H8[13;58H[?25h[?25l[52;163H9[13;59H[?25h[?25l[52;162H60[13;60H[?25h[?25l [46m([6C)[m[52;163H1[13;61H[?25h[?25l[52;163H2[13;62H[?25h[?25l([6C)[52;163H3[13;63H[?25h[?25l[52;163H4[13;64H[?25h[?25l[52;163H5[13;65H[?25h[?25l[52;163H6[13;66H[?25h[?25l[52;163H7[13;67H[?25h[?25l[46m([6C)[m[52;163H8[13;68H[?25h[?25l[13;56H[46m([m[4C([6C)[46m)[m[52;163H9[13;69H[?25h[?25l[13;43H[46m([m[12C([12C)[46m)[m[52;162H70[13;70H[?25h[?25l[13;11H[46m([m[31C([26C)[46m)[m[52;163H1[13;71H[?25h[?25l[9;1H[46m([m[13;11H([59C)[14;35H[46m)[m[52;160H4,36[14;36H[?25h[?25l[52;163H5[14;35H[?25h[?25l[9;1H(
  [46m([14;34H)[m)[52;163H4[14;34H[?25h[?25l[10;3H([14;5H[46m([27C)[m)[52;163H3[14;33H[?25h[?25l    ([5C[46m([20C)[m)[52;163H2[14;32H[?25h[?25l[14;11H([12C[46m([6C)[m)[52;163H1[14;31H[?25h[?25l[14;24H([6C)[52;163H0[14;30H[?25h[?25l[52;162H29[14;29H[?25h[?25l[52;163H8[14;28H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H6[14;26H[?25h[?25l[46m([6C)[m[52;163H5[14;25H[?25h[?25l[52;163H4[14;24H[?25h[?25l([6C)[52;163H3[14;23H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H0[14;20H[?25h[?25l[52;162H19[14;19H[?25h[?25l[52;163H8[14;18H[?25h[?25l[52;163H7[14;17H[?25h[?25l[52;163H6[14;16H[?25h[?25l[52;163H5[14;15H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H3[14;13H[?25h[?25l[46m([20C)[m[52;163H2[14;12H[?25h[?25l+sum-lengths ([1m[96mcdr[m ls[4C)[14;11H([20C)[52;163H3[14;13H[?25h[?25l[1m[96m+[m sum-lengths ([1m[96mcdr[m ls)))))[52;163H4[14;14H[?25h[?25l2sum-lengths ([1m[96mcdr[m ls)))))[52;163H5[14;15H[?25h[?25lsum-lengths ([1m[96mcdr[m ls)[14;38H[K[52;163H4[14;14H[?25h[?25l1sum-lengths ([1m[96mcdr[m ls)))))[52;163H5[14;15H[?25h[?25l[95m1[m sum-lengths ([1m[96mcdr[m ls)))))[52;163H6[14;16H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)))))[14;16H[46m([20C)[m[52;163H7[14;17H[?25h[?25l([20C)[52;163H8[14;18H[?25h[?25l[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25l[52;163H4[14;24H[?25h[?25l[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H8[14;28H[?25h[?25l [46m([6C)[m[52;163H9[14;29H[?25h[?25l[52;162H30[14;30H[?25h[?25l([6C)[52;163H1[14;31H[?25h[?25l[52;163H2[14;32H[?25h[?25l[52;163H3[14;33H[?25h[?25l[52;163H4[14;34H[?25h[?25l[52;163H5[14;35H[?25h[?25l[46m([6C)[m[52;163H6[14;36H[?25h[?25l[14;16H[46m([m[12C([6C)[46m)[m[52;163H7[14;37H[?25h[?25l[14;11H[46m([m[4C([20C)[46m)[m[52;163H8[14;38H[?25h[?25l    [46m([m[5C([26C)[46m)[m[52;163H9[14;39H[?25h[?25l[2C)[10;3H[46m([m[14;5H([33C)[46m)[m[52;162H40[14;40H[?25h[?25l[10;3H([13;27H[46m([12C)[m[14;40H)[52;160H3[13;40H[?25h[?25l[10;3H[46m([m[13;27H([12C)[14;40H[46m)[m[52;160H4[14;40H[?25h[?25l[9;1H[46m([m
  ([14;40H)[46m)[m[52;163H1[14;41H[?25h[?25l[9;1H([13;14H[46m([26C)[m[14;41H)[52;160H3[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[13;14H([26C) [46m([26C)[m[52;163H3[13;43H[?25h[?25l[52;163H4[13;44H[?25h[?25l([26C)[52;163H5[13;45H[?25h[?25l[52;163H6[13;46H[?25h[?25l[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l[52;163H9[13;49H[?25h[?25l[52;162H50[13;50H[?25h[?25l[52;163H1[13;51H[?25h[?25l[52;163H2[13;52H[?25h[?25l[52;163H3[13;53H[?25h[?25l[52;163H4[13;54H[?25h[?25l[52;163H5[13;55H[?25h[?25l [46m([12C)[m[52;163H6[13;56H[?25h[?25l[52;163H7[13;57H[?25h[?25l([12C)[52;163H8[13;58H[?25h[?25l[52;163H9[13;59H[?25h[?25l[52;162H60[13;60H[?25h[?25l [46m([6C)[m[52;163H1[13;61H[?25h[?25l[52;163H2[13;62H[?25h[?25l([6C)[52;163H3[13;63H[?25h[?25l[52;163H4[13;64H[?25h[?25l[52;163H5[13;65H[?25h[?25l[52;163H6[13;66H[?25h[?25l[52;163H7[13;67H[?25h[?25l[46m([6C)[m[52;163H8[13;68H[?25h[?25l[13;56H[46m([m[4C([6C)[46m)[m[52;163H9[13;69H[?25h[?25l[13;43H[46m([m[12C([12C)[46m)[m[52;162H70[13;70H[?25h[?25l[13;11H[46m([m[31C([26C)[46m)[m[52;163H1[13;71H[?25h[?25l[52;163H2[13;72H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;96H[K[13;11H([31C[46m([26C)[m [52;163H1[13;71H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;95H[K[13;43H([12C[46m([12C)[m [52;163H0[13;70H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;94H[K[13;56H([4C[46m([6C)[m [52;162H69[13;69H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;93H[K[13;61H([6C [52;163H8[13;68H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;92H[K[52;163H7[13;67H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;91H[K[52;163H6[13;66H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[13;90H[K[52;163H5[13;65H[?25h[?25lca (sum-lengths ([1m[96mcdr[m ls)[13;89H[K[52;163H4[13;64H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;88H[K[52;163H3[13;63H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;87H[K[13;61H[46m([23C)[m[52;163H2[13;62H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;86H[K[13;61H [23C)[52;163H1[13;61H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[13;85H[K[52;163H0[13;60H[?25h[?25lcd (sum-lengths ([1m[96mcdr[m ls)[13;84H[K[52;162H59[13;59H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;83H[K[52;163H8[13;58H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;82H[K[13;56H[46m([23C)[m[52;163H7[13;57H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;81H[K[13;56H [23C)[52;163H6[13;56H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[13;80H[K[52;163H5[13;55H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;79H[K[52;163H4[13;54H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;78H[K[52;163H3[13;53H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;77H[K[52;163H2[13;52H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;76H[K[52;163H1[13;51H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;75H[K[52;163H0[13;50H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;74H[K[52;162H49[13;49H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;73H[K[52;163H8[13;48H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;72H[K[52;163H7[13;47H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;71H[K[52;163H6[13;46H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;70H[K[52;163H5[13;45H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;69H[K[13;43H[46m([23C)[m[52;163H4[13;44H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;68H[K[13;43H [23C)[52;163H3[13;43H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[13;67H[K[13;14H[46m([26C)[m[52;163H2[13;42H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;66H[K[13;14H([12C[46m([12C)[m [52;163H1[13;41H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls))))[13;14H[46m([m[12C([12C)[46m)[m[52;163H2[13;42H[?25h[?25l[52;163H1[13;41H[?25h[?25l[13;14H([12C[46m([12C)[m)[52;163H0[13;40H[?25h[?25l[13;27H([4C[46m([6C)[m)[52;162H39[13;39H[?25h[?25l[13;32H([6C)[52;163H8[13;38H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[46m([6C)[m[52;163H9[13;39H[?25h[?25l[13;27H[46m([m[4C([6C)[46m)[m[52;162H40[13;40H[?25h[?25l[13;27H([4C[46m([6C)[m)[52;162H39[13;39H[?25h[?25l[13;32H([6C)[52;163H8[13;38H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[46m([6C)[m[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l([6C)[52;163H1[13;31H[?25h[?25l[52;163H0[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l[46m([12C)[m[52;163H8[13;28H[?25h[?25l[52;163H7[13;27H[?25h[?25l([12C)[52;163H6[13;26H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H3[13;23H[?25h[?25l[12;6H[46m([14C)[m[52;160H2,22[12;22H[?25h[?25l    (([14C)[52;160H3,23[13;23H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l [46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l([12C)[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l [46m([6C)[m[52;163H2[13;32H[?25h[?25l([6C)[52;160H4[14;32H[?25h[?25l[13;32H[46m([6C)[m[52;160H3[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;66H[K[13;31H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H1[13;31H[?25h[?25lca([1m[96m[46mc[m[1m[96mar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;65H[K[13;30H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H0[13;30H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;64H[K[13;29H[46m([m[1m[96mcar[m ls[46m)[m)[52;162H29[13;29H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;63H[K[13;28H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H8[13;28H[?25h[?25l[1m[96m[46mc[m[1m[96mar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;62H[K[13;27H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H7[13;27H[?25h[?25l([6C)[52;163H6[13;26H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H3[13;23H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H0[13;20H[?25h[?25l[52;162H19[13;19H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[46m([20C)[m[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;61H[K[13;13H[46m([ms[19C[46m)[m)[52;163H3[13;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;60H[K[13;12H[46m([ms[19C[46m)[m)[52;163H2[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l[46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;59H[K[13;11H[46m([ms[19C[46m)[m)[52;163H2[13;12H[?25h[?25l([20C)[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l [46m([6C)[m[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l([6C)[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[46m([6C)[m[52;163H1[13;31H[?25h[?25l[13;11H[46m([m[12C([6C)[46m)[m[52;163H2[13;32H[?25h[?25l     [46m([m[4C([20C)[46m)[m[52;163H3[13;33H[?25h[?25l[52;163H4[13;34H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;58H[K[13;6H([4C[46m([20C)[m [52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l[13;11H([12C[46m([6C)[m)[52;163H1[13;31H[?25h[?25l[13;11H[46m([m[12C([6C)[46m)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[13;11H([20C) [46m([20C)[m[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l([20C)[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[52;163H9[13;39H[?25h[?25l[52;162H40[13;40H[?25h[?25l[52;163H1[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l[52;163H4[13;44H[?25h[?25l[52;163H5[13;45H[?25h[?25l[52;163H6[13;46H[?25h[?25l [46m([6C)[m[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l([6C)[52;163H9[13;49H[?25h[?25l[52;162H50[13;50H[?25h[?25l[52;163H1[13;51H[?25h[?25l[52;163H2[13;52H[?25h[?25l[52;163H3[13;53H[?25h[?25l[46m([6C)[m[52;163H4[13;54H[?25h[?25l[13;34H[46m([m[12C([6C)[46m)[m[52;163H5[13;55H[?25h[?25l     [46m([m[27C([20C)[46m)[m[52;163H6[13;56H[?25h[?25l[12;5H[46m([m[13;6H([49C)[46m)[m[52;163H7[13;57H[?25h[?25l[52;163H8[13;58H[?25h[?25l[9;1H[46m([m[12;5H([13;57H)[14;41H[46m)[m[52;160H4,42[14;42H[?25h[?25l[52;163H1[14;41H[?25h[?25l[9;1H(
  [46m([14;40H)[m)[52;163H0[14;40H[?25h[?25l[10;3H([14;5H[46m([33C)[m)[52;162H39[14;39H[?25h[?25l    ([5C[46m([26C)[m)[52;163H8[14;38H[?25h[?25l[14;11H([4C[46m([20C)[m)[52;163H7[14;37H[?25h[?25l[14;16H([12C[46m([6C)[m)[52;163H6[14;36H[?25h[52;1H[K[14;35H[?25l[52;149H^[[14;35H[52;149H  [14;36H[14;29H([6C)[52;159H14,35[9CTop[14;35H[?25h[?25l[52;149H:[14;35H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2692B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[Kclear
[?2004l[H[2J[3J[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm 
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     2
expected:   0
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     6
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     10
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [10Pclearvim lab5-sol.scm 
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2692B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,35[9CTop[14;35H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,35[9CTop"lab5-sol.scm" 92L, 2692B[14;35H[?25h[?25l[52;160H7,30[17;30H[?25h[?25l[18;30H[38;5;224m[46m()[m[52;160H8,31[18;31H[?25h[?25l[14;5H[46m([33C)[m[18;30H[38;5;224m()[m[52;160H4,39[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [13;39H
    ([33C)[52;160H3[13;39H[?25h[?25l[52;149H~@k[13;39H[52;149H   [12;21H    ([46m([14C)[m[52;160H2,21[12;21H[?25h[?25l[52;149H~@k[12;21H[52;149H   [12;20H    (([6C[46m([6C)[m)[52;163H0[12;20H[?25h[?25l[52;149H~@k[12;20H[52;149H   [12;21H    ([46m([m[6C([6C)[46m)[m[52;163H1[12;21H[?25h[?25l[52;149Hi[12;21H[52;149H [12;21H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H12,21[9CTop[12;21H[?25h[?25l[12;21H[K[12;6H([6C[46m([6C)[m[52;163H0[12;20H[?25h[?25l[12;13H([6C)[52;162H19[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25lcarls)[12;20H[K[52;163H7[12;17H[?25h[?25lls)[12;19H[K[52;163H6[12;16H[?25h[?25lls)[12;18H[K[52;163H5[12;15H[?25h[?25lls)[12;17H[K[12;13H[46m([mls[46m)[m[52;163H4[12;14H[?25h[?25l[46ml[ms)[12;16H[K[12;13Hl[52;163H3[12;13H[?25h[?25l[52;163H4[12;14H[?25h[?25l    ([46m([8C)[m[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25l    (([8C)[52;160H3[13;16H[?25h[?25l[12;6H[46m([8C)[m[52;160H2[12;16H[?25h[?25l[52;163H5[12;15H[?25h[?25l    (([8C)[52;163H4[12;14H[?25h[?25l[52;163H3[12;13H[?25h[?25l[52;160H1[11;13H[?25h[?25l(ls) [95m0[m)[11;13H[46m([mls[46m)[m[52;163H4[11;14H[?25h[?25lcl[46ms[m) [95m0[m)[11;13H(cls[52;163H5[11;15H[?25h[?25lals) [95m0[m)[52;163H6[11;16H[?25h[?25lrls) [95m0[m)[52;163H7[11;17H[?25h[?25l[1m[96mcar[m ls) [95m0[m)[52;163H8[11;18H[?25h[?25l[52;163H9[11;19H[?25h[?25l[46m([6C)[m[52;162H20[11;20H[?25h[?25l[52;163H1[11;21H[?25h[?25l_ [95m0[m)[11;13H([6C)[52;163H2[11;22H[?25h[?25l [95m0[m)[11;24H[K[11;13H[46m([6C)[m[52;163H1[11;21H[?25h[?25l) [95m0[m)    ([46m([m[6C([6C)[46m)[m[52;163H2[11;22H[?25h[?25l    (([14C)[12;6H[46m([8C)[m[52;160H2,16[12;16H[?25h[?25l[52;163H5[12;15H[?25h[?25l    (([8C)[52;163H4[12;14H[?25h[?25l[52;163H3[12;13H[?25h[?25l(ls)[46m([mls[46m)[m[52;163H4[12;14H[?25h[?25lcl[46ms[m)(cls[52;163H5[12;15H[?25h[?25lals)[52;163H6[12;16H[?25h[?25lrls)[52;163H7[12;17H[?25h[?25l[1m[96mcar[m ls)[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[46m([6C)[m[52;162H20[12;20H[?25h[?25l[52;163H1[12;21H[?25h[?25l)    ([46m([m[6C([6C)[46m)[m[52;163H2[12;22H[?25h[?25l    (([14C)[52;160H3[13;22H[?25h[52;1H[K[13;21H[?25l[52;149H^[[13;21H[52;149H  [13;22H[52;159H13,21[9CTop[13;21H[?25h[?25l[52;149H:[13;21H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2698B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2698B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ([36mcar[m ls)) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,21[9CTop[13;21H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ([1m[96mcar[m ls)) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,21[9CTop"lab5-sol.scm" 92L, 2698B[13;21H[?25h[?25l[52;160H1,18[11;18H[?25h[?25l[52;149Hi[11;18H[52;149H [11;18H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H11,18[9CTop[11;18H[?25h[?25lcarls)) [95m0[m)[11;24H[K[52;163H7[11;17H[?25h[?25lls)) [95m0[m)[11;23H[K[52;163H6[11;16H[?25h[?25lls)) [95m0[m)[11;22H[K[52;163H5[11;15H[?25h[?25lls)) [95m0[m)[11;21H[K[11;13H[46m([mls[46m)[m[52;163H4[11;14H[?25h[?25l[46ml[ms)[1C [95m0[m)[11;20H[K[11;13Hls))[52;163H3[11;13H[?25h[?25l[52;163H4[11;14H[?25h[?25l    ([46m([8C)[m[52;163H5[11;15H[?25h[?25l    [46m([m([8C)[46m)[m[52;163H6[11;16H[?25h[?25l[46m [m[95m0[m)[11;19H[K[11;5H([46m([8C)[m [52;163H5[11;15H[?25h[?25l[52;163H6[11;16H[?25h[?25l    (([8C)[52;160H2[12;16H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25lcarls)[12;21H[K[52;163H7[12;17H[?25h[?25lls)[12;20H[K[52;163H6[12;16H[?25h[?25lls)[12;19H[K[52;163H5[12;15H[?25h[?25lls)[12;18H[K[12;13H[46m([mls[46m)[m[52;163H4[12;14H[?25h[?25l[46ml[ms)[12;17H[K[12;13Hls))[52;163H3[12;13H[?25h[?25l[52;163H4[12;14H[?25h[?25l    ([46m([8C)[m[52;163H5[12;15H[?25h[?25l    [46m([m([8C)[46m)[m[52;163H6[12;16H[?25h[?25l[12;16H[K[12;5H([46m([8C)[m[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25l    (([8C)[52;160H3[13;16H[?25h[52;1H[K[13;15H[?25l[52;149H^[[13;15H[52;149H  [13;16H[52;159H13,15[9CTop[13;15H[?25h[?25l[52;149H:[13;15H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2686B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     2
expected:   0
--------------------
cdr: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2686B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ls)[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,15[9CTop[13;15H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ls)[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,15[9CTop"lab5-sol.scm" 92L, 2686B[13;15H[?25h[?25l[52;162H27[13;27H[?25h[?25l[52;160H2,13[12;13H[?25h[?25l[52;149Hc[12;13H[?25h[?25l[52;150Ha[12;13H[?25h[?25l[52;151Hi[12;13H[52;149H   [12;13H[?25h[?25l[52;149H([12;13H[52;149H [11;13H[52;160H1[11;13H[?25h[?25l[52;149Hc[11;13H[?25h[?25l[52;150H~@k[11;13H[52;149H    [11;5H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H11,5[10CTop[11;51r[51;1H
[1;52r[11;5H[K[51;9H[38;5;224m'()[m[52;159H[K[52;159H11,5[10CTop[11;5H[?25h[52;1H[K[11;1H[?25l[52;149H^[[11;1H[52;149H  [11;5H[52;159H11,0-1[8CTop[11;1H[?25h[?25l[52;149Hu[11;1H[52;1H1 more line; before #1  7 seconds ago[52;149H[K[12;13H[12;51r[12;1H[L[1;52r[11;5H(([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ls)[52;1H[K[52;159H12,13[9CTop1 more line; before #1  7 seconds ago[52;159H[K[52;159H12,13[9CTop[12;13H[?25h[?25l[52;149H~@k[12;13H[52;149H   [13;13H[52;160H3[13;13H[?25h[?25l[52;149H~@k[13;13H[52;149H   [12;13H[52;160H2[12;13H[?25h[?25l[52;149H~@k[12;13H[52;149H   [13;13H[52;160H3[13;13H[?25h[?25l[52;149H~@k[13;13H[52;149H   [12;13H[52;160H2[12;13H[?25h[?25l[52;149H~@k[12;13H[52;149H   [12;12H[52;163H2[12;12H[?25h[?25l[52;149H~@k[12;12H[52;149H   [13;12H[52;160H3[13;12H[?25h[?25l[52;149H~@k[13;12H[52;149H   [13;11H[46m([20C)[m[52;163H1[13;11H[?25h[?25l[52;149H~@k[13;11H[52;149H   [13;10H ([20C)[52;163H0[13;10H[?25h[?25l[52;149H~@k[13;10H[52;149H   [12;10H[52;160H2[12;10H[?25h[?25l[52;149H~@k[12;10H[52;149H   [12;11H[52;163H1[12;11H[?25h[?25l[52;149H~@k[12;11H[52;149H   [12;12H[52;163H2[12;12H[?25h[?25l[52;149H~@k[12;12H[52;149H   [12;13H[52;163H3[12;13H[?25h[?25l[52;149Hi[12;13H[52;149H [12;13H[52;1H[1m-- INSERT --[m[52;14H[K[52;159H12,13[9CTop[12;13H[?25h[?25l(ls)[46m([mls[46m)[m[52;163H4[12;14H[?25h[?25lcl[46ms[m)(cls[52;163H5[12;15H[?25h[?25lals)[52;163H6[12;16H[?25h[?25l ls)[52;163H7[12;17H[?25h[?25lls)[12;19H[K[52;163H6[12;16H[?25h[?25ltls)[52;163H7[12;17H[?25h[?25l ls)[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[46m([mcat ls[46m)[m[52;162H20[12;20H[?25h[?25l[12;13H(cat ls)[52;162H19[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H7[12;17H[?25h[?25l ls)[12;20H[K[52;163H6[12;16H[?25h[?25l[1m[96mcar[m ls)[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[46m([6C)[m[52;162H20[12;20H[?25h[?25l[52;163H1[12;21H[?25h[?25l)    ([46m([m[6C([6C)[46m)[m[52;163H2[12;22H[?25h[?25l    (([14C)[52;160H3[13;22H[?25h[?25l[52;160H4[14;22H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H0[14;20H[?25h[?25l[52;162H19[14;19H[?25h[?25l[52;163H8[14;18H[?25h[?25l[46m([20C)[m[52;163H7[14;17H[?25h[?25l[52;163H6[14;16H[?25h[?25l([20C)[52;160H5,2-9[15;9H[?25h[?25l[14;16H[46m([20C)[m[52;160H4,16 [14;16H[?25h[?25l([20C)[52;163H5[14;15H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H3[14;13H[?25h[?25l[46m([26C)[m[52;163H2[14;12H[?25h[?25l([26C)[52;163H3[14;13H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H5[14;15H[?25h[?25l [46m([20C)[m[52;163H6[14;16H[?25h[52;1H[K[14;15H[?25l[52;149H^[[14;15H[52;149H  [14;16H([20C)[52;159H14,15[9CTop[14;15H[?25h[?25l[52;149H:[14;15H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2692B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2692B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,15[9CTop[14;15H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,15[9CTop"lab5-sol.scm" 92L, 2692B[14;15H[?25h[?25l[52;162H22[14;22H[?25h[?25l[52;149H~@k[14;22H[52;149H   [15;8H[52;160H5,1-8[15;8H[?25h[?25l[52;149H~@k[15;8H[52;149H   [14;22H[52;160H4,22 [14;22H[?25h[?25l[52;149H~@k[14;22H[52;149H   [14;21H[52;163H1[14;21H[?25h[?25l[52;149H~@k[14;21H[52;149H   [14;20H[52;163H0[14;20H[?25h[?25l[52;149H~@k[14;20H[52;149H   [14;19H[52;162H19[14;19H[?25h[?25l[52;149H~@k[14;19H[52;149H   [14;18H[52;163H8[14;18H[?25h[?25l[52;149H~@k[14;18H[52;149H   [14;17H[52;163H7[14;17H[?25h[?25l[52;149H~@k[14;17H[52;149H   [14;16H[46m([20C)[m[52;163H6[14;16H[?25h[?25l[52;149H~@k[14;16H[52;149H   [14;15H ([20C)[52;163H5[14;15H[?25h[?25l[52;149H~@k[14;15H[52;149H   [14;14H[52;163H4[14;14H[?25h[?25l[52;149H~@k[14;14H[52;149H   [14;13H[52;163H3[14;13H[?25h[?25l[52;149H~@k[14;13H[52;149H   [14;12H[52;163H2[14;12H[?25h[?25l[52;149H~@k[14;12H[52;149H   [14;11H[46m([26C)[m[52;163H1[14;11H[?25h[?25l[52;149H^M[14;11H[52;149H  [15;8H[14;11H([26C)[52;160H5,1-8[15;8H[?25h[?25l[52;149H~@k[15;8H[52;149H   [14;8H[52;160H4,8  [14;8H[?25h[?25l[52;149H~@k[14;8H[52;149H   [14;9H[52;162H9[14;9H[?25h[?25l[52;149H~@k[14;9H[52;149H   [14;10H[52;162H10[14;10H[?25h[?25l[52;149H~@k[14;10H[52;149H   [14;11H[46m([26C)[m[52;163H1[14;11H[?25h[?25l[52;149H~@k[14;11H[52;149H   [14;12H([26C)[52;163H2[14;12H[?25h[?25l[52;149H~@k[14;12H[52;149H   [14;11H[46m([26C)[m[52;163H1[14;11H[?25h[?25l[52;149Hi[14;11H[52;149H [14;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,11[9CTop[14;11H[?25h[?25l[15;51r[15;1H[L[1;52r[14;11H[K[15;7H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))[52;159H[K[52;159H15,7[10CTop[15;7H[46m([26C)[15;7H[?25h[?25l[m([26C)[52;160H4[14;7H[?25h[?25l[52;162H8[14;8H[?25h[?25l[52;162H9[14;9H[?25h[?25l[52;162H10[14;10H[?25h[?25l[15;51r[15;1H[L[1;52r[52;159H[K[52;159H15,7[10CTop[15;7H[?25h[?25l([46m([16;35H)[m[52;162H8[15;8H[?25h[?25li([16;35H)[52;162H9[15;9H[?25h[?25l[93mif[m[52;162H10[15;10H[?25h[?25l[52;163H1[15;11H[?25h[?25l([46m([16;35H)[m[52;163H2[15;12H[?25h[?25ll([16;35H)[52;163H3[15;13H[?25h[?25ls[52;163H4[15;14H[?25h[?25l[52;163H5[15;15H[?25h[?25l[52;163H4[15;14H[?25h[?25l[15;13H[K[52;163H3[15;13H[?25h[?25l[15;12H[K[15;11H[46m([16;35H)[m[52;163H2[15;12H[?25h[?25ln([16;35H)[52;163H3[15;13H[?25h[?25lu[52;163H4[15;14H[?25h[?25ll[52;163H5[15;15H[?25h[?25ll[52;163H6[15;16H[?25h[?25l[1m[96mnull?[m[52;163H7[15;17H[?25h[?25l[52;163H8[15;18H[?25h[?25ll[52;163H9[15;19H[?25h[?25ls[52;162H20[15;20H[?25h[?25l)[15;11H[46m([8C)[m[52;163H1[15;21H[?25h[?25l[16;51r[16;1H[L[1;52r[52;159H[K[52;159H16,2-9[8CTop[15;11H([8C)[16;9H[?25h[?25l([46m([17;35H)[m[52;162H3-10[16;10H[?25h[?25ls([17;35H)[52;162H4-11[16;11H[?25h[?25lu[52;162H5-12[16;12H[?25h[?25lm[52;162H6-13[16;13H[?25h[?25l-[52;162H7-14[16;14H[?25h[?25ll[52;162H8-15[16;15H[?25h[?25le[52;162H9-16[16;16H[?25h[?25ln[52;162H10-17[16;17H[?25h[?25lg[52;163H1-18[16;18H[?25h[?25lth[52;163H3-20[16;20H[?25h[?25ls[52;163H4-21[16;21H[?25h[?25l([46m([17;35H)[m[52;163H5-22[16;22H[?25h[?25lc([17;35H)[52;163H6-23[16;23H[?25h[?25ld[52;163H7-24[16;24H[?25h[?25l[1m[96mcdr[m[52;163H8-25[16;25H[?25h[?25lcd[16;24H[K[52;163H7-24[16;24H[?25h[?25l[16;23H[K[52;163H6-23[16;23H[?25h[?25l[16;22H[K[16;21H[46m([17;35H)[m[52;163H5-22[16;22H[?25h[?25l[16;21H[K[17;35H)[52;163H4-21[16;21H[?25h[?25l[52;163H5-22[16;22H[?25h[?25l([46m([17;35H)[m[52;163H6-23[16;23H[?25h[?25lc([17;35H)[52;163H7-24[16;24H[?25h[?25ld[52;163H8-25[16;25H[?25h[?25l[1m[96mcdr[m[52;163H9-26[16;26H[?25h[?25l[52;162H20-27[16;27H[?25h[?25ll[52;163H1-28[16;28H[?25h[?25ls[52;163H2-29[16;29H[?25h[?25l([46m([17;35H)[m[52;163H3-30[16;30H[?25h[?25l[16;29H[K[17;35H)[52;163H2-29[16;29H[?25h[?25l)[16;22H[46m([6C)[m[52;163H3-30[16;30H[?25h[?25l)[16;9H[46m([m[12C([6C)[46m)[m[52;163H4-31[16;31H[?25h[?25l)[15;7H[46m([m[16;9H([20C)[46m)[m[52;163H5-32[16;32H[?25h[?25l[15;7H([16;31H)[17;7H[46m([26C)[m[52;160H7,7    [17;7H[?25h[?25l[11;5H[46m([12C)[m[17;7H([26C)[52;160H1,19[11;19H[?25h[?25l    ([12C)[12;6H[46m([14C)[m[52;160H2,22[12;22H[?25h[?25l    (([14C)[13;24H[46m([6C)[m[52;160H3,24[13;24H[?25h[?25l([6C)[52;160H4,10[14;10H[?25h[?25l[15;11H[46m([8C)[m[52;160H5,21[15;21H[?25h[?25l[15;7H[46m([m[3C([8C)[16;31H[46m)[m[52;162H7 [15;7H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[15;8H[52;159H15,8[10CTop[15;8H[48;5;242m([m[16;31H)[15;8H[?25h[?25l[52;149H3[15;9H[93m[48;5;242mi[m[52;162H9[15;9H[?25h[?25l[52;149H4[15;10H[93m[48;5;242mf[m[52;162H10[15;10H[?25h[?25l[52;149H5[15;11H[48;5;242m [m[46m([8C)[m[52;163H1[15;11H[?25h[?25l[52;149H6[15;12H[48;5;242m([m[8C)[52;163H2[15;12H[?25h[?25l[52;149H7[15;13H[1m[96m[48;5;242mn[m[1m[96mull?[m [52;163H3[15;13H[?25h[?25l[52;149H8[15;14H[1m[96m[48;5;242mu[m[1m[96mll?[m [52;163H4[15;14H[?25h[?25l[52;149H2[16;15H[15;14H[1m[96m[48;5;242mll?[m[48;5;242m ls) 
        (sum-l[m[52;160H6,8-15[16;15H[?25h[?25le[48;5;242me[m[52;162H9-16[16;16H[?25h[?25ln[48;5;242mn[m[52;162H10-17[16;17H[?25h[?25lg[48;5;242mg[m[52;163H1-18[16;18H[?25h[?25lt[48;5;242mt[m[52;163H2-19[16;19H[?25h[?25lh[48;5;242mh[m[52;163H3-20[16;20H[?25h[?25ls[48;5;242ms[m[52;163H4-21[16;21H[?25h[?25l [48;5;242m [m[46m([6C)[m[52;163H5-22[16;22H[?25h[?25l[1C[48;5;242m([m[6C)[52;163H6-23[16;23H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mdr[m [52;163H7-24[16;24H[?25h[?25l[1C[1m[96m[48;5;242md[m[1m[96mr[m [52;163H8-25[16;25H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;163H9-26[16;26H[?25h[?25l [48;5;242m [m[52;162H20-27[16;27H[?25h[?25ll[48;5;242ml[m[52;163H1-28[16;28H[?25h[?25ls[48;5;242ms[m[46m)[m[52;163H2-29[16;29H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H3-30[16;30H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H4-31[16;31H[?25h[?25l[?25h[?25l[52;149Hc[16;31H[52;149H [15;7H[52;4H[1mINSERTt --[m[52;13H[K[52;159H15,7[10CTop[15;51r[51;1H
[1;52r[15;1H      [15;7H[K[16;24H[46m [m[51;1H([93mdefine[m greater-than[52;159H[K[52;159H15,7[10CTop[16;24H [15;7H[?25h[?25l[52;162H6[15;6H[?25h[?25l[52;162H5[15;5H[?25h[?25l[52;162H4[15;4H[?25h[?25l[52;160H6[16;4H[?25h[?25l[52;162H5[16;5H[?25h[?25l[52;162H6[16;6H[?25h[?25l [46m([26C)[m[52;162H7[16;7H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[16;37H[K[16;6H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H6[16;6H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[16;36H[K[16;5H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H5[16;5H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[16;35H[K[16;4H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H4[16;4H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[16;34H[K[16;3H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H3[16;3H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[16;33H[K[16;2H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H2[16;2H[?25h[?25l[15;51r[51;1H
[1;52r[15;2H ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))[51;3H([93mlambda[m (ls (v [95m0[m))[52;159H[K[52;159H15,3[10CTop[15;3H[46m([26C)[m  [?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[15;33H[K[15;2H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H2[15;2H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[15;32H[K[15;1H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H1[15;1H[?25h[?25l[14;51r[51;1H
[1;52r[14;1H    ([93melse[m([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))
[46m        [m[51;5H([93mif[m ([1m[96mnull?[m ls)[52;159H[K[52;159H14,10[9CTop[14;10H[46m([26C)[m
        [14;10H[?25h[?25l[46m [m([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls[5C)[14;10H [46m([m[25C)[46m)[m[52;163H1[14;11H[?25h[?25l[12;5H[46m([13;57H)[m[14;11H([26C)[52;160H3,58[13;58H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,5[10CTop[12;5H([13;57H)
    [?25h[?25l([46m([15;40H)[m[52;162H6[14;6H[?25h[?25l(([46m([m[52;162H7[14;7H[?25h[?25le([15;40H)[52;162H8[14;8H[?25h[?25lq[52;162H9[14;9H[?25h[?25lu[52;162H10[14;10H[?25h[?25la[52;163H1[14;11H[?25h[?25ll[52;163H2[14;12H[?25h[?25l[1m[96mequal?[m[52;163H3[14;13H[?25h[?25l[52;163H4[14;14H[?25h[?25l([46m([15;40H)[m[52;163H5[14;15H[?25h[?25lc([15;40H)[52;163H6[14;16H[?25h[?25la[52;163H7[14;17H[?25h[?25l[1m[96mcar[m[52;163H8[14;18H[?25h[?25l[52;163H9[14;19H[?25h[?25ll[52;162H20[14;20H[?25h[?25ls[52;163H1[14;21H[?25h[?25l)[14;14H[46m([6C)[m[52;163H2[14;22H[?25h[?25l[14;14H([6C)[52;163H3[14;23H[?25h[?25l[38;5;224m'[m[52;163H4[14;24H[?25h[?25l[38;5;224m(
    ([melse [38;5;224m([m+ [2C[38;5;224m([12C([mcdr ls[38;5;224m)))))[m[14;24H[38;5;224m[46m([15;40H)[m[52;163H5[14;25H[?25h[?25l[38;5;224m)[m
    ([93melse[m ([1m[96m+[m[3C([12C([1m[96mcdr[m ls))))[46m)[m[14;25H[38;5;224m[46m)[m[15;40H)[52;163H6[14;26H[?25h[?25l)    ([46m([m[17C[38;5;224m()[m[46m)[m[52;163H7[14;27H[?25h[?25l[15;51r[15;1H[L[1;52r[52;159H[K[52;159H15,6[10CTop[14;6H([19C)[15;6H[?25h[?25l([46m([16;40H)[m[52;162H7[15;7H[?25h[?25ls([16;40H)[52;162H8[15;8H[?25h[?25lu[52;162H9[15;9H[?25h[?25lm[52;162H10[15;10H[?25h[?25l-[52;163H1[15;11H[?25h[?25ll[52;163H2[15;12H[?25h[?25le[52;163H3[15;13H[?25h[?25ln[52;163H4[15;14H[?25h[?25lg[52;163H5[15;15H[?25h[?25lt[52;163H6[15;16H[?25h[?25lh[52;163H7[15;17H[?25h[?25ls[52;163H8[15;18H[?25h[?25l[52;163H9[15;19H[?25h[?25l([46m([16;40H)[m[52;162H20[15;20H[?25h[?25lc([16;40H)[52;163H1[15;21H[?25h[?25ld[52;163H2[15;22H[?25h[?25l[1m[96mcdr[m[52;163H3[15;23H[?25h[?25l[52;163H4[15;24H[?25h[?25ll[52;163H5[15;25H[?25h[?25ls[52;163H6[15;26H[?25h[?25l)[15;19H[46m([6C)[m[52;163H7[15;27H[?25h[?25l)     [46m([m[12C([6C)[46m)[m[52;163H8[15;28H[?25h[?25l)[14;5H[46m([m[15;6H([20C)[46m)[m[52;163H9[15;29H[?25h[?25l[14;5H([15;28H)[52;160H6,33[16;33H[?25h[?25l[14;5H[46m([15;28H)[m[52;160H5,29[15;29H[?25h[?25l[14;5H([46m([19C)[m[15;28H)[52;160H4,27[14;27H[?25h[52;1H[K[14;26H[?25l[52;149H^[[14;26H[52;149H  [14;27H[52;159H14,26[9CTop[14;26H[?25h[?25l[52;149H:[14;26H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2748B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:21:0
actual:     6
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:22:0
actual:     10
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:30:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:31:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:43:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:44:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:71:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:72:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:81:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:92:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:93:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2748B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([106m([m[36mequal?[m ([36mcar[m ls) [35m'()[m[106m)[m[15;6H(sum-lengths ([36mcdr[m ls)))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H14,26[9CTop[14;26H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([46m([m[1m[96mequal?[m ([1m[96mcar[m ls) [38;5;224m'()[m[46m)[m[15;6H(sum-lengths ([1m[96mcdr[m ls)))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H14,26[9CTop"lab5-sol.scm" 94L, 2748B[14;26H[?25h[?25l    (([19C)[52;159H22,35[22;35H[?25h[?25l[52;160H1[21;35H[?25h[?25l[11;6H[46m([8C)[m[52;159H11,6 [11;6H[?25h[?25l[46m([m([8C)[2C[46m)[m[52;162H5[11;5H[?25h[?25l([12C)[14;6H[46m([19C)[m[52;160H4,26[14;26H[?25h[?25l    (([19C)[15;6H[46m([20C)[m[52;160H5,27[15;27H[?25h[?25l     ([20C)[52;162H7 [15;7H[?25h[?25l[52;149Hi[15;7H[52;149H [15;7H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H15,7[10CTop[15;7H[?25h[?25l0sum-lengths ([1m[96mcdr[m ls)))[52;162H8[15;8H[?25h[?25l[95m0[m sum-lengths ([1m[96mcdr[m ls)))[52;162H9[15;9H[?25h[?25l+sum-lengths ([1m[96mcdr[m ls)))[52;162H10[15;10H[?25h[?25l[1m[96m+[m sum-lengths ([1m[96mcdr[m ls)))[52;163H1[15;11H[?25h[?25l[14;6H[46m([19C)[m[52;160H4,27[14;27H[?25h[?25l    (([19C)[52;163H0[14;20H[?25h[?25l[52;160H6,33[16;33H[?25h[52;1H[K[16;32H[?25l[52;149H^[[16;32H[52;149H  [16;33H[52;159H16,32[9CTop[16;32H[?25h[?25l[52;149H:[16;32H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2752B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...:
   #<procedure:+>
   #<procedure:sum-lengths>
   '(())
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2752B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    (([36mequal?[m ([36mcar[m ls) [35m'()[m)[15;6H([31m0[m [36m+[m sum-lengths ([36mcdr[m ls)))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H16,32[9CTop[16;32H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    (([1m[96mequal?[m ([1m[96mcar[m ls) [38;5;224m'()[m)[15;6H([95m0[m [1m[96m+[m sum-lengths ([1m[96mcdr[m ls)))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H16,32[9CTop"lab5-sol.scm" 94L, 2752B[16;32H[?25h[?25l[52;160H5,11[15;11H[?25h[?25l[52;149Hi[15;11H[52;149H [15;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H15,11[9CTop[15;11H[?25h[?25l+sum-lengths ([1m[96mcdr[m ls)[15;32H[K[52;163H0[15;10H[?25h[?25lsum-lengths ([1m[96mcdr[m ls)[15;31H[K[52;162H9 [15;9H[?25h[?25l0sum-lengths ([1m[96mcdr[m ls)[15;30H[K[52;162H8[15;8H[?25h[?25lsum-lengths ([1m[96mcdr[m ls)[15;29H[K[15;6H[46m([20C)[m[52;162H7[15;7H[?25h[?25l([20C)[52;160H6,28[16;28H[?25h[?25l[52;162H35[16;35H[?25h[?25l    [46m([33C)[m[52;163H9[16;39H[?25h[?25l    ([23C[46m([6C)[m)))[52;163H6[16;36H[?25h[?25l[16;29H([6C)[52;163H3[16;33H[?25h[?25lcd ls)[16;41H[K[52;163H2[16;32H[?25h[?25l ls)[16;40H[K[52;163H1[16;31H[?25h[?25la ls))))))[52;163H2[16;32H[?25h[?25l[1m[96mcar[m ls))))))[52;163H3[16;33H[?25h[?25l[9;1H[46m([16;41H)[m[52;162H42[16;42H[?25h[52;1H[K[16;41H[?25l[52;149H^[[16;41H[52;149H  [16;42H[52;159H16,41[9CTop[16;41H[?25h[?25l[52;149HL[16;41H[52;149H [46;1H[9;1H([16;41H)[52;159H46,1 [46;1H[?25h[?25l[52;149Hx[46;1H[52;149H [46;1H[52;149Hdl[46;1H[52;149H  [46;1H[1C[96mExercise 2[m[46;12H[K[46;1H[?25h[?25l[52;149Hi[46;1H[52;149H [46;1H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H46,1[10CTop[46;1H[?25h[?25l[1C[96m;Exercise 2[m[52;162H2[46;2H[?25h[?25l[1C[96m;Exercise 2[m[52;162H3[46;3H[?25h[?25l[52;160H5,1[45;1H[?25h[?25l[52;160H6,3[46;3H[?25h[?25l[52;162H4[46;4H[?25h[?25l[96mExercise 2[m[46;13H[K[52;162H3[46;3H[?25h[52;1H[K[46;2H[?25l[52;149H^[[46;2H[52;149H  [46;3H[52;159H46,2[10CTop[46;2H[?25h[?25l[52;149H:[46;2H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2748B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2748B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    (([36mequal?[m ([36mcar[m ls) [35m'()[m)[15;6H(sum-lengths ([36mcdr[m ls)))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcar[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H46,2[10CTop[46;2H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    (([1m[96mequal?[m ([1m[96mcar[m ls) [38;5;224m'()[m)[15;6H(sum-lengths ([1m[96mcdr[m ls)))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H46,2[10CTop"lab5-sol.scm" 94L, 2748B[46;2H[?25h[?25l[52;159H15,25[15;25H[?25h[?25l[52;160H6,33[16;33H[?25h[?25l[52;149H~@k[16;33H[52;149H   [16;32H[52;163H2[16;32H[?25h[?25l[52;149H~@k[16;32H[52;149H   [16;33H[52;163H3[16;33H[?25h[?25l[52;149Hi[16;33H[52;149H [16;33H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H16,33[9CTop[16;33H[?25h[?25lca ls)[16;41H[K[52;163H2[16;32H[?25h[?25l ls)[16;40H[K[52;163H1[16;31H[?25h[?25l ls)[16;39H[K[16;29H[46m([m ls[46m)[m[52;163H0[16;30H[?25h[?25lc l[46ms[m))))))[16;29H(c ls[52;163H1[16;31H[?25h[?25ld ls))))))[52;163H2[16;32H[?25h[?25l[1m[96mcdr[m ls))))))[52;163H3[16;33H[?25h[?25l[14;6H[46m([19C)[m[52;160H4,27[14;27H[?25h[?25l[11;5H[46m([12C)[m[14;6H([19C)[52;160H1,5 [11;5H[?25h[?25l[96m[46m;[m[96m((null? ls) [m[96m[46m0[m[96m)[m    [96m;[m[96m[46m([m[11C[96m0[m[96m[46m)[m[52;162H6[11;6H[?25h[?25l[96m[46m;[m[1C[96m(null? ls) [m[96m[46m0[m[96m)[11;6H;[m[96m[46m([m[11C[96m0[m[96m[46m)[m[52;162H7[11;7H[?25h[?25l[52;162H21[11;21H[?25h[?25l[11;7H[96m([12C)[m[14;24H[38;5;224m[46m()[m[52;160H4,25[14;25H[?25h[?25l    [46m([m[18C[38;5;224m()[m[15;28H[46m)[m[52;160H5,28[15;28H[?25h[?25l[11;7H[96m[46m([12C)[m[14;5H([15;28H)[52;160H1,7 [11;7H[?25h[?25l[96m([1Cnull? ls) 0)[m[11;20H[K[11;6H[96m[46m([m[96m([m[11C[96m[46m)[m[52;162H6[11;6H[?25h[?25l([46m([m[1m[96mnull?[m ls) [95m0[m)[11;19H[K[11;5H[46m([m([11C[46m)[m[52;162H5[11;5H[?25h[?25l[52;162H19[11;19H[?25h[?25l    ([12C)[52;160H3,23[13;23H[?25h[52;1H[K[13;22H[?25l[52;149H^[[13;22H[52;149H  [13;23H[52;159H13,22[9CTop[13;22H[?25h[?25l[52;149H:[13;22H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2748B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ [?2004l
exit

Script done on 2022-03-03 13:38:39-05:00 [COMMAND_EXIT_CODE="0"]
