Script started on 2022-03-03 09:10:47-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="176" LINES="52"]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm 
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 87L, 2546B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  [31m0[m)

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[47;9H[35m'()[m[48;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[49;15H(greater-than ([36mcdr[m ls) v)))))

(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[52;159H1,1[11CTop[1;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  [95m0[m)

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[47;9H[38;5;224m'()[m[48;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[49;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[52;159H1,1[11CTop"lab5-sol.scm" 87L, 2546B[1;1H[?25h[?25l[9;9H[46m([14C)[m[52;159H9,24[9;24H[?25h[?25l[46m([m[7C([14C)[10;4H[46m)[m[52;159H10,[10;4H[?25h[?25l[52;149Hi[10;4H[52;149H [10;4H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,4[10CTop[10;4H[?25h[?25l)[10;4H[K[10;3H[46m)[m[52;162H3[10;3H[?25h[?25l[46m([m)[9;1H([10;4H[46m)[m[52;162H4[10;4H[?25h[?25l[46ml[m)l[46m)[m[52;162H5[10;5H[?25h[?25l[46me[m)e[46m)[m[52;162H6[10;6H[?25h[?25l[93mle[m[93m[46mt[m)[93mt[m[46m)[m[52;162H7[10;7H[?25h[?25l[52;162H8[10;8H[?25h[?25l[10;7H[K[10;3H([52;162H7[10;7H[?25h[?25lle[10;6H[K[52;162H6[10;6H[?25h[?25l[10;5H[K[52;162H5[10;5H[?25h[?25l[10;4H[K[52;162H4[10;4H[?25h[?25l[10;3H[K[52;162H3[10;3H[?25h[?25l[52;162H2[10;2H[?25h[?25l[52;162H1[10;1H[?25h[?25l[9;51r[51;1H
[1;52r[9;1H([93mdefine[m (sum-lengths ls)[51;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[52;159H[K[52;159H9,25[10CTop[9;9H[46m([14C)[?25h[?25l[10;51r[m[10;1H[L[1;52r[52;159H[K[52;159H10,3[10CTop[9;9H([14C)
  [?25h[?25l([52;162H4[10;4H[?25h[?25ll[52;162H5[10;5H[?25h[?25le[52;162H6[10;6H[?25h[?25l[93mlet[m[52;162H7[10;7H[?25h[?25l[52;162H8[10;8H[?25h[?25l([52;162H9[10;9H[?25h[?25l([52;162H10[10;10H[?25h[?25ls[52;163H1[10;11H[?25h[?25lu[52;163H2[10;12H[?25h[?25lm[52;163H3[10;13H[?25h[?25l[52;163H4[10;14H[?25h[?25l([52;163H5[10;15H[?25h[?25l[95m0[m[52;163H6[10;16H[?25h[?25l)[46m([1C)[m[52;163H7[10;17H[?25h[?25l)[10;9H[46m([msum ([1C)[46m)[m[52;163H8[10;18H[?25h[?25l)[10;8H[46m([m([7C)[46m)[m[52;163H9[10;19H[?25h[?25l[11;51r[11;1H[L[1;52r[52;159H[K[52;159H11,5[10CTop[10;8H([9C)
    [?25h[?25l([52;162H6[11;6H[?25h[?25li[52;162H7[11;7H[?25h[?25l[93mif[m[52;162H8[11;8H[?25h[?25l[52;162H9[11;9H[?25h[?25l([52;162H10[11;10H[?25h[?25ll[52;163H1[11;11H[?25h[?25ls[52;163H2[11;12H[?25h[?25l[52;163H3[11;13H[?25h[?25l[52;163H2[11;12H[?25h[?25l[11;11H[K[52;163H1[11;11H[?25h[?25l[11;10H[K[52;163H0[11;10H[?25h[?25l[11;9H[K[52;162H9 [11;9H[?25h[?25l([52;162H10[11;10H[?25h[?25ll[52;163H1[11;11H[?25h[?25ls[52;163H2[11;12H[?25h[?25l[11;11H[K[52;163H1[11;11H[?25h[?25l[11;10H[K[52;163H0[11;10H[?25h[?25ln[52;163H1[11;11H[?25h[?25lu[52;163H2[11;12H[?25h[?25ll[52;163H3[11;13H[?25h[?25ll[52;163H4[11;14H[?25h[?25l[1m[96mnull?[m[52;163H5[11;15H[?25h[?25l[52;163H6[11;16H[?25h[?25ll[52;163H7[11;17H[?25h[?25ls[52;163H8[11;18H[?25h[?25l)[11;9H[46m([8C)[m[52;163H9[11;19H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,7[10CTop[11;9H([8C)[12;7H[?25h[?25ls[52;162H8[12;8H[?25h[?25lu[52;162H9[12;9H[?25h[?25lm[52;162H10[12;10H[?25h[?25l[12;9H[K[52;162H9 [12;9H[?25h[?25l[12;8H[K[52;162H8[12;8H[?25h[?25l[12;7H[K[52;162H7[12;7H[?25h[?25l[95m0[m[52;162H8[12;8H[?25h[?25l[13;51r[13;1H[L[1;52r[52;159H[K[52;159H13,7[10CTop[13;7H[?25h[?25l([52;162H8[13;8H[?25h[?25l[1m[96m+[m[52;162H9[13;9H[?25h[?25l[52;162H10[13;10H[?25h[?25ls[52;163H1[13;11H[?25h[?25lu[52;163H2[13;12H[?25h[?25lm[52;163H3[13;13H[?25h[?25l[52;160H2,8 [12;8H[?25h[?25l[52;160H3,13[13;13H[?25h[?25l[13;12H[K[52;163H2[13;12H[?25h[?25l[13;11H[K[52;163H1[13;11H[?25h[?25l[13;10H[K[52;163H0[13;10H[?25h[?25l[95m1[m[52;163H1[13;11H[?25h[?25l[52;160H2,8 [12;8H[?25h[?25l[52;160H1,11[11;11H[?25h[?25l[52;160H0[10;11H[?25h[?25l[52;159H9,11 [9;11H[?25h[?25l[52;159H10,11[10;11H[?25h[?25l[52;163H2[10;12H[?25h[?25l[52;163H3[10;13H[?25h[?25l [46m([1C)[m[52;163H4[10;14H[?25h[?25l[52;163H5[10;15H[?25h[?25l[52;163H6[10;16H[?25h[?25l[10;9H[46m([msum ([1C)[46m)[m[52;163H7[10;17H[?25h[?25l[10;8H[46m([m([7C)[46m)[m[52;163H8[10;18H[?25h[?25l[52;163H9[10;19H[?25h[?25l[10;18H[K[10;8H([46m([7C)[m[52;163H8[10;18H[?25h[?25l[10;17H[K[10;9H(sum [46m([1C)[m[52;163H7[10;17H[?25h[?25l[10;16H[K[10;14H([52;163H6[10;16H[?25h[?25l[10;15H[K[52;163H5[10;15H[?25h[?25l[10;14H[K[52;163H4[10;14H[?25h[?25l[52;163H3[10;13H[?25h[?25l[10;12H[K[52;163H2[10;12H[?25h[?25l[10;11H[K[52;163H1[10;11H[?25h[?25l[10;10H[K[52;163H0[10;10H[?25h[?25l[10;9H[K[52;162H9 [10;9H[?25h[?25l[10;8H[K[52;162H8[10;8H[?25h[?25l[52;162H7[10;7H[?25h[?25lle[10;6H[K[52;162H6[10;6H[?25h[?25l[10;5H[K[52;162H5[10;5H[?25h[?25l[10;4H[K[52;162H4[10;4H[?25h[?25l[10;3H[K[52;162H3[10;3H[?25h[?25l[52;160H1[11;3H[?25h[?25l[52;162H4[11;4H[?25h[?25l[52;162H5[11;5H[?25h[?25l([93mif[m ([1m[96mnull?[m ls)[11;18H[K[52;162H4[11;4H[?25h[?25l([93mif[m ([1m[96mnull?[m ls)[11;17H[K[52;162H3[11;3H[?25h[?25l([93mif[m ([1m[96mnull?[m ls)[11;16H[K[52;162H2[11;2H[?25h[?25l([93mif[m ([1m[96mnull?[m ls)[11;15H[K[52;162H1[11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;1H  ([93mif[m ([1m[96mnull?[m ls)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H10,3[10CTop[10;3H[?25h[?25l[52;160H1[11;3H[?25h[?25l[52;162H4[11;4H[?25h[?25l[52;162H5[11;5H[?25h[?25l[52;162H6[11;6H[?25h[?25l[52;162H7[11;7H[?25h[?25l[95m0[m[11;7H[K[52;162H6[11;6H[?25h[?25l[95m0[m[11;6H[K[52;162H5[11;5H[?25h[?25l[95m0[m[11;5H[K[52;162H4[11;4H[?25h[?25l[95m0[m[11;4H[K[52;162H3[11;3H[?25h[?25l[95m0[m[11;3H[K[52;162H2[11;2H[?25h[?25l[95m0[m[11;2H[K[52;162H1[11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;1H  ([93mif[m ([1m[96mnull?[m ls)[95m0[m[52;159H[K[52;159H10,17[9CTop[10;7H[46m([8C)[?25h[?25l[11;51r[m[11;1H[L[1;52r[10;17H[K[11;5H[95m0[m[52;159H[K[52;159H11,5[10CTop[10;7H([8C)
    [?25h[?25l[52;160H2[12;5H[?25h[?25l[52;162H6[12;6H[?25h[?25l[52;162H7[12;7H[?25h[?25l([1m[96m+[m [95m1[m[12;10H[K[52;162H6[12;6H[?25h[?25l([1m[96m+[m [95m1[m[12;9H[K[52;162H5[12;5H[?25h[?25l([1m[96m+[m [95m1[m[12;8H[K[52;162H4[12;4H[?25h[?25l([1m[96m+[m [95m1[m[12;7H[K[52;162H3[12;3H[?25h[?25l([1m[96m+[m [95m1[m[12;6H[K[52;162H2[12;2H[?25h[?25l([1m[96m+[m [95m1[m[12;5H[K[52;162H1[12;1H[?25h[?25l[11;51r[51;1H
[1;52r[11;1H    [95m0[m([1m[96m+[m [95m1[m[52;159H[K[52;159H11,6[10CTop[11;6H[?25h[?25l[12;51r[12;1H[L[1;52r[11;6H[K[12;5H([1m[96m+[m [95m1[m[52;159H[K[52;159H12,5[10CTop[12;5H[?25h[?25l[52;162H9[12;9H[?25h[?25l[52;162H10[12;10H[?25h[?25ls[52;163H1[12;11H[?25h[?25lu[52;163H2[12;12H[?25h[?25lm[52;163H3[12;13H[?25h[?25l-[52;163H4[12;14H[?25h[?25ll[52;163H5[12;15H[?25h[?25le[52;163H6[12;16H[?25h[?25ln[52;163H7[12;17H[?25h[?25lg[52;163H8[12;18H[?25h[?25lt[52;163H9[12;19H[?25h[?25lh[52;162H20[12;20H[?25h[?25ls[52;163H1[12;21H[?25h[?25l[52;163H0[12;20H[?25h[?25l[52;162H19[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H5[12;15H[?25h[?25l[52;163H4[12;14H[?25h[?25l[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[52;162H20[12;20H[?25h[?25l[52;163H1[12;21H[?25h[?25l[52;163H0[12;20H[?25h[?25l[52;162H19[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H5[12;15H[?25h[?25l[52;163H4[12;14H[?25h[?25l[52;163H3[12;13H[?25h[?25l[52;163H2[12;12H[?25h[?25l[52;163H1[12;11H[?25h[?25l[52;163H0[12;10H[?25h[?25l(sum-lengths[52;163H1[12;11H[?25h[?25l[52;163H2[12;12H[?25h[?25l[52;163H3[12;13H[?25h[?25l[52;163H4[12;14H[?25h[?25l[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H9[12;19H[?25h[?25l[52;162H20[12;20H[?25h[?25l[52;163H1[12;21H[?25h[?25l[52;163H2[12;22H[?25h[?25l[52;163H3[12;23H[?25h[?25l([52;163H4[12;24H[?25h[?25ll[52;163H5[12;25H[?25h[?25ls[52;163H6[12;26H[?25h[?25l[12;25H[K[52;163H5[12;25H[?25h[?25l[12;24H[K[52;163H4[12;24H[?25h[?25lc[52;163H5[12;25H[?25h[?25ld[52;163H6[12;26H[?25h[?25l[1m[96mcdr[m[52;163H7[12;27H[?25h[?25l[52;163H8[12;28H[?25h[?25l([52;163H9[12;29H[?25h[?25ll[52;162H30[12;30H[?25h[?25ls[52;163H1[12;31H[?25h[?25l)[46m([mls[46m)[m[52;163H2[12;32H[?25h[?25l[12;31H[K[12;28H([52;163H1[12;31H[?25h[?25l[12;30H[K[52;163H0[12;30H[?25h[?25l[12;29H[K[52;162H29[12;29H[?25h[?25l[12;28H[K[52;163H8[12;28H[?25h[?25ll[52;163H9[12;29H[?25h[?25ls[52;162H30[12;30H[?25h[?25l)[12;23H[46m([6C)[m[52;163H1[12;31H[?25h[?25l)[12;10H[46m([m[12C([6C)[46m)[m[52;163H2[12;32H[?25h[?25l)    [46m([m[4C([20C)[46m)[m[52;163H3[12;33H[?25h[?25l)[10;3H[46m([m[12;5H([26C)[46m)[m[52;163H4[12;34H[?25h[?25l)[9;1H[46m([m
  ([12;33H)[46m)[m[52;163H5[12;35H[?25h[52;1H[K[12;34H[?25l[52;149H^[[12;34H[52;149H  [12;35H[52;159H12,34[9CTop[12;34H[?25h[?25l[52;149H:[12;34H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2599B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm 
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:15:0
actual:     2
expected:   0
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:16:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:17:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:25:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:26:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:35:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:36:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:37:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:64:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:65:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:66:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:74:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:85:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:86:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:87:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2599B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))[106m)[m

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H12,34[9CTop[12;34H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))[46m)[m

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H12,34[9CTop"lab5-sol.scm" 89L, 2599B[12;34H[?25h[?25l[52;149H:[12;34H[52;1H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[52;1H[K[52;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2599B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))[106m)[m

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H12,34[9CTop[12;34H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))[46m)[m

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H12,34[9CTop"lab5-sol.scm" 89L, 2599B[12;34H[?25h[?25l[9;1H([12;34H)[15;27H[38;5;224m[46m()[m[52;160H5,27[15;27H[?25h[?25l[38;5;224m()[m[52;160H4,22[14;22H[?25h[?25l[52;160H5[15;22H[?25h[?25l[9;1H[46m([12;34H)[m[52;160H2,34[12;34H[?25h[?25l[52;149H~@k[12;34H[52;149H   [11;5H[9;1H([12;34H)[52;160H1,5 [11;5H[?25h[?25l[52;149H~@k[11;5H[52;149H   [11;5H[?25h[?25l[52;149H~@k[11;5H[52;149H   [10;16H[10;7H[46m([8C)[m[52;160H0,16[10;16H[?25h[?25l[52;149H~@k[10;16H[52;149H   [10;15H[10;7H([8C)[52;163H5[10;15H[?25h[?25l[52;149H~@k[10;15H[52;149H   [10;14H[52;163H4[10;14H[?25h[?25l[52;149H~@k[10;14H[52;149H   [10;13H[52;163H3[10;13H[?25h[?25l[52;149H~@k[10;13H[52;149H   [10;12H[52;163H2[10;12H[?25h[?25l[52;149H~@k[10;12H[52;149H   [10;11H[52;163H1[10;11H[?25h[?25l[52;149H~@k[10;11H[52;149H   [10;10H[52;163H0[10;10H[?25h[?25l[52;149H~@k[10;10H[52;149H   [10;11H[52;163H1[10;11H[?25h[?25l[52;149H~@k[10;11H[52;149H   [10;12H[52;163H2[10;12H[?25h[?25l[52;149Hi[10;12H[52;149H [10;12H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,12[9CTop[10;12H[?25h[?25lnul? ls)[10;16H[K[52;163H1[10;11H[?25h[?25l? ls)[10;15H[K[52;163H0[10;10H[?25h[?25l? ls)[10;14H[K[52;162H9 [10;9H[?25h[?25l? ls)[10;13H[K[10;7H[46m([m? ls[46m)[m[52;162H8[10;8H[?25h[?25lp? l[46ms[m)[10;7H(p? ls[52;162H9[10;9H[?25h[?25la? ls)[52;162H10[10;10H[?25h[?25li? ls)[52;163H1[10;11H[?25h[?25l[1m[96mpair?[m ls)[52;163H2[10;12H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;159H21,5[10CTop[52;149H^O[21;5H[52;149H1 [21;5H[?25h[?25l[52;149H^[[21;5H[52;149H1 [21;5H[52;150H^[[21;5H[52;149H   [21;5H[52;4H[1mINSERTt --[m[52;13H[K[52;159H21,5[10CTop[21;5H[?25h[52;1H[K[21;4H[?25l[52;149H^[[21;4H[52;149H  [21;5H[20;1H[46m([21;4H)[m[52;159H21,4[10CTop[21;4H[?25h[?25l[52;149H:[21;4H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2599B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcdr: contract violation
  expected: pair?
  given: '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2599B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mpair?[m ls)
    [31m0[m
    ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
[106m([m[38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m[106m)[m

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H21,4[10CTop[21;4H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mpair?[m ls)
    [95m0[m
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
[46m([m[93mdefine[m (sum-lengths-tr ls)
  [95m0[m[46m)[m

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H21,4[10CTop"lab5-sol.scm" 89L, 2599B[21;4H[?25h[?25l[17;12H[46m([34C)[m


([21;4H)[52;159H17,47[17;47H[?25h[?25l[17;12H([34C)[25;36H[38;5;224m[46m([3C)[m[52;159H25,40[25;40H[?25h[?25l[38;5;224m([3C)[m[52;159H14,24[14;24H[?25h[?25l[52;160H0,13[10;13H[?25h[?25l[52;160H1,5 [11;5H[?25h[?25l[52;149Hi[11;5H[52;149H [11;5H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H11,5[10CTop[11;5H[?25h[?25l[52;162H6[11;6H[?25h[?25l[11;5H[K[52;162H5[11;5H[?25h[?25l[52;162H4[11;4H[?25h[?25l[52;162H3[11;3H[?25h[?25l[52;162H2[11;2H[?25h[?25l[52;162H1[11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;3H([93mif[m ([1m[96mpair?[m ls)[52;159H[K[52;159H10,17[9CTop[10;7H[46m([8C)[?25h[?25l[9;1H([m[10;7H([8C)[11;34H[46m)[m[52;160H1,35[11;35H[?25h[?25l[11;34H[K[9;1H(
  [46m([11;33H)[m[52;163H4[11;34H[?25h[?25l[11;33H[K[10;3H(
    [46m([26C)[m[52;163H3[11;33H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,5[10CTop[11;5H([26C)
    [?25h[?25l[95m0[m[52;162H6[12;6H[?25h[?25l)[10;3H[46m([12;6H)[m[52;162H7[12;7H[?25h[?25l)[9;1H[46m([m
  ([12;6H)[46m)[m[52;162H8[12;8H[?25h[?25l[9;1H([11;5H[46m([26C)[m[12;7H)[52;160H1,33[11;33H[?25h[52;1H[K[11;32H[?25l[52;149H^[[11;32H[52;149H  [11;33H[52;159H11,32[9CTop[11;32H[?25h[?25l[52;149H:[11;32H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2599B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:15:0
actual:     2
expected:   0
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:16:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:17:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:25:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:26:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:35:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:36:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:37:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:64:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:65:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:66:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:74:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:85:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:86:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:87:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2599B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mpair?[m ls)
    [106m([m[36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))[106m)[m
    [31m0[m))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H11,32[9CTop[11;32H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mpair?[m ls)
    [46m([m[1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))[46m)[m
    [95m0[m))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H11,32[9CTop"lab5-sol.scm" 89L, 2599B[11;32H[?25h[?25l[9;1H[46m([m[11;5H([26C)[12;7H[46m)[m[52;160H2,7 [12;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[51;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[52;1H[K[52;159H12,7[11C7%[9;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H12,7[10C15%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;7H)[50;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))[52;159H[K[52;159H15,10[9C23%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;3H[38;5;224m'()[m)

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[52;159H[K[52;159H18,0-1[8C31%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[5;1H[46m([6;4H)[m[49;1H(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[52;159H[K[52;159H21,4[10C39%[6;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[2;1H([3;4H)[49;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[52;159H[K[52;159H24,10[9C47%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[52;159H[K[52;159H27,0-1[8C55%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[51;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[52;159H[K[52;159H30,10[9C63%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H33,0-1[8C71%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))[52;159H[K[52;159H36,10[9C78%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;3H[38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[52;159H[K[52;159H39,10[9C86%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)[52;159H[K[52;159H42,0-1[8C94%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)

[94m~                                                                                                                                                                               [m[52;159H[K[52;159H45,10[9CBot[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H48,10[9CBot[6;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[96m;;Exercise 2[m[52;159H[K[52;159H48,10[9CBot[9;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)[52;159H[K[52;159H48,10[9C94%[12;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)[52;159H[K[52;159H48,10[9C86%[15;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H([93mdefine[m (poly-eval x coeffs)
  [95m0[m)[52;159H[K[52;159H48,10[9C78%[18;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m[52;159H[K[52;159H48,10[9C71%[21;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)[52;159H[K[52;159H48,10[9C63%[24;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)[52;159H[K[52;159H48,10[9C55%[27;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)[52;159H[K[52;159H48,10[9C47%[30;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)[52;159H[K[52;159H48,10[9C39%[33;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)[52;159H[K[52;159H48,10[9C31%[36;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;3H([93mif[m ([1m[96mpair?[m ls)
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)))
    [95m0[m))[52;159H[K[52;159H48,10[9C23%[39;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)[52;159H[K[52;159H48,10[9C15%[42;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(require rackunit)

[96m;;Exercise 1[m[52;159H[K[52;159H48,10[10C7%[45;10H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H#!/usr/bin/env racket

#lang racket[52;159H[K[52;159H46,10[9CTop[46;10H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[52;159H10,4 [10;4H[?25h[?25l[46m([12;6H)[m[52;162H3[10;3H[?25h[?25l[52;149H2[10;4H[48;5;242m([m[12;6H)[52;1H[1m-- VISUAL --[m[52;149H[K[52;149H2[10;4H[52;159H10,4[10CTop[10;4H[?25h[?25l[52;149H3[10;5H[93m[48;5;242mi[m[52;162H5[10;5H[?25h[?25l[52;149H2[11;6H[10;5H[93m[48;5;242mf[m[48;5;242m ([m[1m[96m[48;5;242mpair?[m[48;5;242m ls) 
    ([m[52;160H1,6[11;6H[?25h[?25l[1C[1m[96m[48;5;242m+[m [52;162H7[11;7H[?25h[?25l[52;149H3[12;7H[9;1H[46m([m[11;7H[48;5;242m [m[95m[48;5;242m1[m[48;5;242m (sum-lengths ([m[1m[96m[48;5;242mcdr[m[48;5;242m ls))) 
    [m[95m[48;5;242m0[m[48;5;242m)[m[46m)[m[52;160H2[12;7H[?25h[?25l[1C[9;1H([12;7H[48;5;242m)[m[52;162H8[12;8H[?25h[?25l[9;1H[46m([12;7H)[m[52;162H7[12;7H[?25h[?25l[?25h[?25l[52;149H [12;7H[10;3H([93mif[m ([1m[96mpair?[m ls)[10;17H[K[11;1H    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)))[11;33H[K[12;1H    [95m0[m)[52;1H[K[52;159H12,7[10CTop[12;7H[?25h[?25l[9;1H([11;5H[46m([26C)[m[12;7H)[52;160H1,5[11;5H[?25h[?25l([26C)[52;160H0,13[10;13H[?25h[?25l[52;149Hi[10;13H[52;149H [10;13H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H10,13[9CTop[10;13H[?25h[?25l[52;163H2[10;12H[?25h[?25lpai? ls)[10;16H[K[52;163H1[10;11H[?25h[?25l? ls)[10;15H[K[52;163H0[10;10H[?25h[?25l? ls)[10;14H[K[52;162H9 [10;9H[?25h[?25l? ls)[10;13H[K[10;7H[46m([m? ls[46m)[m[52;162H8[10;8H[?25h[?25ln? l[46ms[m)[10;7H(n? ls[52;162H9[10;9H[?25h[?25lu? ls)[52;162H10[10;10H[?25h[?25ll? ls)[52;163H1[10;11H[?25h[?25l[1m[96mnull?[m ls)[52;163H2[10;12H[?25h[?25l[46m([8C)[m[52;163H7[10;17H[?25h[?25l[11;51r[11;1H[L[1;52r[52;159H[K[52;159H11,5[10CTop[10;7H([8C)
    [?25h[?25l[95m0[m[52;162H6[11;6H[?25h[?25l[9;1H[46m([13;7H)[m[52;160H3,8[13;8H[?25h[?25l[13;7H[K[9;1H(
  [46m([13;6H)[m[52;162H7[13;7H[?25h[?25l[13;6H[K[10;3H([52;162H6[13;6H[?25h[?25l[13;5H[K[52;162H5[13;5H[?25h[?25l[52;162H4[13;4H[?25h[?25l[52;162H3[13;3H[?25h[?25l[52;162H2[13;2H[?25h[?25l[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;5H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)))[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H12,33[9CTop[12;5H[46m([26C)[?25h[?25l[m)[10;3H[46m([m[12;5H([26C)[46m)[m[52;163H4[12;34H[?25h[?25l)[9;1H[46m([m
  ([12;33H)[46m)[m[52;163H5[12;35H[?25h[52;1H[K[12;34H[?25l[52;149H^[[12;34H[52;149H  [12;35H[52;159H12,34[9CTop[12;34H[?25h[?25l[9;1H([12;34H)[16;1H[46m([40C)[m[52;160H6,42[16;42H[?25h[?25l([40C)[17;12H[46m([34C)[m[52;160H7,47[17;47H[?25h[?25l[52;149H~@k[17;47H[52;149H   [17;46H[17;12H([13C[38;5;224m[46m([19C)[m)[52;163H6[17;46H[?25h[?25l[15;1H[46m([34C)[m[17;26H[38;5;224m([19C)[m[52;160H5,3[15;36H[?25h[?25l([34C)[52;160H1,5 [11;5H[?25h[?25l[52;149Hi[11;5H[52;149H [11;5H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H11,5[10CTop[11;5H[?25h[?25l[52;162H6[11;6H[?25h[?25l[11;5H[K[52;162H5[11;5H[?25h[?25l[52;162H4[11;4H[?25h[?25l[52;162H3[11;3H[?25h[?25l[52;162H2[11;2H[?25h[?25l[52;162H1[11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;3H([93mif[m ([1m[96mnull?[m ls)[52;159H[K[52;159H10,17[9CTop[10;7H[46m([8C)[?25h[?25l[m[10;16H[K[10;7H([52;163H6[10;16H[?25h[?25l)[10;7H[46m([8C)[m[52;163H7[10;17H[?25h[?25l[52;163H6[10;16H[?25h[?25l[10;7H([8C)[52;163H5[10;15H[?25h[?25l[52;163H4[10;14H[?25h[?25l[52;163H3[10;13H[?25h[?25l[52;163H2[10;12H[?25h[?25lnul? ls)[10;16H[K[52;163H1[10;11H[?25h[?25l? ls)[10;15H[K[52;163H0[10;10H[?25h[?25l? ls)[10;14H[K[52;162H9 [10;9H[?25h[?25l? ls)[10;13H[K[10;7H[46m([m? ls[46m)[m[52;162H8[10;8H[?25h[?25lp? l[46ms[m)[10;7H(p? ls[52;162H9[10;9H[?25h[?25la? ls)[52;162H10[10;10H[?25h[?25li? ls)[52;163H1[10;11H[?25h[?25l[1m[96mpair?[m ls)[52;163H2[10;12H[?25h[?25l[52;160H1,20[11;20H[?25h[?25l[52;160H2,1 [12;1H[?25h[?25l[11;10H[46m([20C)[m[52;160H1,31[11;31H[?25h[?25l[9;1H[46m([m[11;10H([20C)))[46m)[m[52;163H5[11;35H[?25h[?25l[11;34H[K[9;1H(
  [46m([11;33H)[m[52;163H4[11;34H[?25h[?25l[11;33H[K[10;3H(
    [46m([26C)[m[52;163H3[11;33H[?25h[?25l[52;163H2[11;32H[?25h[?25l    ([4C[46m([20C)[m)[52;163H1[11;31H[?25h[?25l[11;10H([12C[46m([6C)[m)[52;163H0[11;30H[?25h[?25l[11;10H[46m([m[12C([6C)[46m)[m[52;163H1[11;31H[?25h[?25l[11;10H([12C[46m([6C)[m)[52;163H0[11;30H[?25h[?25l[11;23H([6C)[52;162H29[11;29H[?25h[?25l[52;163H8[11;28H[?25h[?25l[52;163H7[11;27H[?25h[?25l[52;163H6[11;26H[?25h[?25l[52;163H5[11;25H[?25h[?25l[52;163H6[11;26H[?25h[?25l[52;163H7[11;27H[?25h[?25l[52;163H8[11;28H[?25h[?25l[52;163H9[11;29H[?25h[?25l[46m([6C)[m[52;162H30[11;30H[?25h[?25l)[11;32H[K[11;29H[46m)[m)[52;162H29[11;29H[?25h[?25l)[11;31H[K[11;28H[46m)[m)[52;163H8[11;28H[?25h[?25l[46m([m)))[11;23H([5C[46m)[m[52;163H9[11;29H[?25h[?25l[3C)[11;23H[46m([m[4C()[46m)[m[52;162H30[11;30H[?25h[?25l[11;23H([4C[46m()[m)[52;162H29[11;29H[?25h[?25l[46mc[m))))c[46m)[m[52;162H30[11;30H[?25h[?25l[46md[m))))d[46m)[m[52;163H1[11;31H[?25h[?25l[1m[96mcd[m[1m[96m[46mr[m))))[1m[96mr[m[46m)[m[52;163H2[11;32H[?25h[?25l[46m [m)))) [46m)[m[52;163H3[11;33H[?25h[?25l[46ml[m))))l[46m)[m[52;163H4[11;34H[?25h[?25l[46ms[m))))s[46m)[m[52;163H5[11;35H[?25h[?25l[11;23H[46m([m[4C([6C)[46m)[m[52;163H6[11;36H[?25h[?25l[11;10H[46m([m[12C([12C)[46m)[m[52;163H7[11;37H[?25h[?25l    [46m([m[4C([26C)[46m)[m[52;163H8[11;38H[?25h[?25l[52;163H9[11;39H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,5[10CTop[11;5H([32C)
    [?25h[?25l[95m0[m[52;162H6[12;6H[?25h[?25l)[10;3H[46m([12;6H)[m[52;162H7[12;7H[?25h[?25l)[9;1H[46m([m
  ([12;6H)[46m)[m[52;162H8[12;8H[?25h[52;1H[K[12;7H[?25l[52;149H^[[12;7H[52;149H  [12;8H[52;159H12,7[10CTop[12;7H[?25h[?25l[52;149H:[12;7H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2605B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:15:0
actual:     1
expected:   0
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:16:0
actual:     1
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:17:0
actual:     1
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:25:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:26:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:35:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:36:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:37:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:64:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:65:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:66:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:74:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:85:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:86:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:87:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2605B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mpair?[m ls)
    ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))
    [31m0[m)[106m)[m

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H12,7[10CTop[12;7H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mpair?[m ls)
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))
    [95m0[m)[46m)[m

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H12,7[10CTop"lab5-sol.scm" 89L, 2605B[12;7H[?25h[?25l[52;149H~@k[12;7H[52;149H   [11;7H[9;1H([12;7H)[52;160H1[11;7H[?25h[?25l[52;149H~@k[11;7H[52;149H   [10;7H[46m([8C)[m[52;160H0[10;7H[?25h[?25l[52;149H~@k[10;7H[52;149H   [10;8H([8C)[52;162H8[10;8H[?25h[?25l[52;149H~@k[10;8H[52;149H   [10;9H[52;162H9[10;9H[?25h[?25l[52;149H~@k[10;9H[52;149H   [10;10H[52;162H10[10;10H[?25h[?25l[52;149H~@k[10;10H[52;149H   [10;11H[52;163H1[10;11H[?25h[?25l[52;149H~@k[10;11H[52;149H   [10;12H[52;163H2[10;12H[?25h[?25l[52;149H~@k[10;12H[52;149H   [10;13H[52;163H3[10;13H[?25h[?25l[52;149H~@k[10;13H[52;149H   [10;14H[52;163H4[10;14H[?25h[?25l[52;149H~@k[10;14H[52;149H   [10;15H[52;163H5[10;15H[?25h[?25l[52;149H~@k[10;15H[52;149H   [10;16H[10;7H[46m([8C)[m[52;163H6[10;16H[?25h[?25l[52;149H~@k[10;16H[52;149H   [10;16H[?25h[?25l[52;149H~@k[10;16H[52;149H   [10;16H[?25h[?25l[52;149Hi[10;16H[52;149H [10;16H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,16[9CTop[10;16H[?25h[?25l[52;163H7[10;17H[?25h[?25l[10;7H([8C)[52;160H1[11;17H[?25h[?25l[52;163H8[11;18H[?25h[?25l[52;163H9[11;19H[?25h[?25l[52;162H20[11;20H[?25h[?25l[52;163H1[11;21H[?25h[?25l[52;163H2[11;22H[?25h[?25l [46m([12C)[m[52;163H3[11;23H[?25h[?25l[52;163H4[11;24H[?25h[?25l([12C)[52;163H5[11;25H[?25h[?25l[52;163H6[11;26H[?25h[?25l[52;163H7[11;27H[?25h[?25l [46m([6C)[m[52;163H8[11;28H[?25h[?25l[46ms[m([1m[96mcdr[m l[46ms[m))))[11;28Hs[46m([m[5Cs[46m)[m[52;163H9[11;29H[?25h[?25l[46mu[m([1m[96mcdr[m l[46ms[m))))[11;29Hu[46m([m[5Cs[46m)[m[52;162H30[11;30H[?25h[?25l[46mm[m([1m[96mcdr[m l[46ms[m))))[11;30Hm[46m([m[5Cs[46m)[m[52;163H1[11;31H[?25h[?25l[46m-[m([1m[96mcdr[m l[46ms[m))))[11;31H-[46m([m[5Cs[46m)[m[52;163H2[11;32H[?25h[?25l[46ml[m([1m[96mcdr[m l[46ms[m))))[11;32Hl[46m([m[5Cs[46m)[m[52;163H3[11;33H[?25h[?25l[46me[m([1m[96mcdr[m l[46ms[m))))[11;33He[46m([m[5Cs[46m)[m[52;163H4[11;34H[?25h[?25l[46mn[m([1m[96mcdr[m l[46ms[m))))[11;34Hn[46m([m[5Cs[46m)[m[52;163H5[11;35H[?25h[?25l[46mg[m([1m[96mcdr[m l[46ms[m))))[11;35Hg[46m([m[5Cs[46m)[m[52;163H6[11;36H[?25h[?25l[46mt[m([1m[96mcdr[m l[46ms[m))))[11;36Ht[46m([m[5Cs[46m)[m[52;163H7[11;37H[?25h[?25l[46mh[m([1m[96mcdr[m l[46ms[m))))[11;37Hh[46m([m[5Cs[46m)[m[52;163H8[11;38H[?25h[?25l[46ms[m([1m[96mcdr[m l[46ms[m))))[11;38Hs[46m([m[5Cs[46m)[m[52;163H9[11;39H[?25h[?25l[52;162H40[11;40H[?25h[?25l[52;162H39[11;39H[?25h[?25l[46m [m([1m[96mcdr[m l[46ms[m))))[11;39H [46m([m[5Cs[46m)[m[52;162H40[11;40H[?25h[?25l[52;163H1[11;41H[?25h[?25l([6C)[52;163H2[11;42H[?25h[?25l[52;163H3[11;43H[?25h[?25l[52;163H4[11;44H[?25h[?25l[52;163H5[11;45H[?25h[?25l[52;163H6[11;46H[?25h[?25l[46m([6C)[m[52;163H7[11;47H[?25h[?25l[11;23H[46m([m[16C([6C)[46m)[m[52;163H8[11;48H[?25h[?25l[11;23H([16C[46m([6C)[m)[52;163H7[11;47H[?25h[?25l[11;40H([6C)[52;163H6[11;46H[?25h[?25l[52;163H5[11;45H[?25h[?25l[52;163H4[11;44H[?25h[?25l[52;163H3[11;43H[?25h[?25l[52;163H2[11;42H[?25h[?25l[46m([6C)[m[52;163H1[11;41H[?25h[?25l[52;163H0[11;40H[?25h[?25l([6C)[52;162H39[11;39H[?25h[?25l[52;163H8[11;38H[?25h[?25l[52;163H7[11;37H[?25h[?25l[52;163H6[11;36H[?25h[?25l[52;163H5[11;35H[?25h[?25l[52;163H4[11;34H[?25h[?25l[52;163H3[11;33H[?25h[?25l[52;163H2[11;32H[?25h[?25l[52;163H1[11;31H[?25h[?25l[52;163H0[11;30H[?25h[?25l[52;162H29[11;29H[?25h[?25l[52;163H8[11;28H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls))))[11;28H[46m([20C)[m[52;163H9[11;29H[?25h[?25l[11;10H[46m([m[17C([20C))[46m)[m[52;162H51[11;51H[?25h[?25l[1C)    [46m([m[4C([40C)[46m)[m[52;163H2[11;52H[?25h[52;1H[K[11;51H[?25l[52;149H^[[11;51H[52;149H  [11;52H    ([4C[46m([40C)[m)[52;159H11,51[9CTop[11;51H[?25h[?25l[52;149H:[11;51H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2619B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcdr: contract violation
  expected: pair?
  given: 0
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2619B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mpair?[m ls)
    ([36m+[m [31m1[m [106m([msum-lengths ([36mcdr[m (sum-lengths ([36mcdr[m ls)))[106m)[m)
    [31m0[m))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H11,51[9CTop[11;51H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mpair?[m ls)
    ([1m[96m+[m [95m1[m [46m([msum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)))[46m)[m)
    [95m0[m))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H11,51[9CTop"lab5-sol.scm" 89L, 2619B[11;51H[?25h[?25l    [46m([m[4C([40C)[46m)[m[52;163H2[11;52H[?25h[?25l[52;149H~@k[11;52H[52;149H   [11;51H    ([4C[46m([40C)[m)[52;163H1[11;51H[?25h[?25l[52;149H~@k[11;51H[52;149H   [12;7H[9;1H[46m([m[11;10H([40C)[12;7H[46m)[m[52;160H2,7 [12;7H[?25h[?25l[52;149H~@k[12;7H[52;149H   [11;51H[9;1H([11;10H[46m([40C)[m[12;7H)[52;160H1,51[11;51H[?25h[?25l[52;149H~@k[11;51H[52;149H   [11;50H[11;10H([12C[46m([26C)[m)[52;163H0[11;50H[?25h[?25l[52;149H~@k[11;50H[52;149H   [11;49H[11;23H([4C[46m([20C)[m)[52;162H49[11;49H[?25h[?25l[52;149H~@k[11;49H[52;149H   [11;48H[11;28H([12C[46m([6C)[m)[52;163H8[11;48H[?25h[?25l[52;149H~@k[11;48H[52;149H   [11;49H[11;28H[46m([m[12C([6C)[46m)[m[52;163H9[11;49H[?25h[?25l[52;149H~@k[11;49H[52;149H   [11;50H[11;23H[46m([m[4C([20C)[46m)[m[52;162H50[11;50H[?25h[?25l[52;149H~@k[11;50H[52;149H   [11;51H[11;10H[46m([m[12C([26C)[46m)[m[52;163H1[11;51H[?25h[?25l[52;149H~@k[11;51H[52;149H   [11;52H    [46m([m[4C([40C)[46m)[m[52;163H2[11;52H[?25h[?25l[52;149H~@k[11;52H[52;149H   [11;52H[?25h[?25l[52;149HL[11;52H[52;149H [46;1H[11;5H([46C)[46;1H[46m([51;43H)[m[52;159H46,1 [46;1H[?25h[?25l[52;149Hx[46;1H[52;149H [46;1H[52;149Hdl[46;1H[52;149H  [46;1H[93mdefine[m greater-than[46;20H[K[51;43H)[46;1H[?25h[?25l[52;149Hi[46;1H[52;149H [46;1H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H46,1[10CTop[46;1H[?25h[?25l([93mdefine[m greater-than[46m([51;43H)[m[52;162H2[46;2H[?25h[52;1H[K[46;1H[?25l[52;149H^[[46;1H[52;149H  [46;2H[52;159H46,1[10CTop[46;1H[?25h[?25l[52;149H:[46;1H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2619B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2619B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mpair?[m ls)
    ([36m+[m [31m1[m (sum-lengths ([36mcdr[m (sum-lengths ([36mcdr[m ls)))))
    [31m0[m))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
[106m([m[38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v))))[106m)[m[52;159H46,1[10CTop[46;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mpair?[m ls)
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)))))
    [95m0[m))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
[46m([m[93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v))))[46m)[m[52;159H46,1[10CTop"lab5-sol.scm" 89L, 2619B[46;1H[?25h[?25l([51;43H)[52;159H10,13[10;13H[?25h[?25l  [46m([12;6H)[m[52;162H3 [10;3H[?25h[?25l([12;6H)[52;162H13[10;13H[?25h[?25l[52;163H1[10;11H[?25h[?25l[52;149Hi[10;11H[52;149H [10;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,11[9CTop[10;11H[?25h[?25lpar? ls)[10;16H[K[52;163H0[10;10H[?25h[?25lr? ls)[10;15H[K[52;162H9 [10;9H[?25h[?25lr? ls)[10;14H[K[10;7H[46m([mr? ls[46m)[m[52;162H8[10;8H[?25h[?25lnr? l[46ms[m)[10;7H(nr? ls[52;162H9[10;9H[?25h[?25lur? ls)[52;162H10[10;10H[?25h[?25llr? ls)[52;163H1[10;11H[?25h[?25llr? ls)[52;163H2[10;12H[?25h[?25l[46m([9C)[m[52;163H8[10;18H[?25h[?25l[10;7H([9C)[52;163H3[10;13H[?25h[?25l[1m[96mnull?[m ls)[10;17H[K[52;163H2[10;12H[?25h[?25l[46m([8C)[m[52;163H7[10;17H[?25h[?25l[11;51r[11;1H[L[1;52r[52;159H[K[52;159H11,5[10CTop[10;7H([8C)
    [?25h[?25l[95m0[m[52;162H6[11;6H[?25h[?25l[9;1H[46m([13;7H)[m[52;160H3,8[13;8H[?25h[?25l[13;7H[K[9;1H(
  [46m([13;6H)[m[52;162H7[13;7H[?25h[?25l[13;6H[K[10;3H([52;162H6[13;6H[?25h[?25l[13;5H[K[52;162H5[13;5H[?25h[?25l[52;162H4[13;4H[?25h[?25l[52;162H3[13;3H[?25h[?25l[52;162H2[13;2H[?25h[?25l[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;5H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)))))[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H12,53[9CTop[12;5H[46m([46C)[?25h[?25l[m    ([46C)[52;160H1,6 [11;6H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,5[10CTop[12;5H[?25h[?25li[52;162H6[12;6H[?25h[?25l[93mif[m[52;162H7[12;7H[?25h[?25l[52;162H8[12;8H[?25h[?25l([52;162H9[12;9H[?25h[?25lp[52;162H10[12;10H[?25h[?25la[52;163H1[12;11H[?25h[?25li[52;163H2[12;12H[?25h[?25lr[52;163H3[12;13H[?25h[?25l[12;12H[K[52;163H2[12;12H[?25h[?25l[12;11H[K[52;163H1[12;11H[?25h[?25l[12;10H[K[52;163H0[12;10H[?25h[?25l[12;9H[K[52;162H9 [12;9H[?25h[?25l[12;8H[K[52;162H8[12;8H[?25h[?25l[52;162H7[12;7H[?25h[?25li[12;6H[K[52;162H6[12;6H[?25h[?25l[12;5H[K[52;162H5[12;5H[?25h[?25l[52;162H4[12;4H[?25h[?25l[52;162H3[12;3H[?25h[?25l[52;162H2[12;2H[?25h[?25l[52;162H1[12;1H[?25h[?25l[11;51r[51;1H
[1;52r[11;5H[95m0[m[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H11,6[10CTop[11;6H[?25h[?25l
    [46m([46C)[m[52;160H2,53[12;53H[?25h[?25l[52;163H2[12;52H[?25h[?25l    ([46C)[52;160H1,6 [11;6H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,5[10CTop[12;5H[?25h[?25li[52;162H6[12;6H[?25h[?25l[93mif[m[52;162H7[12;7H[?25h[?25l[52;162H8[12;8H[?25h[?25l[52;162H7[12;7H[?25h[?25li[12;6H[K[52;162H6[12;6H[?25h[?25l[12;5H[K[52;162H5[12;5H[?25h[?25l([52;162H6[12;6H[?25h[?25li[52;162H7[12;7H[?25h[?25l[93mif[m[52;162H8[12;8H[?25h[?25l[52;162H9[12;9H[?25h[?25l([52;162H10[12;10H[?25h[?25lp[52;163H1[12;11H[?25h[?25la[52;163H2[12;12H[?25h[?25li[52;163H3[12;13H[?25h[?25lr[52;163H4[12;14H[?25h[?25l[1m[96mpair?[m[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25ll[52;163H7[12;17H[?25h[?25ls[52;163H8[12;18H[?25h[?25l)[12;9H[46m([8C)[m[52;163H9[12;19H[?25h[?25l[12;9H([8C)
    [46m([46C)[m[52;160H3,5 [13;5H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)[13;52H[K[13;4H[46m([m[1m[96m+[m [44C[46m)[m[52;162H4[13;4H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)[13;51H[K[13;3H[46m([m[1m[96m+[m [44C[46m)[m[52;162H3[13;3H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)[13;50H[K[13;2H[46m([m[1m[96m+[m [44C[46m)[m[52;162H2[13;2H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)[13;49H[K[13;1H[46m([m[1m[96m+[m [44C[46m)[m[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;1H    ([93mif[m ([1m[96mpair?[m ls)([1m[96m+[m [95m1[m [18C(sum-lengths ([1m[96mcdr[m ls)))))[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H12,19[9CTop[12;19H[46m([46C)[12;19H[?25h[?25l[13;51r[m[13;1H[L[1;52r[12;19H[K[13;7H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)))))[52;159H[K[52;159H13,7[10CTop[13;7H[46m([46C)[13;7H[?25h[?25l[m[52;162H55[13;55H[?25h[?25l)[12;5H[46m([m[13;7H([46C)[46m)[m[52;163H6[13;56H[?25h[?25l)[10;3H[46m([m[12;5H([13;55H)[46m)[m[52;163H7[13;57H[?25h[?25l)[9;1H[46m([m
  ([13;56H)[46m)[m[52;163H8[13;58H[?25h[?25l[9;1H([13;12H[46m([40C)[m))))[52;163H3[13;53H[?25h[52;1H[K[13;52H[?25l[52;149H^[[13;52H[52;149H  [13;53H[13;12H([12C[46m([26C)[m)[52;159H13,52[9CTop[13;52H[?25h[?25l[52;149H:[13;52H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 90L, 2641B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:12:4: if: missing an "else" expression
  in: (if (pair? ls) (+ 1 (sum-lengths (cdr (sum-lengths (cdr ls))))))
  location...:
   lab5-sol.scm:12:4
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 90L, 2641B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([38;5;130mif[m ([36mpair?[m ls)[13;7H([36m+[m [31m1[m (sum-lengths [106m([m[36mcdr[m (sum-lengths ([36mcdr[m ls))[106m)[m)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[50;9H[35m'()[m[51;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[52;159H13,52[9CTop[13;52H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([93mif[m ([1m[96mpair?[m ls)[13;7H([1m[96m+[m [95m1[m (sum-lengths [46m([m[1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls))[46m)[m)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[50;9H[38;5;224m'()[m[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H13,52[9CTop"lab5-sol.scm" 90L, 2641B[13;52H[?25h[?25l[12;9H[46m([8C)[m[13;25H([26C)[52;160H2,9 [12;9H[?25h[?25l[52;149Hi[12;9H[52;149H [12;9H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H12,9[10CTop[12;9H[?25h[?25l([1m[96m[46mp[m[1m[96mair?[m ls)[12;18H[K[12;8H[46m([m[1m[96mpair?[m ls[46m)[m[52;162H8[12;8H[?25h[?25li([1m[96m[46mp[m[1m[96mair?[m ls)[12;17H[K[12;7H[46m([m[1m[96mpair?[m ls[46m)[m[52;162H7[12;7H[?25h[?25l([1m[96m[46mp[m[1m[96mair?[m ls)[12;16H[K[12;6H[46m([m[1m[96mpair?[m ls[46m)[m[52;162H6[12;6H[?25h[?25l[52;162H16[12;16H[?25h[?25l[52;162H6 [12;6H[?25h[?25l[46mi[m([1m[96mpair?[m l[46ms[m)    (i[46m([m[7Cs[46m)[m[52;162H7[12;7H[?25h[?25l[93mi[m[93m[46mf[m([1m[96mpair?[m l[46ms[m)[12;7H[93mf[m[46m([m[7Cs[46m)[m[52;162H8[12;8H[?25h[?25l[46m [m([1m[96mpair?[m l[46ms[m)[12;8H [46m([m[7Cs[46m)[m[52;162H9[12;9H[?25h[?25l[9;1H[46m([m[12;9H([8C)[13;57H[46m)[m[52;160H3,58[13;58H[?25h[?25l[13;57H[K[9;1H(
  [46m([13;56H)[m[52;163H7[13;57H[?25h[?25l[13;56H[K[10;3H([12;5H[46m([13;55H)[m[52;163H6[13;56H[?25h[?25l[13;55H[K[12;5H([13;7H[46m([46C)[m[52;163H5[13;55H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,7[10CTop[13;7H([46C)[14;7H[?25h[?25le[52;162H8[14;8H[?25h[?25l[14;7H[K[52;162H7[14;7H[?25h[?25l[95m0[m[52;162H8[14;8H[?25h[?25l)[12;5H[46m([14;8H)[m[52;162H9[14;9H[?25h[?25l)[10;3H[46m([m[12;5H([14;8H)[46m)[m[52;162H10[14;10H[?25h[?25l)[9;1H[46m([m
  ([14;9H)[46m)[m[52;163H1[14;11H[?25h[52;1H[K[14;10H[?25l[52;149H^[[14;10H[52;149H  [14;11H[52;159H14,10[9CTop[14;10H[?25h[?25l[52;149H:[14;10H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 91L, 2649B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcdr: contract violation
  expected: pair?
  given: 0
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 91L, 2649B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([38;5;130mif[m ([36mpair?[m ls)[13;7H([36m+[m [31m1[m (sum-lengths ([36mcdr[m (sum-lengths ([36mcdr[m ls)))))[14;7H[31m0[m))[106m)[m

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[51;9H[35m'()[m[52;159H14,10[9CTop[14;10H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([93mif[m ([1m[96mpair?[m ls)[13;7H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m (sum-lengths ([1m[96mcdr[m ls)))))[14;7H[95m0[m))[46m)[m

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[51;9H[38;5;224m'()[m[52;159H14,10[9CTop"lab5-sol.scm" 91L, 2649B[14;10H[?25h[?25l[9;1H([13;25H[46m([26C)[m[14;10H)[52;160H3,52[13;52H[?25h[?25l[13;7H[46m([m[17C([26C))[46m)[m[52;163H4[13;54H[?25h[?25l[13;7H([35C[46m([6C)[m))))[52;162H43[13;43H[?25h[?25l[52;149Hi[13;43H[52;149H [13;43H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,43[9CTop[13;43H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;54H[K[13;42H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H2[13;42H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;53H[K[13;41H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H1[13;41H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;52H[K[13;40H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H0[13;40H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;51H[K[13;39H[46m([m[1m[96mcdr[m ls[46m)[m)[52;162H39[13;39H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;50H[K[13;38H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H8[13;38H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;49H[K[13;37H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H7[13;37H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;48H[K[13;36H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H6[13;36H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;47H[K[13;35H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H5[13;35H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;46H[K[13;34H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H4[13;34H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;45H[K[13;33H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H3[13;33H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;44H[K[13;32H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H2[13;32H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[13;43H[K[13;31H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H1[13;31H[?25h[?25l[1m[96m[46mc[m[1m[96mdr[m ls)[13;42H[K[13;30H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H0[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l([6C)[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l[46m([6C)[m[52;163H7[13;37H[?25h[?25l[13;25H[46m([m[4C([6C)[46m)[m[52;163H8[13;38H[?25h[?25l[13;12H[46m([m[12C([12C)[46m)[m[52;163H9[13;39H[?25h[?25l[13;41H[K[13;12H([12C[46m([12C)[m)[52;163H8[13;38H[?25h[?25l[13;12H[46m([m[12C([12C)[46m)[m[52;163H9[13;39H[?25h[?25l[13;7H[46m([m[4C([26C)[46m)[m[52;162H40[13;40H[?25h[?25l[52;163H1[13;41H[?25h[?25l[52;163H0[13;40H[?25h[52;1H[K[13;39H[?25l[52;149H^[[13;39H[52;149H  [13;40H[13;7H([4C[46m([26C)[m)[52;159H13,39[9CTop[13;39H[?25h[?25l[52;149H:[13;39H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 91L, 2635B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:17:0
actual:     1
expected:   0
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     1
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     1
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:27:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:37:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:66:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:78:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:87:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 91L, 2635B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([38;5;130mif[m ([36mpair?[m ls)[13;7H([36m+[m [31m1[m [106m([msum-lengths ([36mcdr[m ([36mcdr[m ls))[106m)[m)[14;7H[31m0[m)))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[51;9H[35m'()[m[52;159H13,39[9CTop[13;39H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([93mif[m ([1m[96mpair?[m ls)[13;7H([1m[96m+[m [95m1[m [46m([msum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))[46m)[m)[14;7H[95m0[m)))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[51;9H[38;5;224m'()[m[52;159H13,39[9CTop"lab5-sol.scm" 91L, 2635B[13;39H[?25h[?25l[12;9H[46m([8C)[m[13;12H([26C)[52;160H2,18[12;18H[?25h[?25l[10;3H[46m([m[12;9H([8C)[14;9H[46m)[m[52;160H4,9 [14;9H[?25h[?25l[9;9H[46m([14C)[m
  ([14;9H)[52;159H9,24[9;24H[?25h[?25l[52;149Hi[9;24H[52;149H [9;24H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H9,24[10CTop[9;24H[?25h[?25l[52;162H5[9;25H[?25h[?25l[10;51r[10;1H[L[1;52r[52;159H[K[52;159H10,3[10CTop[9;9H([14C)
  [?25h[?25l([46m([15;10H)[m[52;162H4[10;4H[?25h[?25ld([15;10H)[52;162H5[10;5H[?25h[?25li[52;162H6[10;6H[?25h[?25ls[52;162H7[10;7H[?25h[?25lp[52;162H8[10;8H[?25h[?25ll[52;162H9[10;9H[?25h[?25la[52;162H10[10;10H[?25h[?25l  ([1m[96mdisplay[m[52;163H1[10;11H[?25h[?25l[52;163H2[10;12H[?25h[?25l([46m([15;10H)[m[52;163H3[10;13H[?25h[?25ll([15;10H)[52;163H4[10;14H[?25h[?25ls[52;163H5[10;15H[?25h[?25l)[46m([mls[46m)[m[52;163H6[10;16H[?25h[?25l)  [46m([m[8C(ls)[46m)[m[52;163H7[10;17H[?25h[?25l  ([12C)[11;7H[46m([8C)[m[52;160H1[11;17H[?25h[52;1H[K[11;16H[?25l[52;149H^[[11;16H[52;149H  [11;17H[52;159H11,16[9CTop[11;16H[?25h[?25l[52;149H:[11;16H[52;149H[K[52;1H:[?25hx[?25l[52;2H[K[52;2H[?25h [?25l[11;16H[52;159H11,16[9CTop[11;16H[?25h[?25l[52;149Hi[11;16H[52;149H [11;16H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H11,16[9CTop[11;16H[?25h[?25l[10;3H[46m([12C)[m[11;7H([8C)[52;160H0[10;16H[?25h[?25l[52;163H7[10;17H[?25h[?25l  ([12C)[52;163H8[10;18H[?25h[?25l([46m([15;10H)[m[52;163H9[10;19H[?25h[?25ln([15;10H)[52;162H20[10;20H[?25h[?25le[52;163H1[10;21H[?25h[?25lw[52;163H2[10;22H[?25h[?25ll[52;163H3[10;23H[?25h[?25li[52;163H4[10;24H[?25h[?25ln[52;163H5[10;25H[?25h[?25l[1m[96mnewline[m[52;163H6[10;26H[?25h[?25l)[10;18H[46m([7C)[m[52;163H7[10;27H[?25h[52;1H[K[10;26H[?25l[52;149H^[[10;26H[52;149H  [10;27H[52;159H10,26[9CTop[10;26H[?25h[?25l[52;149H:[10;26H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2662B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: '()
  arguments...: [none]
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2662B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([36mdisplay[m (ls)) [106m([m[36mnewline[m[106m)[m
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([38;5;130mif[m ([36mpair?[m ls)[14;7H([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))[15;7H[31m0[m)))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H10,26[9CTop[10;26H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([1m[96mdisplay[m (ls)) [46m([m[1m[96mnewline[m[46m)[m
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([93mif[m ([1m[96mpair?[m ls)[14;7H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[15;7H[95m0[m)))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H10,26[9CTop"lab5-sol.scm" 92L, 2662B[10;26H[?25h[?25l[52;149Hi[10;26H[52;149H [10;26H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,26[9CTop[10;26H[?25h[?25l[52;163H7[10;27H[?25h[?25l[10;26H[K[10;18H([52;163H6[10;26H[?25h[?25l[10;19Hnewlin[10;25H[K[52;163H5[10;25H[?25h[?25l[10;24H[K[52;163H4[10;24H[?25h[?25l[10;23H[K[52;163H3[10;23H[?25h[?25l[10;22H[K[52;163H2[10;22H[?25h[?25l[10;21H[K[52;163H1[10;21H[?25h[?25l[10;20H[K[52;163H0[10;20H[?25h[?25l[10;19H[K[10;18H[46m([15;10H)[m[52;162H19[10;19H[?25h[?25l[10;18H[K[15;10H)[52;163H8[10;18H[?25h[?25l  [46m([12C)[m[52;163H7[10;17H[?25h[52;1H[K[10;16H[?25l[52;149H^[[10;16H[52;149H  [10;17H[52;159H10,16[9CTop[10;16H[?25h[?25l[52;149H:[10;16H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2652B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: '()
  arguments...: [none]
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2652B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  [106m([m[36mdisplay[m (ls)[106m)[m
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([38;5;130mif[m ([36mpair?[m ls)[14;7H([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))[15;7H[31m0[m)))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H10,16[9CTop[10;16H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  [46m([m[1m[96mdisplay[m (ls)[46m)[m
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([93mif[m ([1m[96mpair?[m ls)[14;7H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[15;7H[95m0[m)))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H10,16[9CTop"lab5-sol.scm" 92L, 2652B[10;16H[?25h[?25l[52;149Hi[10;16H[52;149H [10;16H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,16[9CTop[10;16H[?25h[?25l[52;163H7[10;17H[?25h[?25l[10;16H[K[10;3H([8C[46m([mls[46m)[m[52;163H6[10;16H[?25h[?25l[10;15H[K[10;12H([52;163H5[10;15H[?25h[?25l[10;14H[K[52;163H4[10;14H[?25h[?25l[10;13H[K[10;12H[46m([15;10H)[m[52;163H3[10;13H[?25h[?25l[10;12H[K[15;10H)[52;163H2[10;12H[?25h[?25l[52;163H1[10;11H[?25h[?25l  (displa[10;10H[K[52;163H0[10;10H[?25h[?25l[10;9H[K[52;162H9 [10;9H[?25h[?25l[10;8H[K[52;162H8[10;8H[?25h[?25l[10;7H[K[52;162H7[10;7H[?25h[?25l[10;6H[K[52;162H6[10;6H[?25h[?25l[10;5H[K[52;162H5[10;5H[?25h[?25l[10;4H[K[10;3H[46m([15;10H)[m[52;162H4[10;4H[?25h[?25l[10;3H[K[15;10H)[52;162H3[10;3H[?25h[?25l[52;162H2[10;2H[?25h[?25l[52;162H1[10;1H[?25h[?25l[9;51r[51;1H
[1;52r[9;1H([93mdefine[m (sum-lengths ls)[51;9H[38;5;224m'()[m[52;159H[K[52;159H9,25[10CTop[9;9H[46m([14C)[?25h[?25l[m[9;9H([14C)[52;159H11,6[11;6H[?25h[?25l[12;9H[46m([8C)[m[52;160H2,19[12;19H[?25h[?25l[12;9H([8C)[52;160H1,6 [11;6H[?25h[?25l[52;162H7[11;7H[?25h[?25l([46m([14;9H)[m[52;162H8[11;8H[?25h[?25ld([14;9H)[52;162H9[11;9H[?25h[?25li[52;162H10[11;10H[?25h[?25ls[52;163H1[11;11H[?25h[?25lp[52;163H2[11;12H[?25h[?25ll[52;163H3[11;13H[?25h[?25la[52;163H4[11;14H[?25h[?25l[1m[96mdisplay[m[52;163H5[11;15H[?25h[?25l)[11;7H[46m([7C)[m[52;163H6[11;16H[?25h[?25l[52;163H5[11;15H[?25h[?25l[46m [m) [46m)[m[52;163H6[11;16H[?25h[?25l[46m([m)[11;7H([9C[46m)[m[52;163H7[11;17H[?25h[?25l[1C)[11;7H[46m([m[8C()[46m)[m[52;163H8[11;18H[?25h[?25l[11;7H([8C[46m()[m)[52;163H7[11;17H[?25h[?25l[46ml[m))l[46m)[m[52;163H8[11;18H[?25h[?25l[46ms[m))s[46m)[m[52;163H9[11;19H[?25h[?25l[11;7H[46m([m[8C(ls)[46m)[m[52;162H20[11;20H[?25h[?25l[52;163H1[11;21H[?25h[?25l[52;163H0[11;20H[?25h[?25l[11;7H([8C[46m([mls[46m)[m)[52;162H19[11;19H[?25h[?25l(ls)[52;163H8[11;18H[?25h[?25l[46m([mls[46m)[m[52;163H7[11;17H[?25h[?25l[52;163H6[11;16H[?25h[?25l(ls)[52;163H5[11;15H[?25h[?25l[52;163H4[11;14H[?25h[?25l[52;163H3[11;13H[?25h[?25l[52;163H2[11;12H[?25h[?25l[52;163H1[11;11H[?25h[?25l[52;163H0[11;10H[?25h[?25l[52;162H9 [11;9H[?25h[?25l[46m([12C)[m[52;162H8[11;8H[?25h[?25l[52;162H7[11;7H[?25h[?25l[52;162H8[11;8H[?25h[?25l[52;162H21[11;21H[?25h[?25l[11;20H[K[11;7H([8C[46m([mls[46m)[m[52;163H0[11;20H[?25h[?25l[11;19H[K[11;16H([52;162H19[11;19H[?25h[?25l[11;18H[K[52;163H8[11;18H[?25h[?25l[11;17H[K[11;16H[46m([14;9H)[m[52;163H7[11;17H[?25h[?25l[11;16H[K[14;9H)[52;163H6[11;16H[?25h[?25l[52;163H5[11;15H[?25h[?25l[11;8Hdispla[11;14H[K[52;163H4[11;14H[?25h[?25l[11;13H[K[52;163H3[11;13H[?25h[?25l[11;12H[K[52;163H2[11;12H[?25h[?25l[11;11H[K[52;163H1[11;11H[?25h[?25l[11;10H[K[52;163H0[11;10H[?25h[?25l[11;9H[K[52;162H9 [11;9H[?25h[?25l[11;8H[K[11;7H[46m([14;9H)[m[52;162H8[11;8H[?25h[?25l[11;7H[K[14;9H)[52;162H7[11;7H[?25h[?25l[52;162H6[11;6H[?25h[?25l[12;9H[46m([8C)[m[52;160H2,19[12;19H[?25h[?25l[13;51r[13;1H[L[1;52r[52;159H[K[52;159H13,7[10CTop[12;9H([8C)[13;7H[?25h[?25l([46m([15;8H)[m[52;162H8[13;8H[?25h[?25ld([15;8H)[52;162H9[13;9H[?25h[?25li[52;162H10[13;10H[?25h[?25ls[52;163H1[13;11H[?25h[?25ll[52;163H2[13;12H[?25h[?25l[13;11H[K[52;163H1[13;11H[?25h[?25lp[52;163H2[13;12H[?25h[?25ll[52;163H3[13;13H[?25h[?25la[52;163H4[13;14H[?25h[?25l[1m[96mdisplay[m[52;163H5[13;15H[?25h[?25l[13;8Hdispla[13;14H[K[52;163H4[13;14H[?25h[?25l[13;13H[K[52;163H3[13;13H[?25h[?25l[13;12H[K[52;163H2[13;12H[?25h[?25l[13;11H[K[52;163H1[13;11H[?25h[?25l[13;10H[K[52;163H0[13;10H[?25h[?25l[13;9H[K[52;162H9 [13;9H[?25h[?25l[13;8H[K[13;7H[46m([15;8H)[m[52;162H8[13;8H[?25h[?25l[13;7H[K[15;8H)[52;162H7[13;7H[?25h[?25l[52;162H6[13;6H[?25h[?25l[52;162H5[13;5H[?25h[?25l[52;162H4[13;4H[?25h[?25l[52;162H3[13;3H[?25h[?25l[52;162H2[13;2H[?25h[?25l[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;5H([93mif[m ([1m[96mpair?[m ls)[51;9H[38;5;224m'()[m[52;159H[K[52;159H12,19[9CTop[12;9H[46m([8C)[?25h[?25l[m[12;9H([8C)[52;160H1,6 [11;6H[?25h[?25l
    [46m([14;8H)[m[52;160H2,5[12;5H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[12;18H[K[12;4H[46m([m[93mi[m[52;162H4[12;4H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[12;17H[K[12;3H[46m([m[93mi[m[52;162H3[12;3H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[12;16H[K[12;2H[46m([m[93mi[m[52;162H2[12;2H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[12;15H[K[12;1H[46m([m[93mi[m[52;162H1[12;1H[?25h[?25l[11;51r[51;1H
[1;52r[11;1H    [95m0[m([93mif[m ([1m[96mpair?[m ls)
[46m [m[13;8H)[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H[K[52;159H11,6[10CTop[11;6H[46m([m
 [13;8H[46m)[11;6H[?25h[?25l[m([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[11;19H[K[11;5H[46m([m[93mi[m[52;162H5[11;5H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[11;18H[K[11;4H[46m([m[93mi[m[52;162H4[11;4H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[11;17H[K[11;3H[46m([m[93mi[m[52;162H3[11;3H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[11;16H[K[11;2H[46m([m[93mi[m[52;162H2[11;2H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[11;15H[K[11;1H[46m([m[93mi[m[52;162H1[11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;1H  ([93mif[m ([1m[96mnull?[m ls)([93mif[m ([1m[96mpair?[m ls)
[46m [m[12;8H)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H10,17[9CTop[10;17H[46m([m
 [12;8H[46m)[10;17H[?25h[?25l[m([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;30H[K[10;16H[46m([m[93mi[m[52;163H6[10;16H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;29H[K[10;15H[46m([m[93mi[m[52;163H5[10;15H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;28H[K[10;14H[46m([m[93mi[m[52;163H4[10;14H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;27H[K[10;13H[46m([m[93mi[m[52;163H3[10;13H[?25h[?25lnull([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;26H[K[10;12H[46m([m[93mi[m[52;163H2[10;12H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;25H[K[10;11H[46m([m[93mi[m[52;163H1[10;11H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;24H[K[10;10H[46m([m[93mi[m[52;163H0[10;10H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;23H[K[10;9H[46m([m[93mi[m[52;162H9 [10;9H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;22H[K[10;8H[46m([m[93mi[m[52;162H8[10;8H[?25h[?25l[93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;21H[K[10;7H[46m([m[93mi[m[52;162H7[10;7H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;20H[K[10;6H[46m([m[93mi[m[52;162H6[10;6H[?25h[?25li([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;19H[K[10;5H[46m([m[93mi[m[52;162H5[10;5H[?25h[?25l([93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;18H[K[10;4H[46m([m[93mi[m[52;162H4[10;4H[?25h[?25l[93m[46mi[m[93mf[m ([1m[96mpair?[m ls)[10;17H[K[10;3H[46m([m[93mi[m[52;162H3[10;3H[?25h[?25l([12;8H)[52;160H2,11[12;11H[?25h[?25l[52;160H1,27[11;27H[?25h[?25l[3C[46m([6C)[m[52;162H3[11;37H[?25h[?25l)[11;40H[K[11;36H[46m)[m)[52;163H6[11;36H[?25h[?25l)[11;39H[K[11;35H[46m)[m)[52;163H5[11;35H[?25h[?25l[46m([m))))[11;30H([5C[46m)[m[52;163H6[11;36H[?25h[?25l[4C)[11;30H[46m([m[4C()[46m)[m[52;163H7[11;37H[?25h[?25l[11;30H([4C[46m()[m)[52;163H6[11;36H[?25h[?25l[46ms[m)))))s[46m)[m[52;163H7[11;37H[?25h[?25l[46md[m)))))d[46m)[m[52;163H8[11;38H[?25h[?25l[46mr[m)))))r[46m)[m[52;163H9[11;39H[?25h[?25l[46m [m))))) [46m)[m[52;162H40[11;40H[?25h[?25l[46ml[m)))))l[46m)[m[52;163H1[11;41H[?25h[?25l[46ms[m)))))s[46m)[m[52;163H2[11;42H[?25h[?25l[11;35H(sdr ls)[52;163H1[11;41H[?25h[?25l[52;163H0[11;40H[?25h[?25l[52;162H39[11;39H[?25h[?25l[52;163H8[11;38H[?25h[?25l[52;163H7[11;37H[?25h[?25ldr ls)[11;46H[K[11;35H[46m([mdr ls[46m)[m[52;163H6[11;36H[?25h[?25l[1m[96mcdr[m l[46ms[m)))))[11;35H([5Cs[52;163H7[11;37H[?25h[?25l[11;7H[46m([38C)[m[52;162H4[11;47H[?25h[52;1H[K[11;46H[?25l[52;149H^[[11;46H[52;149H  [11;47H[52;159H11,46[9CTop[11;46H[?25h[?25l[52;149H:[11;46H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2616B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:12:9: read-syntax: unexpected `)`
  context...:
   /usr/share/racket/collects/syntax/module-reader.rkt:186:17: body
   /usr/share/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal
   /usr/share/racket/collects/racket/../syntax/module-reader.rkt:65:9: lang:read-syntax
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 89L, 2616B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mpair?[m ls)[11;7H[106m([m[36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ([36mcdr[m ls))))[106m)[m[12;7H[31m0[m)))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[49;9H[35m'()[m[50;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[51;15H(greater-than ([36mcdr[m ls) v)))))[52;159H11,46[9CTop[11;46H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mpair?[m ls)[11;7H[46m([m[1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ([1m[96mcdr[m ls))))[46m)[m[12;7H[95m0[m)))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H11,46[9CTop"lab5-sol.scm" 89L, 2616B[11;46H[?25h[?25l[11;7H([38C)[52;160H0,12[10;12H[?25h[?25l[52;149H~@k[10;12H[52;149H   [10;11H[52;163H1[10;11H[?25h[?25l[52;149H~@k[10;11H[52;149H   [10;10H[52;163H0[10;10H[?25h[?25l[52;149H~@k[10;10H[52;149H   [10;11H[52;163H1[10;11H[?25h[?25l[52;149H~@k[10;11H[52;149H   [10;12H[52;163H2[10;12H[?25h[?25l[52;149H~@k[10;12H[52;149H   [9;12H[52;159H9,12 [9;12H[?25h[?25l[52;149H~@k[9;12H[52;149H   [10;12H[52;159H10,12[10;12H[?25h[?25l[9;9H[46m([14C)[m[52;159H9,24 [9;24H[?25h[?25l[9;9H([14C)
  [46m([12;8H)[m[52;159H10,3[10;3H[?25h[?25l[52;149H2[10;4H[48;5;242m([m[12;8H)[52;1H[1m-- VISUAL --[m[52;13H[K[52;149H2[10;4H[52;159H10,4[10CTop[10;4H[?25h[?25l[52;149H3[10;5H[93m[48;5;242mi[m[52;162H5[10;5H[?25h[?25l[52;149H4[10;6H[93m[48;5;242mf[m[52;162H6[10;6H[?25h[?25l[52;149H2[11;6H[10;6H[48;5;242m ([m[1m[96m[48;5;242mpair?[m[48;5;242m ls) 
     [m[52;160H1[11;6H[?25h[?25l [48;5;242m [m[46m([38C)[m[52;162H7[11;7H[?25h[?25l[1C[48;5;242m([m[38C)[52;162H8[11;8H[?25h[?25l[52;149H3[12;8H[11;8H[1m[96m[48;5;242m+[m[48;5;242m [m[95m[48;5;242m1[m[48;5;242m (sum-lengths ([m[1m[96m[48;5;242mcdr[m[48;5;242m ([m[1m[96m[48;5;242mcdr[m[48;5;242m ([m[1m[96m[48;5;242mcdr[m[48;5;242m ls))))) 
      [m[95m[48;5;242m0[m[46m)[m[52;160H2[12;8H[?25h[?25l[1C[9;1H[46m([m[12;8H[48;5;242m)[m[46m)[m[52;162H9[12;9H[?25h[?25l[1C[9;1H([12;9H[48;5;242m)[m[52;162H10[12;10H[?25h[?25l[?25h[?25l[52;149Hc[12;10H[52;149H [10;3H[52;4H[1mINSERT [m[52;159H[K[52;159H10,3[10CTop[10;51r[10;1H[2M[1;52r[10;1H  [10;3H[K[51;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[52;159H[K[52;159H10,3[10CTop[10;3H[?25h[?25l[52;162H2[10;2H[?25h[?25l[52;162H1[10;1H[?25h[?25l[9;51r[51;1H
[1;52r[9;1H([93mdefine[m (sum-lengths ls)[51;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[52;159H[K[52;159H9,25[10CTop[9;9H[46m([14C)[?25h[?25l[10;51r[m[10;1H[L[1;52r[52;159H[K[52;159H10,3[10CTop[9;9H([14C)
  [?25h[?25l[11;51r[11;1H[L[1;52r[10;3H([93mcond[m (([1m[96mnull?[m [1m[96mlist[m) [95m0[m)[11;12H(([1m[96mpair?[m [1m[96mlist[m)[52;159H[K[52;159H11,25[9CTop[11;13H[46m([10C)[?25h[?25l[m[11;13H([10C)[52;162H12[11;12H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;24H[K[52;163H1[11;11H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;23H[K[52;163H0[11;10H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;22H[K[52;162H9 [11;9H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;21H[K[52;162H8[11;8H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;20H[K[52;162H7[11;7H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;19H[K[52;162H6[11;6H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;18H[K[52;162H5[11;5H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;17H[K[52;162H4[11;4H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;16H[K[52;162H3[11;3H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;15H[K[52;162H2[11;2H[?25h[?25l(([1m[96mpair?[m [1m[96mlist[m)[11;14H[K[52;162H1[11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;1H  ([93mcond[m (([1m[96mnull?[m [1m[96mlist[m) [95m0[m)(([1m[96mpair?[m [1m[96mlist[m)[51;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[52;159H[K[52;159H10,25[9CTop[10;25H[?25h[?25l[11;51r[11;1H[L[1;52r[10;25H[K[11;9H(([1m[96mpair?[m [1m[96mlist[m)[52;159H[K[52;159H11,2-9[8CTop[11;9H[?25h[?25l[52;160H0,3  [10;3H[?25h[?25l([93mcond[m (([1m[96mnull?[m [1m[96mlist[m) [95m0[m)[10;24H[K[52;162H2[10;2H[?25h[?25l([93mcond[m (([1m[96mnull?[m [1m[96mlist[m) [95m0[m)[10;23H[K[52;162H1[10;1H[?25h[?25l[9;51r[51;1H
[1;52r[9;2H[93mdefine[m (sum-lengths ls)([93mcond[m (([1m[96mnull?[m [1m[96mlist[m) [95m0[m)[51;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[52;159H[K[52;159H9,25[10CTop[9;25H[?25h[?25l[10;51r[10;1H[L[1;52r[9;25H[K[10;3H([93mcond[m (([1m[96mnull?[m [1m[96mlist[m) [95m0[m)[52;159H[K[52;159H10,3[10CTop[10;3H[?25h[?25l[52;160H1,2-9[11;9H[?25h[?25l[10;10H[46m([10C)[m[52;160H0,21 [10;21H[?25h[?25llis)[46m [m[95m0[m)[10;24H[K[10;20H[46m)[m [52;163H0[10;20H[?25h[?25l)[46m [m[95m0[m)[10;23H[K[10;19H[46m)[m [52;162H19[10;19H[?25h[?25l)[46m [m[95m0[m)[10;22H[K[10;18H[46m)[m [52;163H8[10;18H[?25h[?25l)[46m [m[95m0[m)[10;21H[K[10;17H[46m)[m [52;163H7[10;17H[?25h[?25l[46ml[m) [95m0[m)l[46m)[m[52;163H8[10;18H[?25h[?25l[46ms[m) [95m0[m)s[46m)[m[52;163H9[10;19H[?25h[?25l[10;10H([8C)[11;10H[46m([10C)[m[52;160H1,14-21[11;21H[?25h[?25llis)[11;21H[K[11;20H[46m)[m[52;163H3-20[11;20H[?25h[?25l)[11;20H[K[11;19H[46m)[m[52;163H2-19[11;19H[?25h[?25l)[11;19H[K[11;18H[46m)[m[52;163H1-18[11;18H[?25h[?25l)[11;18H[K[11;17H[46m)[m[52;163H0-17[11;17H[?25h[?25l[46ml[m)l[46m)[m[52;163H1-18[11;18H[?25h[?25l[46ms[m)s[46m)[m[52;163H2-19[11;19H[?25h[?25l[52;163H3-20[11;20H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,3-10[7CTop[11;10H([8C)[12;10H[?25h[?25l([52;162H4-11[12;11H[?25h[?25l[1m[96m+[m[52;162H5-12[12;12H[?25h[?25l[95m+1[m[52;162H6-13[12;13H[?25h[?25l[52;162H7-14[12;14H[?25h[?25l[52;162H6-13[12;13H[?25h[?25l[1m[96m+[m[12;12H[K[52;162H5-12[12;12H[?25h[?25l[52;162H6-13[12;13H[?25h[?25l[95m1[m[52;162H7-14[12;14H[?25h[?25l[52;162H8-15[12;15H[?25h[?25l([52;162H9-16[12;16H[?25h[?25ls[52;162H10-17[12;17H[?25h[?25lu[52;163H1-18[12;18H[?25h[?25lm[52;163H2-19[12;19H[?25h[?25l-[52;163H3-20[12;20H[?25h[?25ll[52;163H4-21[12;21H[?25h[?25le[52;163H5-22[12;22H[?25h[?25ln[52;163H6-23[12;23H[?25h[?25lg[52;163H7-24[12;24H[?25h[?25lt[52;163H8-25[12;25H[?25h[?25lh[52;163H9-26[12;26H[?25h[?25ld[52;162H20-27[12;27H[?25h[?25ls[52;163H1-28[12;28H[?25h[?25l[12;27H[K[52;163H0-27[12;27H[?25h[?25l[12;26H[K[52;162H19-26[12;26H[?25h[?25ls[52;162H20-27[12;27H[?25h[?25l[52;163H1-28[12;28H[?25h[?25l([52;163H2-29[12;29H[?25h[?25lc[52;163H3-30[12;30H[?25h[?25ld[52;163H4-31[12;31H[?25h[?25l[1m[96mcdr[m[52;163H5-32[12;32H[?25h[?25l[52;163H6-33[12;33H[?25h[?25l([52;163H7-34[12;34H[?25h[?25lc[52;163H8-35[12;35H[?25h[?25ld[52;163H9-36[12;36H[?25h[?25l[1m[96mcdr[m[52;162H30-37[12;37H[?25h[?25l[52;163H1-38[12;38H[?25h[?25ll[52;163H2-39[12;39H[?25h[?25li[52;163H3-40[12;40H[?25h[?25ls[52;163H4-41[12;41H[?25h[?25l[1m[96mlist[m[52;163H5-42[12;42H[?25h[?25llis[12;41H[K[52;163H4-41[12;41H[?25h[?25l[12;40H[K[52;163H3-40[12;40H[?25h[?25l[12;39H[K[52;163H2-39[12;39H[?25h[?25ls[52;163H3-40[12;40H[?25h[?25l)[12;33H[46m([6C)[m[52;163H4-41[12;41H[?25h[?25l)[12;28H[46m([m[4C([6C)[46m)[m[52;163H5-42[12;42H[?25h[?25l)[12;15H[46m([m[12C([12C)[46m)[m[52;163H6-43[12;43H[?25h[?25l)[12;10H[46m([m[4C([26C)[46m)[m[52;163H7-44[12;44H[?25h[?25l[13;51r[13;1H[L[1;52r[52;159H[K[52;159H13,3-10[7CTop[12;10H([32C)[13;10H[?25h[?25l([52;162H4-11[13;11H[?25h[?25ls[52;162H5-12[13;12H[?25h[?25lu[52;162H6-13[13;13H[?25h[?25lm[52;162H7-14[13;14H[?25h[?25l-[52;162H8-15[13;15H[?25h[?25ll[52;162H9-16[13;16H[?25h[?25le[52;162H10-17[13;17H[?25h[?25ln[52;163H1-18[13;18H[?25h[?25lg[52;163H2-19[13;19H[?25h[?25lt[52;163H3-20[13;20H[?25h[?25lh[52;163H4-21[13;21H[?25h[?25ls[52;163H5-22[13;22H[?25h[?25l[52;163H6-23[13;23H[?25h[?25l([52;163H7-24[13;24H[?25h[?25ld[52;163H8-25[13;25H[?25h[?25lr[52;163H9-26[13;26H[?25h[?25l[13;25H[K[52;163H8-25[13;25H[?25h[?25l[13;24H[K[52;163H7-24[13;24H[?25h[?25lc[52;163H8-25[13;25H[?25h[?25ld[52;163H9-26[13;26H[?25h[?25l[1m[96mcdr[m[52;162H20-27[13;27H[?25h[?25l[52;163H1-28[13;28H[?25h[?25ll[52;163H2-29[13;29H[?25h[?25ls[52;163H3-30[13;30H[?25h[?25l)[13;23H[46m([6C)[m[52;163H4-31[13;31H[?25h[?25l)[13;10H[46m([m[12C([6C)[46m)[m[52;163H5-32[13;32H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,3-10[7CTop[13;10H([20C)[14;10H[?25h[?25l[52;162H2-9 [14;9H[?25h[?25l[52;162H1  [14;1H[?25h[?25l[13;51r[51;1H
[1;52r[13;10H(sum-lengths ([1m[96mcdr[m ls))[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H[K[52;159H13,25-32      Top[13;10H[46m([20C)[?25h[?25l[m)[11;9H[46m([m[13;10H([20C)[46m)[m[52;163H6-33[13;33H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,2-9[8CTop[11;9H([13;32H)[14;9H[?25h[?25l[52;162H1  [14;1H[?25h[?25l[13;51r[51;1H
[1;52r[13;10H(sum-lengths ([1m[96mcdr[m ls)))[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H[K[52;159H13,26-33      Top[11;9H[46m([13;32H)[?25h[?25l[m[13;32H[K[11;9H([13;10H[46m([20C)[m[52;163H5-32[13;32H[?25h[?25l[12;10H[46m([32C)[m[13;10H([20C)[52;160H2,37-44[12;44H[?25h[?25l[12;10H([32C)[52;160H4,1    [14;1H[?25h[?25l[13;10H[46m([20C)[m[52;160H3,25-32[13;32H[?25h[?25l)[11;9H[46m([m[13;10H([20C)[46m)[m[52;163H6-33[13;33H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,2-9[8CTop[11;9H([13;32H)[14;9H[?25h[?25l[95m0[m[52;162H3-10[14;10H[?25h[?25l)[10;3H[46m([14;10H)[m[52;162H4-11[14;11H[?25h[?25l)[9;1H[46m([m
  ([14;10H)[46m)[m[52;162H5-12[14;12H[?25h[?25l[9;1H([11;9H[46m([13;32H)[m[14;11H)[52;160H3,26-33[13;33H[?25h[52;1H[K[13;32H[?25l[52;149H^[[13;32H[52;149H  [13;33H[52;159H13,25-32      Top[13;32H[?25h[?25l[52;149H:[13;32H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 91L, 2645B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:14:8: cond: bad syntax (clause is not a test-value pair)
  at: 0
  in: (cond ((null? ls) 0) ((pair? ls) (+ 1 (sum-lengths (cdr (cdr ls)))) (sum-lengths (cdr ls))) 0)
  location...:
   lab5-sol.scm:14:8
  context...:
   /usr/share/racket/collects/racket/private/cond.rkt:31:23: loop
   [repeats 1 more time]
   /usr/share/racket/collects/racket/private/cond.rkt:21:13: go
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 91L, 2645B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m (([36mnull?[m ls) [31m0[m)[11;9H[106m([m([36mpair?[m ls)[12;10H([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))[13;10H(sum-lengths ([36mcdr[m ls))[106m)[m[14;9H[31m0[m))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[51;9H[35m'()[m[52;159H13,25-32      Top[13;32H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m (([1m[96mnull?[m ls) [95m0[m)[11;9H[46m([m([1m[96mpair?[m ls)[12;10H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[13;10H(sum-lengths ([1m[96mcdr[m ls))[46m)[m[14;9H[95m0[m))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[51;9H[38;5;224m'()[m[52;159H13,25-32      Top"lab5-sol.scm" 91L, 2645B[13;32H[?25h[?25l[11;9H([46m([8C)[m[13;32H)[52;160H1,12-19[11;19H[?25h[?25l[52;149H:[11;19H[52;1H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[52;1H[K[52;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:14:8: cond: bad syntax (clause is not a test-value pair)
  at: 0
  in: (cond ((null? ls) 0) ((pair? ls) (+ 1 (sum-lengths (cdr (cdr ls)))) (sum-lengths (cdr ls))) 0)
  location...:
   lab5-sol.scm:14:8
  context...:
   /usr/share/racket/collects/racket/private/cond.rkt:31:23: loop
   [repeats 1 more time]
   /usr/share/racket/collects/racket/private/cond.rkt:21:13: go
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 91L, 2645B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m (([36mnull?[m ls) [31m0[m)[11;9H([106m([m[36mpair?[m ls[106m)[m[12;10H([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))[13;10H(sum-lengths ([36mcdr[m ls)))[14;9H[31m0[m))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[51;9H[35m'()[m[52;159H11,12-19      Top[11;19H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m (([1m[96mnull?[m ls) [95m0[m)[11;9H([46m([m[1m[96mpair?[m ls[46m)[m[12;10H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[13;10H(sum-lengths ([1m[96mcdr[m ls)))[14;9H[95m0[m))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[51;9H[38;5;224m'()[m[52;159H11,12-19      Top"lab5-sol.scm" 91L, 2645B[11;19H[?25h[?25l[11;10H([8C)[52;160H0,21   [10;21H[?25h[?25l[10;9H[46m([12C)[m[52;163H2[10;22H[?25h[?25l[9;1H[46m([m[10;9H([12C)[14;11H[46m)[m[52;160H4,4-11[14;11H[?25h[?25l[9;1H(
  [46m([14;10H)[m)[52;162H3-10[14;10H[?25h[?25l[10;3H([5C[46m([12C)[m[14;10H)[52;160H0,22  [10;22H[?25h[?25l[10;9H([12C)[11;10H[46m([8C)[m[52;160H1,12-19[11;19H[?25h[?25l[11;9H[46m([m([8C)[13;32H[46m)[m[52;160H3,25-32[13;32H[?25h[?25l[11;9H([13;32H)[52;162H9-16 [13;16H[?25h[?25l[9;1H[46m([14;11H)[m[52;160H4,4-11[14;11H[?25h[?25l[52;149H~@k[14;11H[52;149H   [14;10H[9;1H(
  [46m([14;10H)[m)[52;162H3-10[14;10H[?25h[?25l[52;149H~@k[14;10H[52;149H   [14;9H[10;3H([14;10H)[52;162H2-9 [14;9H[?25h[?25l[52;149H~@k[14;9H[52;149H   [14;10H[10;3H[46m([14;10H)[m[52;162H3-10[14;10H[?25h[?25l[52;149Hi[14;10H[52;149H [14;10H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,3-10[7CTop[14;10H[?25h[?25l)[14;11H[K[14;9H[46m)[m)[52;162H2-9 [14;9H[?25h[?25l)[46m)[m[14;9H[K[14;1H[46m)[m)[52;162H1  [14;1H[?25h[?25l[13;51r[51;1H
[1;52r[13;1H  [7C(sum-lengths ([1m[96mcdr[m ls)))))[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H[K[52;159H13,26-33      Top[13;33H[46m)[?25h[?25l[9;1H([m
  ([13;33H)[46m)[m[52;163H8-35[13;35H[?25h[?25l[9;1H([10;9H[46m([12C)[m[13;34H)[52;160H0,22   [10;22H[?25h[?25l[10;9H([12C)[11;9H[46m([13;32H)[m[52;160H1,2-9[11;9H[?25h[?25l([46m([8C)[m[13;32H)[52;162H12-19[11;19H[?25h[?25l[11;10H([8C)[12;10H[46m([32C)[m[52;160H2,4-11 [12;11H[?25h[?25l[9;1H[46m([m[12;10H([32C)[13;34H[46m)[m[52;160H3,27-34[13;34H[?25h[52;1H[K[13;33H[?25l[52;149H^[[13;33H[52;149H  [13;34H[9;1H(
  [46m([13;33H)[m)[52;159H13,26-33      Top[13;33H[?25h[?25l[52;149H:[13;33H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 90L, 2642B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcdr: contract violation
  expected: pair?
  given: '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[K./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 90L, 2642B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  [106m([m[38;5;130mcond[m (([36mnull?[m ls) [31m0[m)[11;9H(([36mpair?[m ls)[12;10H([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))[13;10H(sum-lengths ([36mcdr[m ls)))[106m)[m)

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[50;9H[35m'()[m[51;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[52;159H13,26-33      Top[13;33H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  [46m([m[93mcond[m (([1m[96mnull?[m ls) [95m0[m)[11;9H(([1m[96mpair?[m ls)[12;10H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[13;10H(sum-lengths ([1m[96mcdr[m ls)))[46m)[m)

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[50;9H[38;5;224m'()[m[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H13,26-33      Top"lab5-sol.scm" 90L, 2642B[13;33H[?25h[?25l[10;3H([13;33H)[52;160H5,5    [15;5H[?25h[?25l[52;160H6,6[16;6H[?25h[?25l[46m([34C)[m[52;162H1[16;1H[?25h[?25l[52;149H;[16;1H[52;149H [16;1H[?25h[?25l[52;149Hi[16;1H[52;149H [16;1H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H16,1[10CTop[16;1H[?25h[?25l[96m[46m;[m[96m(check-eq? (sum-lengths '(() ())) [m[96m[46m0[m[96m);[m[96m[46m([m[33C[96m0[m[96m[46m)[m[52;162H2[16;2H[?25h[?25l[96m[46m;[m[96m(check-eq? (sum-lengths '(() ())) [m[96m[46m0[m[96m);;[m[96m[46m([m[33C[96m0[m[96m[46m)[m[52;162H3[16;3H[?25h[52;1H[K[16;2H[?25l[52;149H^[[16;2H[52;149H  [16;3H[96m([34C)[m[52;159H16,2[10CTop[16;2H[?25h[?25l[52;149H:[16;2H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 90L, 2644B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcdr: contract violation
  expected: pair?
  given: '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 90L, 2644B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m (([36mnull?[m ls) [31m0[m)[11;9H(([36mpair?[m ls)[12;10H([36m+[m [31m1[m (sum-lengths ([36mcdr[m ([36mcdr[m ls))))[13;10H(sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[50;9H[35m'()[m[51;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[52;159H16,2[10CTop[16;2H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m (([1m[96mnull?[m ls) [95m0[m)[11;9H(([1m[96mpair?[m ls)[12;10H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[13;10H(sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[50;9H[38;5;224m'()[m[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H16,2[10CTop"lab5-sol.scm" 90L, 2644B[16;2H[?25h[?25l[52;149Hi[16;2H[52;149H [16;2H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H16,2[10CTop[16;2H[?25h[?25l[1C[96m[46m([34C)[m[52;162H3[16;3H[?25h[?25l[96m([m[96m[46mc[m[96mheck-eq? (sum-lengths '(() ())) 0)[m[16;38H[K[16;2H[96m[46m([m[96mc[m[33C[96m[46m)[m[52;162H2[16;2H[?25h[?25l([46mc[mheck-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)[16;37H[K[16;1H[46m([mc[33C[46m)[m[52;162H1[16;1H[?25h[?25l([34C)[52;160H2,12-19[12;19H[?25h[?25l[11;9H[46m([13;32H)[m[52;160H3,25-32[13;32H[?25h[?25l[9;1H[46m([m[11;9H([13;32H))[46m)[m[52;163H7-34[13;34H[?25h[?25l[9;1H([11;10H[46m([8C)[m[13;34H)[52;160H1,12-19[11;19H[?25h[?25l[10;9H[46m([12C)[m[11;10H([8C)[52;160H0,9    [10;9H[?25h[?25l([12C)[11;10H[46m([8C)[m[52;160H1,3-10[11;10H[?25h[?25l([8C)[12;10H[46m([32C)[m[52;160H2,36-43[12;43H[?25h[?25l[12;10H([4C[46m([26C)[m)[52;163H5-42[12;42H[?25h[?25l[12;10H[46m([m[4C([26C)[46m)[m[52;163H7-44[12;44H[?25h[?25l[11;9H[46m([m[12;10H([32C)[13;32H[46m)[m[52;160H3,25-32[13;32H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;159H13,27-34      Top[52;149H^O[13;34H[52;149H2 [13;34H[9;1H[46m([m[11;9H([13;32H))[46m)[m[48;5;242m [?25h[?25l[m[52;149H [11;20H[52;4H[1mINSERTt --[m[52;13H[K[52;159H11,13-20      Top[13;35H[K[9;1H([11;10H[46m([8C)[m[13;34H)[11;20H[?25h[?25l[52;162H3-10 [11;10H[?25h[?25l([8C)[16;27H[38;5;224m[46m()[m[52;160H6,27  [16;27H[?25h[?25l[38;5;224m()[m[52;160H2,7-14[12;14H[?25h[?25l[95mi[m (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls))))[52;162H8-15[12;15H[?25h[?25l (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls)[12;44H[K[52;162H7-14[12;14H[?25h[?25l (sum-lengths ([1m[96mcdr[m ([1m[96mcdr[m ls)[12;43H[K[52;162H6-13[12;13H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[12;11H[52;159H12,4-11[7CTop[12;10H[48;5;242m([?25h[?25l[m[52;149H3[12;12H[1m[96m[48;5;242m+[m [52;162H5-12[12;12H[?25h[?25l[52;149H4[12;13H[48;5;242m [m[52;162H6-13[12;13H[?25h[?25l[52;149H5[12;14H[48;5;242m [m[46m([26C)[m[52;162H7-14[12;14H[?25h[?25l[52;149H6[12;15H[48;5;242m([m[26C)[52;162H8-15[12;15H[?25h[?25l[52;149H7[12;16H[48;5;242ms[m[52;162H9-16[12;16H[?25h[?25l[52;149H8[12;17H[48;5;242mu[m[52;162H10-17[12;17H[?25h[?25l[52;149H9[12;18H[48;5;242mm[m[52;163H1-18[12;18H[?25h[?25l[52;149H10[12;19H[48;5;242m-[m[52;163H2-19[12;19H[?25h[?25l[52;150H1[12;20H[48;5;242ml[m[52;163H3-20[12;20H[?25h[?25l[52;150H2[12;21H[48;5;242me[m[52;163H4-21[12;21H[?25h[?25l[52;150H3[12;22H[48;5;242mn[m[52;163H5-22[12;22H[?25h[?25l[52;149H2 [13;23H[12;22H[48;5;242mgths ([m[1m[96m[48;5;242mcdr[m[48;5;242m ([m[1m[96m[48;5;242mcdr[m[48;5;242m ls)))) 
         (sum-lengths [m[46m([6C)[m[52;160H3,16-23[13;23H[?25h[?25l[1C[48;5;242m([m[6C)[52;163H7-24[13;24H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mdr[m [52;163H8-25[13;25H[?25h[?25l[1C[1m[96m[48;5;242md[m[1m[96mr[m [52;163H9-26[13;26H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;162H20-27[13;27H[?25h[?25l [48;5;242m [m[52;163H1-28[13;28H[?25h[?25ll[48;5;242ml[m[52;163H2-29[13;29H[?25h[?25ls[48;5;242ms[m[46m)[m[52;163H3-30[13;30H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H4-31[13;31H[?25h[?25l[1C[11;9H[46m([m[13;31H[48;5;242m)[m[46m)[m[52;163H5-32[13;32H[?25h[?25l[1C[10;3H[46m([m[11;9H([13;32H[48;5;242m)[m[46m)[m[52;163H6-33[13;33H[?25h[?25l[1C[9;1H[46m([m
  ([13;33H[48;5;242m)[m[46m)[m[52;163H7-34[13;34H[?25h[?25l[?25h[?25l[52;149Hc[13;34H[52;149H [12;10H[52;4H[1mINSERTt --[m[52;13H[K[52;159H12,3-10[7CTop[12;51r[51;1H
[1;52r[12;1H         [12;10H[K[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H12,3-10[7CTop[9;1H([12;10H[?25h[?25l[52;162H2-9 [12;9H[?25h[?25l[10;9H[46m([12C)[m[52;160H0,9  [10;9H[?25h[?25l[11;51r[11;1H[L[1;52r[10;9H[K[11;5H(([1m[96mnull?[m ls) [95m0[m)[52;159H[K[52;159H11,5[10CTop[11;5H[46m([12C)[m    [?25h[?25l([12C)[52;160H2,2-9[12;9H[?25h[?25l(([1m[96mpair?[m ls)[12;12H[K[52;162H1  [12;1H[?25h[?25l[11;51r[51;1H
[1;52r[11;1H    (([1m[96mnull?[m ls) [95m0[m)(([1m[96mpair?[m ls)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H11,19[9CTop[11;19H[?25h[?25l\(([1m[96mpair?[m ls)[52;162H20[11;20H[?25h[?25l(([1m[96mpair?[m ls)[11;30H[K[52;162H19[11;19H[?25h[?25l[12;51r[12;1H[L[1;52r[11;19H[K[12;5H(([1m[96mpair?[m ls)[52;159H[K[52;159H12,5[10CTop[12;5H[?25h[?25l([46m([8C)[m[52;162H16[12;16H[?25h[?25l[13;51r[13;1H[L[1;52r[52;159H[K[52;159H13,6[10CTop[12;6H([8C)[13;6H[?25h[?25l[52;162H5[13;5H[?25h[?25l[52;162H4[13;4H[?25h[?25l[52;162H3[13;3H[?25h[?25l[52;162H2[13;2H[?25h[?25l[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;5H(([1m[96mpair?[m ls)[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H[K[52;159H12,16[9CTop[12;6H[46m([8C)[?25h[?25l[m[52;163H5[12;15H[?25h[?25l    (([8C)[52;163H4[12;14H[?25h[?25l[52;163H3[12;13H[?25h[?25l[52;163H2[12;12H[?25h[?25l[52;163H1[12;11H[?25h[?25l[52;163H0[12;10H[?25h[?25l[52;162H9 [12;9H[?25h[?25l[52;162H8[12;8H[?25h[?25l[46m([8C)[m[52;162H7[12;7H[?25h[?25lnpair? l[46ms[m)    (([8Cs[52;162H8[12;8H[?25h[?25lopair? ls)[52;162H9[12;9H[?25h[?25ltpair? ls)[52;162H10[12;10H[?25h[?25l[1m[96mnot[m [1m[96mpair?[m ls)[52;163H1[12;11H[?25h[?25l([1m[96mpair?[m ls)[12;11H[46m([8C)[m[52;163H2[12;12H[?25h[?25l([8C)[52;163H3[12;13H[?25h[?25l[52;163H4[12;14H[?25h[?25l[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[12;11H[46m([8C)[m[52;162H20[12;20H[?25h[?25l[52;163H1[12;21H[?25h[?25l)    ([46m([m[4C([8C)[46m)[m[52;163H2[12;22H[?25h[?25l    (([14C)[52;163H3[12;23H[?25h[?25l[95m0[m[52;163H4[12;24H[?25h[?25l)    [46m([18C)[m[52;163H5[12;25H[?25h[?25l[13;51r[13;1H[L[1;52r[52;159H[K[52;159H13,5[10CTop[12;5H([18C)
    [?25h[?25l([52;162H6[13;6H[?25h[?25le[52;162H7[13;7H[?25h[?25ll[52;162H8[13;8H[?25h[?25ls[52;162H9[13;9H[?25h[?25l[93melse[m[52;162H10[13;10H[?25h[?25l[52;163H1[13;11H[?25h[?25l([52;163H2[13;12H[?25h[?25l[1m[96m+[m[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25le[52;163H5[13;15H[?25h[?25l[13;14H[K[52;163H4[13;14H[?25h[?25ls[52;163H5[13;15H[?25h[?25lu[52;163H6[13;16H[?25h[?25lm[52;163H7[13;17H[?25h[?25l-[52;163H8[13;18H[?25h[?25ll[52;163H9[13;19H[?25h[?25le[52;162H20[13;20H[?25h[?25ln[52;163H1[13;21H[?25h[?25lg[52;163H2[13;22H[?25h[?25lt[52;163H3[13;23H[?25h[?25lh[52;163H4[13;24H[?25h[?25ls[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l([52;163H7[13;27H[?25h[?25lc[52;163H8[13;28H[?25h[?25la[52;163H9[13;29H[?25h[?25l[1m[96mcar[m[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25ll[52;163H2[13;32H[?25h[?25ls[52;163H3[13;33H[?25h[?25l)[13;26H[46m([6C)[m[52;163H4[13;34H[?25h[?25l[13;26H([6C)[52;163H5[13;35H[?25h[?25l([52;163H6[13;36H[?25h[?25ls[52;163H7[13;37H[?25h[?25lu[52;163H8[13;38H[?25h[?25lm[52;163H9[13;39H[?25h[?25l-[52;162H40[13;40H[?25h[?25ll[52;163H1[13;41H[?25h[?25le[52;163H2[13;42H[?25h[?25ln[52;163H3[13;43H[?25h[?25lg[52;163H4[13;44H[?25h[?25lt[52;163H5[13;45H[?25h[?25lh[52;163H6[13;46H[?25h[?25ls[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l([52;163H9[13;49H[?25h[?25ld[52;162H50[13;50H[?25h[?25l[13;49H[K[52;162H49[13;49H[?25h[?25lc[52;162H50[13;50H[?25h[?25ld[52;163H1[13;51H[?25h[?25l[1m[96mcdr[m[52;163H2[13;52H[?25h[?25l[52;163H3[13;53H[?25h[?25ll[52;163H4[13;54H[?25h[?25ls[52;163H5[13;55H[?25h[?25l)[13;48H[46m([6C)[m[52;163H6[13;56H[?25h[?25l)[13;35H[46m([m[12C([6C)[46m)[m[52;163H7[13;57H[?25h[?25l[13;35H([20C)[52;162H14[13;14H[?25h[?25l(sum-lengths ([1m[96mcar[m ls) (sum-lengths ([1m[96mcdr[m ls))[52;163H5[13;15H[?25h[?25l[12C[46m([6C)[m[52;162H3[13;35H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls))[13;14H[46m([m[12C([6C)[46m)[m[52;163H6[13;36H[?25h[?25l[13;14H([20C) [46m([20C)[m[52;162H59[13;59H[?25h[?25l)[13;11H[46m([m[25C([20C)[46m)[m[52;162H60[13;60H[?25h[?25l)    [46m([m[5C([47C)[46m)[m[52;163H1[13;61H[?25h[?25l)[10;3H[46m([m[13;5H([54C)[46m)[m[52;163H2[13;62H[?25h[?25l)[9;1H[46m([m
  ([13;61H)[46m)[m[52;163H3[13;63H[?25h[52;1H[K[13;62H[?25l[52;149H^[[13;62H[52;149H  [13;63H[52;159H13,62[9CTop[13;62H[?25h[?25l[52;149H:[13;62H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 91L, 2659B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:27:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:37:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:66:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:78:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:87:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 91L, 2659B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mnot[m ([36mpair?[m ls)) [31m0[m)
    ([38;5;130melse[m ([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))[106m)[m


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[51;9H[35m'()[m[52;159H13,62[9CTop[13;62H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mnot[m ([1m[96mpair?[m ls)) [95m0[m)
    ([93melse[m ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[46m)[m


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[51;9H[38;5;224m'()[m[52;159H13,62[9CTop"lab5-sol.scm" 91L, 2659B[13;62H[?25h[?25l[9;1H([13;62H)[19;26H[38;5;224m[46m([19C)[m[52;160H9,46[19;46H[?25h[?25l[19;26H[38;5;224m([19C)[m[52;160H8,40[18;40H[?25h[?25l[52;160H3,36[13;36H[?25h[?25l[52;160H5,0-1[15;1H[?25h[?25l[12;11H[46m([8C)[m[52;160H2,11 [12;11H[?25h[?25l[52;149Hi[12;11H[52;149H [12;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H12,11[9CTop[12;11H[?25h[?25l([1m[96m[46mp[m[1m[96mair?[m ls)[1C [95m0[m)[12;24H[K[12;10H[46m([m[1m[96mpair?[m ls[46m)[m)[52;163H0[12;10H[?25h[?25lno([1m[96m[46mp[m[1m[96mair?[m ls)[1C [95m0[m)[12;23H[K[12;9H[46m([m[1m[96mpair?[m ls[46m)[m)[52;162H9 [12;9H[?25h[?25l([1m[96m[46mp[m[1m[96mair?[m ls)[1C [95m0[m)[12;22H[K[12;8H[46m([m[1m[96mpair?[m ls[46m)[m)[52;162H8[12;8H[?25h[?25l([1m[96m[46mp[m[1m[96mair?[m ls)[1C [95m0[m)[12;21H[K[12;7H[46m([m[1m[96mpair?[m ls[46m)[m)[52;162H7[12;7H[?25h[?25l[1m[96m[46mp[m[1m[96mair?[m ls)[1C [95m0[m)[12;20H[K[12;6H[46m([m[1m[96mpair?[m ls[46m)[m)[52;162H6[12;6H[?25h[?25l[52;162H7[12;7H[?25h[?25l([8C)[52;162H8[12;8H[?25h[?25l[52;162H9[12;9H[?25h[?25l[52;162H10[12;10H[?25h[?25l[52;163H1[12;11H[?25h[?25l[52;163H2[12;12H[?25h[?25l[52;163H3[12;13H[?25h[?25l[52;163H4[12;14H[?25h[?25l    ([46m([8C)[m[52;163H5[12;15H[?25h[?25l    [46m([m([8C)[46m)[m[52;163H6[12;16H[?25h[?25l[52;163H7[12;17H[?25h[?25l[46m [m[95m0[m)[12;19H[K[12;5H([46m([8C)[m [52;163H6[12;16H[?25h[?25l    (([8C)[52;163H7[12;17H[?25h[?25l    [46m([12C)[m[52;163H8[12;18H[?25h[?25l)[12;18H[K[12;17H[46m)[m[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l[12;17H[K[12;5H([52;163H7[12;17H[?25h[?25l[52;160H3[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[46m([20C)[m[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l([20C)[52;163H3[13;13H[?25h[?25l[46m([47C)[m[52;163H2[13;12H[?25h[?25l[52;163H1[13;11H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;62H[K[13;10H[46m([m[1m[96m+[m [45C[46m)[m)[52;163H0[13;10H[?25h[?25lels([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;61H[K[13;9H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H9 [13;9H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;60H[K[13;8H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H8[13;8H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;59H[K[13;7H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H7[13;7H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;58H[K[13;6H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H6[13;6H[?25h[?25l[1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;57H[K[13;5H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H5[13;5H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;56H[K[13;4H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H4[13;4H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;3H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H3[13;3H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;54H[K[13;2H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H2[13;2H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;53H[K[13;1H[46m([m[1m[96m+[m [45C[46m)[m)[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;1H    (([1m[96mpair?[m ls) ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))
[46m        [m[51;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[52;159H[K[52;159H12,17[9CTop[12;17H[46m([47C)[m
        [12;17H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[12;68H[K[12;16H[46m([m[1m[96m+[m [45C[46m)[m)[52;163H6[12;16H[?25h[?25l[46m [m([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls[5C)[12;16H [46m([m[46C)[46m)[m[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l([47C)[52;163H9[12;19H[?25h[?25l[46m([47C)[m[52;163H8[12;18H[?25h[?25l[52;163H7[12;17H[?25h[?25l    ([46m([8C)[m ([47C)[52;163H6[12;16H[?25h[?25l    (([8C) [46m([47C)[m[52;163H7[12;17H[?25h[?25l[13;51r[13;1H[L[1;52r[12;17H[K[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;159H[K[52;159H13,6[10CTop[13;6H[46m([47C)[m     [?25h[?25l[52;162H7[13;7H[?25h[?25l([47C)[52;162H8[13;8H[?25h[?25l [46m([20C)[m[52;162H9[13;9H[?25h[?25l[52;162H10[13;10H[?25h[?25l([20C)[52;163H1[13;11H[?25h[?25l[52;163H2[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l [46m([6C)[m[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l([6C)[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l[46m([6C)[m[52;163H9[13;29H[?25h[?25l[13;9H[46m([m[12C([6C)[46m)[m[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l[13;9H([20C) [46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l([20C)[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[52;163H9[13;39H[?25h[?25l[52;162H40[13;40H[?25h[?25l[52;163H1[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l[52;163H4[13;44H[?25h[?25l [46m([6C)[m[52;163H5[13;45H[?25h[?25l[52;163H6[13;46H[?25h[?25l([6C)[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l[52;163H9[13;49H[?25h[?25l[52;162H50[13;50H[?25h[?25l[52;163H1[13;51H[?25h[?25l[46m([6C)[m[52;163H2[13;52H[?25h[?25l[13;32H[46m([m[12C([6C)[46m)[m[52;163H3[13;53H[?25h[?25l     [46m([m[25C([20C)[46m)[m[52;163H4[13;54H[?25h[?25l[12;5H[46m([m[13;6H([47C)[46m)[m[52;163H5[13;55H[?25h[?25l[10;3H[46m([m[12;5H([13;55H)[46m)[m[52;163H6[13;56H[?25h[?25l[9;1H[46m([m
  ([13;56H)[46m)[m[52;163H7[13;57H[?25h[?25l[52;163H8[13;58H[?25h[?25l[13;57H[K[9;1H(
  [46m([13;56H)[m[52;163H7[13;57H[?25h[?25l[13;56H[K[10;3H([12;5H[46m([13;55H)[m[52;163H6[13;56H[?25h[?25l[13;55H[K[12;5H([13;6H[46m([47C)[m[52;163H5[13;55H[?25h[?25l[52;163H4[13;54H[?25h[?25l     ([25C[46m([20C)[m)[52;163H3[13;53H[?25h[?25l[13;32H([12C[46m([6C)[m)[52;163H2[13;52H[?25h[?25l[13;45H([6C)[52;163H1[13;51H[?25h[?25l[46m([6C)[m[52;163H2[13;52H[?25h[?25l[13;32H[46m([m[12C([6C)[46m)[m[52;163H3[13;53H[?25h[?25l     [46m([m[25C([20C)[46m)[m[52;163H4[13;54H[?25h[?25l[52;163H5[13;55H[?25h[?25l)[12;5H[46m([m[13;6H([47C)[46m)[m[52;163H6[13;56H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,5[10CTop[12;5H([13;55H)
    [?25h[?25l([52;162H6[14;6H[?25h[?25le[52;162H7[14;7H[?25h[?25ll[52;162H8[14;8H[?25h[?25ls[52;162H9[14;9H[?25h[?25l[93melse[m[52;162H10[14;10H[?25h[?25l[52;163H1[14;11H[?25h[?25l[95m0[m[52;163H2[14;12H[?25h[?25l)    [46m([6C)[m[52;163H3[14;13H[?25h[?25l)[10;3H[46m([m[14;5H([6C)[46m)[m[52;163H4[14;14H[?25h[?25l)[9;1H[46m([m
  ([14;13H)[46m)[m[52;163H5[14;15H[?25h[52;1H[K[14;14H[?25l[52;149H^[[14;14H[52;149H  [14;15H[52;159H14,14[9CTop[14;14H[?25h[?25l[52;149HL[14;14H[52;149H [46;1H[9;1H([14;14H)[52;159H46,1 [46;1H[?25h[?25l[52;149Hx[46;1H[52;149H [46;1H[52;149Hdl[46;1H[52;149H  [46;1H[1C[96mfrom lab 4:[m[46;13H[K[46;1H[?25h[?25l[52;149Hi[46;1H[52;149H [46;1H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H46,1[10CTop[46;1H[?25h[?25l[1C[96m;from lab 4:[m[52;162H2[46;2H[?25h[?25l[52;160H5,1[45;1H[?25h[52;1H[K[45;1H[?25l[52;149H^[[45;1H[52;149H  [45;1H[52;159H45,0-1[8CTop[45;1H[?25h[?25l[52;149H:[45;1H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2659B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2659B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ls)[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m [31m0[m)))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr Script started on 2022-03-03 10:14:02-05:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="176" LINES="52"]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ [?2004l
exit

Script done on 2022-03-03 10:14:08-05:00 [COMMAND_EXIT_CODE="0"]
[35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H45,0-1[8CTop[45;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ls)[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m [95m0[m)))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H45,0-1[8CTop"lab5-sol.scm" 92L, 2659B[45;1H[?25h[?25l[13;22H[46m([6C)[m[52;159H13,22 [13;22H[?25h[?25l([6C)[52;162H34[13;34H[?25h[?25l[52;149H:[13;34H[52;1H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[52;1H[K[52;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ [7mscript -a labN.LOG[27mscript -a labN.LOG[1P.LOG5.LOG
[?2004lScript started, output log file is 'lab5.LOG'.
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ [?2004l
exit
Script done.
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git status
[?2004lOn branch lab5
Your branch is up to date with 'origin/lab5'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   lab5-sol.scm[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mlab5.LOG[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git add .
[?2004l[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git commit -m 'working on exercise 1`[K'
[?2004l[lab5 45df85f] working on exercise 1
 2 files changed, 2820 insertions(+), 1 deletion(-)
 create mode 100644 submit/lab5/lab5.LOG
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git push
[?2004lEnumerating objects: 10, done.
Counting objects:  10% (1/10)Counting objects:  20% (2/10)Counting objects:  30% (3/10)Counting objects:  40% (4/10)Counting objects:  50% (5/10)Counting objects:  60% (6/10)Counting objects:  70% (7/10)Counting objects:  80% (8/10)Counting objects:  90% (9/10)Counting objects: 100% (10/10)Counting objects: 100% (10/10), done.
Delta compression using up to 8 threads
Compressing objects:  16% (1/6)Compressing objects:  33% (2/6)Compressing objects:  50% (3/6)Compressing objects:  66% (4/6)Compressing objects:  83% (5/6)Compressing objects: 100% (6/6)Compressing objects: 100% (6/6), done.
Writing objects:  16% (1/6)Writing objects:  33% (2/6)Writing objects:  50% (3/6)Writing objects:  66% (4/6)Writing objects:  83% (5/6)Writing objects: 100% (6/6)Writing objects: 100% (6/6), 18.70 KiB | 2.34 MiB/s, done.
Total 6 (delta 3), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas:   0% (0/3)[Kremote: Resolving deltas:  33% (1/3)[Kremote: Resolving deltas:  66% (2/3)[Kremote: Resolving deltas: 100% (3/3)[Kremote: Resolving deltas: 100% (3/3), completed with 3 local objects.[K
To github.com:DestinyW/i471a.git
   2f2c984..45df85f  lab5 -> lab5
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git stua[K[Katus
[?2004lOn branch lab5
Your branch is up to date with 'origin/lab5'.

nothing to commit, working tree clean
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ g[Kexit
[?2004lexit

Script done on 2022-03-03 10:15:33-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-03-03 12:45:33-05:00 [TERM="xterm-256color" TTY="/dev/pts/8" COLUMNS="176" LINES="52"]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ exit[2Pcdscript -a lab5.LOGgit push -u origin lab5commit -m 'started lab5'ls[Kgit add .[26@cp ~/cs471/labs/lab5/lab5-sol.scm[C[C[21Pd submit/lab5[6@mkdir -p[C[C[C[C[C[C[C[C[C[C[C[Cgit checkout -b lab5[10Pbranchcd ~/i471a[2Pgit pullcd ~/cs471[6Pexitgit status[2Ppushcommit -m 'working on exercise 1'add .[Kstatusscript -a lab5.LOG[1Pvim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2659B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ls)[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m [31m0[m)))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,34[9CTop[13;34H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ls)[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m [95m0[m)))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,34[9CTop"lab5-sol.scm" 92L, 2659B[13;34H[?25h[?25l[9;1H[46m([14;14H)[m[52;160H4,1[14;14H[?25h[?25l[52;149Hi[14;14H[52;149H [14;14H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,14[9CTop[14;14H[?25h[?25l[9;1H([12;6H[46m([8C)[m[14;14H)[52;160H2,15[12;15H[?25h[?25l)[46m )[m [52;163H4[12;14H[?25h[?25l)[46m )[m [52;163H3[12;13H[?25h[?25l[46mc[m)c[46m)[m[52;163H4[12;14H[?25h[?25l[46ma[m)a[46m)[m[52;163H5[12;15H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m)[1m[96mr[m[46m)[m[52;163H6[12;16H[?25h[?25l[46m([m)    (([10C[46m)[m[52;163H7[12;17H[?25h[?25l[46m) [m    ([46m([m[10C [52;163H6[12;16H[?25h[?25lca)[46m )[m [52;163H5[12;15H[?25h[?25l)[46m )[m [52;163H4[12;14H[?25h[?25l)[46m )[m [52;163H3[12;13H[?25h[?25l[46m([m)    (([7C[46m)[m[52;163H4[12;14H[?25h[?25l[46mc[m)c[46m)[m[52;163H5[12;15H[?25h[?25l[46ma[m)a[46m)[m[52;163H6[12;16H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m)[1m[96mr[m[46m)[m[52;163H7[12;17H[?25h[?25l[46m [m) [46m)[m[52;163H8[12;18H[?25h[?25l[46ml[m)l[46m)[m[52;163H9[12;19H[?25h[?25l[46ms[m)s[46m)[m[52;162H20[12;20H[?25h[?25l[1C)    ([46m([m[6C([6C)[46m)[m[52;163H1[12;21H[?25h[?25l[11;5H[46m([12C)[m[12;6H([14C)[52;160H1,19[11;19H[?25h[?25l    ([12C)[12;6H[46m([14C)[m[52;160H2,21[12;21H[?25h[?25l    (([14C)[52;160H3[13;21H[?25h[?25l[52;163H0[13;20H[?25h[?25l[52;162H19[13;19H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H2[13;12H[?25h[?25l[52;163H1[13;11H[?25h[?25l[46m([20C)[m[52;163H0[13;10H[?25h[?25l[52;162H9 [13;9H[?25h[?25l([20C)[52;162H8[13;8H[?25h[?25l[46m([47C)[m[52;162H7[13;7H[?25h[?25l[52;162H6[13;6H[?25h[?25l[52;162H7[13;7H[?25h[?25l([47C)[52;162H8[13;8H[?25h[?25l [46m([20C)[m[52;162H9[13;9H[?25h[?25l[52;162H10[13;10H[?25h[?25l([20C)[52;163H1[13;11H[?25h[?25l[52;163H2[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l [46m([6C)[m[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l([6C)[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l[46m([6C)[m[52;163H9[13;29H[?25h[?25l[13;9H[46m([m[12C([6C)[46m)[m[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l[52;163H0[13;30H[?25h[?25l[13;9H([12C[46m([6C)[m)[52;162H29[13;29H[?25h[?25l[13;9H[46m([m[12C([6C)[46m)[m[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;9H([12C[46m([6C)[m [52;163H0[13;30H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;54H[K[13;22H([6C [52;162H29[13;29H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;53H[K[52;163H8[13;28H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;52H[K[52;163H7[13;27H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[13;51H[K[52;163H6[13;26H[?25h[?25lca (sum-lengths ([1m[96mcdr[m ls)[13;50H[K[52;163H5[13;25H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;49H[K[52;163H4[13;24H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;48H[K[13;22H[46m([23C)[m[52;163H3[13;23H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;47H[K[13;22H [23C)[52;163H2[13;22H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[13;46H[K[52;163H1[13;21H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;45H[K[52;163H0[13;20H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;44H[K[52;162H19[13;19H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;43H[K[52;163H8[13;18H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;42H[K[52;163H7[13;17H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;41H[K[52;163H6[13;16H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;40H[K[52;163H5[13;15H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;39H[K[52;163H4[13;14H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;38H[K[52;163H3[13;13H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;37H[K[52;163H2[13;12H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;36H[K[52;163H1[13;11H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;35H[K[13;9H[46m([23C)[m[52;163H0[13;10H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;34H[K[13;9H [23C)[52;162H9 [13;9H[?25h[?25l[95m1[m (sum-lengths ([1m[96mcdr[m ls))))[52;162H10[13;10H[?25h[?25l [46m([20C)[m[52;163H1[13;11H[?25h[?25l[52;163H2[13;12H[?25h[?25l([20C)[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l [46m([6C)[m[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l([6C)[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[46m([6C)[m[52;163H1[13;31H[?25h[?25l)[13;34H[K[13;30H[46m)[m)[52;163H0[13;30H[?25h[?25l)[13;33H[K[13;29H[46m)[m)[52;162H29[13;29H[?25h[?25l[46mc[m))))c[46m)[m[52;162H30[13;30H[?25h[?25l[46md[m))))d[46m)[m[52;163H1[13;31H[?25h[?25l[1m[96mcd[m[1m[96m[46mr[m))))[1m[96mr[m[46m)[m[52;163H2[13;32H[?25h[?25lcd)[46m)[m[13;35H[K[13;31H[46m)[m)[52;163H1[13;31H[?25h[?25l)[13;34H[K[13;30H[46m)[m)[52;163H0[13;30H[?25h[?25l)[13;33H[K[13;29H[46m)[m)[52;162H29[13;29H[?25h[?25l[46m([m))))[13;24H([5C[46m)[m[52;162H30[13;30H[?25h[?25l[46mc[m))))c[46m)[m[52;163H1[13;31H[?25h[?25l[46md[m))))d[46m)[m[52;163H2[13;32H[?25h[?25l[1m[96mcd[m[1m[96m[46mr[m))))[1m[96mr[m[46m)[m[52;163H3[13;33H[?25h[?25l[46m [m)))) [46m)[m[52;163H4[13;34H[?25h[?25l[46ml[m))))l[46m)[m[52;163H5[13;35H[?25h[?25l[46ms[m))))s[46m)[m[52;163H6[13;36H[?25h[?25l[4C)[13;24H[46m([m[4C([6C)[46m)[m[52;163H7[13;37H[?25h[?25l[13;11H[46m([m[12C([12C)[46m)[m[52;163H8[13;38H[?25h[?25l[13;11H([12C[46m([12C)[m)[52;163H7[13;37H[?25h[?25l[13;24H([4C[46m([6C)[m)[52;163H6[13;36H[?25h[?25l[13;24H[46m([m[4C([6C)[46m)[m[52;163H7[13;37H[?25h[?25l[13;11H[46m([m[12C([12C)[46m)[m[52;163H8[13;38H[?25h[?25l     [46m([m[4C([26C)[46m)[m[52;163H9[13;39H[?25h[?25l[12;5H[46m([m[13;6H([32C)[46m)[m[52;162H40[13;40H[?25h[?25l[9;1H[46m([m[12;5H([13;40H)[14;14H[46m)[m[52;160H4,15[14;15H[?25h[?25l[52;163H4[14;14H[?25h[?25l[9;1H(
  [46m([14;13H)[m)[52;163H3[14;13H[?25h[?25l[10;3H([14;5H[46m([6C)[m)[52;163H2[14;12H[?25h[?25l    ([6C)[52;163H1[14;11H[?25h[?25l    [46m([6C)[m[52;163H2[14;12H[?25h[?25l)[14;14H[K[14;11H[46m)[m)[52;163H1[14;11H[?25h[?25l[46ms[m)))s[46m)[m[52;163H2[14;12H[?25h[?25l[46mu[m)))u[46m)[m[52;163H3[14;13H[?25h[?25l[46mm[m)))m[46m)[m[52;163H4[14;14H[?25h[?25l[46m-[m)))-[46m)[m[52;163H5[14;15H[?25h[?25l)[14;17H[K[14;14H[46m)[m)[52;163H4[14;14H[?25h[?25l)[14;16H[K[14;13H[46m)[m)[52;163H3[14;13H[?25h[?25l)[14;15H[K[14;12H[46m)[m)[52;163H2[14;12H[?25h[?25l)[14;14H[K[14;11H[46m)[m)[52;163H1[14;11H[?25h[?25l)[14;13H[K[14;10H[46m)[m)[52;163H0[14;10H[?25h[?25l[46m [m))) [46m)[m[52;163H1[14;11H[?25h[?25l[46m([m)))    ([6C[46m)[m[52;163H2[14;12H[?25h[?25l[46ms[m)))s[46m)[m[52;163H3[14;13H[?25h[?25l[46mu[m)))u[46m)[m[52;163H4[14;14H[?25h[?25l[46mm[m)))m[46m)[m[52;163H5[14;15H[?25h[?25l[46m-[m)))-[46m)[m[52;163H6[14;16H[?25h[?25l[46ml[m)))l[46m)[m[52;163H7[14;17H[?25h[?25l[46me[m)))e[46m)[m[52;163H8[14;18H[?25h[?25l[46mn[m)))n[46m)[m[52;163H9[14;19H[?25h[?25l[46mg[m)))g[46m)[m[52;162H20[14;20H[?25h[?25l[46mt[m)))t[46m)[m[52;163H1[14;21H[?25h[?25l[46mh[m)))h[46m)[m[52;163H2[14;22H[?25h[?25l[46ms[m)))s[46m)[m[52;163H3[14;23H[?25h[?25l[46m [m))) [46m)[m[52;163H4[14;24H[?25h[?25l[46m([m)))[14;11H([13C[46m)[m[52;163H5[14;25H[?25h[?25l[46ms[m)))s[46m)[m[52;163H6[14;26H[?25h[?25l)[14;28H[K[14;25H[46m)[m)[52;163H5[14;25H[?25h[?25l[46mc[m)))c[46m)[m[52;163H6[14;26H[?25h[?25l[46md[m)))d[46m)[m[52;163H7[14;27H[?25h[?25l[1m[96mcd[m[1m[96m[46mr[m)))[1m[96mr[m[46m)[m[52;163H8[14;28H[?25h[?25l[46m [m))) [46m)[m[52;163H9[14;29H[?25h[?25l[46ml[m)))l[46m)[m[52;162H30[14;30H[?25h[?25l[46ms[m)))s[46m)[m[52;163H1[14;31H[?25h[?25l[3C)[14;11H[46m([m[12C([6C)[46m)[m[52;163H2[14;32H[?25h[?25l[14;11H([12C[46m([6C)[m)[52;163H1[14;31H[?25h[?25l[14;24H([6C)[52;163H0[14;30H[?25h[?25l[46m([6C)[m[52;163H1[14;31H[?25h[?25l[14;11H[46m([m[12C([6C)[46m)[m[52;163H2[14;32H[?25h[?25l    [46m([m[5C([20C)[46m)[m[52;163H3[14;33H[?25h[?25l[10;3H[46m([m[14;5H([27C)[46m)[m[52;163H4[14;34H[?25h[?25l[52;163H5[14;35H[?25h[?25l[52;163H4[14;34H[?25h[?25l[10;3H([14;5H[46m([27C)[m)[52;163H3[14;33H[?25h[?25l    ([5C[46m([20C)[m)[52;163H2[14;32H[?25h[?25l    [46m([m[5C([20C)[46m)[m[52;163H3[14;33H[?25h[?25l[10;3H[46m([m[14;5H([27C)[46m)[m[52;163H4[14;34H[?25h[?25l[52;163H5[14;35H[?25h[?25l)[9;1H[46m([m
  ([14;34H)[46m)[m[52;163H6[14;36H[?25h[?25l[9;1H([13;29H[46m([6C)[m[14;35H)[52;160H3[13;36H[?25h[?25l[13;29H([6C)[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H1[13;31H[?25h[?25l[46m([6C)[m[52;163H0[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l([6C)[52;163H8[13;28H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l [46m([6C)[m[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[52;1H[K[13;29H[?25l[52;149H^[[13;29H[52;149H  [13;30H[52;159H13,29[9CTop[13;29H[?25h[?25l[52;149H:[13;29H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2671B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm exit[K[2Pcdscript -a lab5.LOGgit push -u origin lab5commit -m 'started lab5'ls[Kgit add .[26@cp ~/cs471/labs/lab5/lab5-sol.scm[C[C[21Pd submit/lab5[6@mkdir -p[C[C[C[C[C[C[C[C[C[C[C[Cgit checkout -b lab5[10Pbranchcd ~/i471a[2Pgit pullcd ~/cs471[6Pexitgit status[2Ppushcommit -m 'working on exercise 1'add .[Kstatusscript -a lab5.LOG[1Pvim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     1
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     1
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2671B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcdr[m [106m([m[36mcdr[m ls[106m)[m))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,29[9CTop[13;29H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m [46m([m[1m[96mcdr[m ls[46m)[m))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,29[9CTop"lab5-sol.scm" 92L, 2671B[13;29H[?25h[?25l[9;1H[46m([m[13;29H([6C)[14;35H[46m)[m[52;160H4,35[14;35H[?25h[?25l[9;1H([11;6H[46m([8C)[m[14;35H)[52;160H1,1[11;15H[?25h[?25l[52;149Hi[11;15H[52;149H [11;15H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H11,15[9CTop[11;15H[?25h[?25l)[46m [m[95m0[m)[11;18H[K[11;14H[46m)[m [52;163H4[11;14H[?25h[?25l)[46m [m[95m0[m)[11;17H[K[11;13H[46m)[m [52;163H3[11;13H[?25h[?25l[46mc[m) [95m0[m)c[46m)[m[52;163H4[11;14H[?25h[?25l[46ma[m) [95m0[m)a[46m)[m[52;163H5[11;15H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m) [95m0[m)[1m[96mr[m[46m)[m[52;163H6[11;16H[?25h[?25l[46m([m) [95m0[m)    (([10C[46m)[m[52;163H7[11;17H[?25h[?25l[46ml[m) [95m0[m)l[46m)[m[52;163H8[11;18H[?25h[?25l[46ms[m) [95m0[m)s[46m)[m[52;163H9[11;19H[?25h[?25l[1C) [95m0[m)    ([46m([m[9C(ls)[46m)[m[52;162H20[11;20H[?25h[?25l    (([9C[46m([mls[46m)[m)[52;162H19[11;19H[?25h[?25l(ls)[52;163H8[11;18H[?25h[?25l[46m([mls[46m)[m[52;163H7[11;17H[?25h[?25l[52;163H6[11;16H[?25h[?25l[52;163H7[11;17H[?25h[?25lcar[46ml[ms)[1C [95m0[m)[11;23H[K[11;16Hls))[52;163H6[11;16H[?25h[?25lls)) [95m0[m)[11;22H[K[52;163H5[11;15H[?25h[?25lls)) [95m0[m)[11;21H[K[52;163H4[11;14H[?25h[?25lls)) [95m0[m)[11;20H[K[52;163H3[11;13H[?25h[?25l(ls)) [95m0[m)[11;13H[46m([mls[46m)[m[52;163H4[11;14H[?25h[?25l l[46ms[m)) [95m0[m)[11;13H( ls[52;163H5[11;15H[?25h[?25lcls)) [95m0[m)[52;163H6[11;16H[?25h[?25lals)) [95m0[m)[52;163H7[11;17H[?25h[?25lls)) [95m0[m)[11;23H[K[52;163H6[11;16H[?25h[?25lls)) [95m0[m)[11;22H[K[52;163H5[11;15H[?25h[?25lls)) [95m0[m)[11;21H[K[11;13H[46m([mls[46m)[m[52;163H4[11;14H[?25h[?25lcl[46ms[m)) [95m0[m)[11;13H(cls[52;163H5[11;15H[?25h[?25lals)) [95m0[m)[52;163H6[11;16H[?25h[?25lrls)) [95m0[m)[52;163H7[11;17H[?25h[?25l[1m[96mcar[m ls)) [95m0[m)[52;163H8[11;18H[?25h[?25l[52;163H9[11;19H[?25h[?25l[46m([6C)[m[52;162H20[11;20H[?25h[?25l    ([46m([m[6C([6C)[46m)[m[52;163H1[11;21H[?25h[?25l[52;163H2[11;22H[?25h[?25l    (([14C)[52;163H3[11;23H[?25h[?25l    [46m([18C)[m[52;163H4[11;24H[?25h[?25l    ([18C)[52;160H2,23[12;23H[?25h[?25l    ([46m([14C)[m[52;163H2[12;22H[?25h[?25l[52;163H1[12;21H[?25h[?25l    (([6C[46m([6C)[m)[52;163H0[12;20H[?25h[?25l[12;13H([6C)[52;162H19[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H5[12;15H[?25h[?25l[46m([6C)[m[52;163H4[12;14H[?25h[?25l[52;163H3[12;13H[?25h[?25l([6C)[52;163H2[12;12H[?25h[?25l[52;163H1[12;11H[?25h[?25l[52;163H2[12;12H[?25h[?25l [46m([6C)[m[52;163H3[12;13H[?25h[?25l[52;163H4[12;14H[?25h[?25l([6C)[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[46m([6C)[m[52;162H20[12;20H[?25h[?25l    ([46m([m[6C([6C)[46m)[m[52;163H1[12;21H[?25h[?25l[52;163H2[12;22H[?25h[?25l[52;163H1[12;21H[?25h[?25l    (([6C[46m([6C)[m)[52;163H0[12;20H[?25h[?25l    ([46m([m[6C([6C)[46m)[m[52;163H1[12;21H[?25h[?25l[52;163H2[12;22H[?25h[?25l    (([14C)[52;160H3[13;22H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H0[13;20H[?25h[?25l[52;162H19[13;19H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[46m([26C)[m[52;163H2[13;12H[?25h[?25l[52;163H1[13;11H[?25h[?25l([26C)[52;163H0[13;10H[?25h[?25l [46m([26C)[m[52;163H1[13;11H[?25h[?25l[52;163H2[13;12H[?25h[?25l([26C)[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l [46m([12C)[m[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l([12C)[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l [46m([6C)[m[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l([6C)[52;163H1[13;31H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[46m([6C)[m[52;163H6[13;36H[?25h[?25l[13;24H[46m([m[4C([6C)[46m)[m[52;163H7[13;37H[?25h[?25l[13;24H([4C[46m([6C)[m)[52;163H6[13;36H[?25h[?25l[13;29H([6C)[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H1[13;31H[?25h[?25l[46m([6C)[m[52;163H0[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l([6C)[52;163H8[13;28H[?25h[?25l [46m([6C)[m[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l([6C)[52;163H1[13;31H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[46m([6C)[m[52;163H6[13;36H[?25h[?25l[13;24H[46m([m[4C([6C)[46m)[m[52;163H7[13;37H[?25h[?25l[13;40H[K[13;24H([4C[46m([6C)[m)[52;163H6[13;36H[?25h[?25l[13;29H([6C)[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H1[13;31H[?25h[?25l[46m([6C)[m[52;163H0[13;30H[?25h[?25l([6C)[52;163H1[13;31H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25lcd ls)[13;39H[K[52;163H2[13;32H[?25h[?25l ls)[13;38H[K[52;163H1[13;31H[?25h[?25l ls)[13;37H[K[13;29H[46m([m ls[46m)[m[52;163H0[13;30H[?25h[?25l[46m [mls)[13;36H[K[13;29H ls))[52;162H29[13;29H[?25h[?25lls)[13;35H[K[52;163H8[13;28H[?25h[?25l[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[46m([6C)[m[52;163H1[13;31H[?25h[?25l[13;11H[46m([m[12C([6C)[46m)[m[52;163H2[13;32H[?25h[?25l     [46m([m[4C([20C)[46m)[m[52;163H3[13;33H[?25h[?25l[12;5H[46m([m[13;6H([26C)[46m)[m[52;163H4[13;34H[?25h[52;1H[K[13;33H[?25l[52;149H^[[13;33H[52;149H  [13;34H[12;5H([13;6H[46m([26C)[m)[52;159H13,33[9CTop[13;33H[?25h[?25l[52;149H:[13;33H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2671B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2671B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ([36mcar[m ls)) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H[106m([m[36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))[106m)[m)
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,33[9CTop[13;33H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ([1m[96mcar[m ls)) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H[46m([m[1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))[46m)[m)
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,33[9CTop"lab5-sol.scm" 92L, 2671B[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [14;33H[13;6H([26C)
    [46m([27C)[m[52;160H4[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [13;33H     [46m([26C)[m
    ([27C)[52;160H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;32H     ([4C[46m([20C)[m)[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;31H[13;11H([12C[46m([6C)[m)[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;32H[13;11H[46m([m[12C([6C)[46m)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [12;22H[13;11H([20C)[52;160H2,2[12;22H[?25h[?25l[52;149H~@k[12;22H[52;149H   [11;24H    [46m([18C)[m[52;160H1,24[11;24H[?25h[?25l[52;149H~@k[11;24H[52;149H   [11;23H    ([18C)[52;163H3[11;23H[?25h[?25l[52;149H~@k[11;23H[52;149H   [11;22H[52;163H2[11;22H[?25h[?25l[52;149H~@k[11;22H[52;149H   [11;21H    ([46m([14C)[m[52;163H1[11;21H[?25h[?25l[52;149H~@k[11;21H[52;149H   [11;20H    (([6C[46m([6C)[m)[52;163H0[11;20H[?25h[?25l[52;149H~@k[11;20H[52;149H   [11;19H([6C)[52;162H19[11;19H[?25h[?25l[52;149H~@k[11;19H[52;149H   [11;18H[52;163H8[11;18H[?25h[?25l[52;149H~@k[11;18H[52;149H   [11;17H[52;163H7[11;17H[?25h[?25l[52;149H~@k[11;17H[52;149H   [11;16H[52;163H6[11;16H[?25h[?25l[52;149H~@k[11;16H[52;149H   [11;17H[52;163H7[11;17H[?25h[?25l[52;149H~@k[11;17H[52;149H   [11;18H[52;163H8[11;18H[?25h[?25l[52;149H~@k[11;18H[52;149H   [11;19H[52;163H9[11;19H[?25h[?25l[52;149H~@k[11;19H[52;149H   [11;20H[11;13H[46m([6C)[m[52;162H20[11;20H[?25h[?25l[52;149H~@k[11;20H[52;149H   [11;21H    ([46m([m[6C([6C)[46m)[m[52;163H1[11;21H[?25h[?25l[52;149H~@k[11;21H[52;149H   [11;22H    (([14C)[52;163H2[11;22H[?25h[?25l[52;149H~@k[11;22H[52;149H   [11;23H[52;163H3[11;23H[?25h[?25l[52;149H~@k[11;23H[52;149H   [11;24H    [46m([18C)[m[52;163H4[11;24H[?25h[?25l[52;149H~@k[11;24H[52;149H   [11;23H    ([18C)[52;163H3[11;23H[?25h[?25l[52;149H~@k[11;23H[52;149H   [11;22H[52;163H2[11;22H[?25h[?25l[52;149H~@k[11;22H[52;149H   [11;21H    ([46m([14C)[m[52;163H1[11;21H[?25h[?25l[52;149H~@k[11;21H[52;149H   [11;20H    (([6C[46m([6C)[m)[52;163H0[11;20H[?25h[?25l[52;149H~@k[11;20H[52;149H   [11;21H    ([46m([m[6C([6C)[46m)[m[52;163H1[11;21H[?25h[?25l[52;149H~@k[11;21H[52;149H   [11;20H    (([6C[46m([6C)[m)[52;163H0[11;20H[?25h[?25l[52;149Hi[11;20H[52;149H [11;20H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H11,20[9CTop[11;20H[?25h[?25l[11;13H([6C)[52;162H19[11;19H[?25h[?25l[46m([6C)[m[52;162H20[11;20H[?25h[?25l    ([46m([m[6C([6C)[46m)[m[52;163H1[11;21H[?25h[?25l[46m [m[95m0[m)[11;24H[K[11;6H([6C[46m([6C)[m [52;163H0[11;20H[?25h[?25l[11;13H([6C)[52;162H19[11;19H[?25h[?25l[52;163H8[11;18H[?25h[?25lcarls) [95m0[m)[11;23H[K[52;163H7[11;17H[?25h[?25lls) [95m0[m)[11;22H[K[52;163H6[11;16H[?25h[?25lls) [95m0[m)[11;21H[K[52;163H5[11;15H[?25h[?25lls) [95m0[m)[11;20H[K[11;13H[46m([mls[46m)[m[52;163H4[11;14H[?25h[?25l[46ml[ms)[46m [m[95m0[m)[11;19H[K[11;13Hls) [52;163H3[11;13H[?25h[?25l[52;163H2[11;12H[?25h[?25l[52;163H3[11;13H[?25h[?25l[52;163H4[11;14H[?25h[?25l    ([46m([8C)[m[52;163H5[11;15H[?25h[?25l[52;163H6[11;16H[?25h[?25l    (([8C)[52;163H7[11;17H[?25h[?25l    [46m([12C)[m[52;163H8[11;18H[?25h[?25l    ([12C)[52;160H2[12;18H[?25h[?25l[52;160H3[13;18H[?25h[?25l[52;160H4[14;18H[?25h[?25l[52;163H7[14;17H[?25h[?25l[52;163H6[14;16H[?25h[?25l[52;163H5[14;15H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H3[14;13H[?25h[?25l[46m([20C)[m[52;163H2[14;12H[?25h[?25l[52;163H1[14;11H[?25h[?25l[46mc[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;11Hc[46m([m[19C)[46m)[m[52;163H2[14;12H[?25h[?25l[46mo[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;12Ho[46m([m[19C)[46m)[m[52;163H3[14;13H[?25h[?25l[46mn[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;13Hn[46m([m[19C)[46m)[m[52;163H4[14;14H[?25h[?25l[1m[96mcon[m[1m[96m[46ms[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;14H[1m[96ms[m[46m([m[19C)[46m)[m[52;163H5[14;15H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls[4C)[14;15H [46m([m[19C)[46m)[m[52;163H6[14;16H[?25h[?25l[1C(sum-lengths ([1m[96mcdr[m ls[4C)[14;16H([46m([m[19C)[46m)[m[52;163H7[14;17H[?25h[?25l[46ms[mum-lengths ([1m[96mcdr[m ls)[14;41H[K[14;16H[46m([ms[19C[46m)[m)[52;163H6[14;16H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;40H[K[14;15H[46m([ms[19C[46m)[m)[52;163H5[14;15H[?25h[?25lcon([46ms[mum-lengths ([1m[96mcdr[m ls)[14;39H[K[14;14H[46m([ms[19C[46m)[m)[52;163H4[14;14H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;38H[K[14;13H[46m([ms[19C[46m)[m)[52;163H3[14;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;37H[K[14;12H[46m([ms[19C[46m)[m)[52;163H2[14;12H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;36H[K[14;11H[46m([ms[19C[46m)[m)[52;163H1[14;11H[?25h[?25l[1C(sum-lengths ([1m[96mcdr[m ls[4C)[14;11H([46m([m[19C)[46m)[m[52;163H2[14;12H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls[4C)[14;12H [46m([m[19C)[46m)[m[52;163H3[14;13H[?25h[?25l[46mc[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;13Hc[46m([m[19C)[46m)[m[52;163H4[14;14H[?25h[?25l[46mo[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;14Ho[46m([m[19C)[46m)[m[52;163H5[14;15H[?25h[?25l[46mn[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;15Hn[46m([m[19C)[46m)[m[52;163H6[14;16H[?25h[?25l[1m[96mcon[m[1m[96m[46ms[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;16H[1m[96ms[m[46m([m[19C)[46m)[m[52;163H7[14;17H[?25h[?25lcon([46ms[mum-lengths ([1m[96mcdr[m ls)[14;41H[K[14;16H[46m([ms[19C[46m)[m)[52;163H6[14;16H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;40H[K[14;15H[46m([ms[19C[46m)[m)[52;163H5[14;15H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;39H[K[14;14H[46m([ms[19C[46m)[m)[52;163H4[14;14H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;38H[K[14;13H[46m([ms[19C[46m)[m)[52;163H3[14;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;37H[K[14;12H[46m([ms[19C[46m)[m)[52;163H2[14;12H[?25h[?25l[46mc[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;12Hc[46m([m[19C)[46m)[m[52;163H3[14;13H[?25h[?25l[46mo[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;13Ho[46m([m[19C)[46m)[m[52;163H4[14;14H[?25h[?25l[46mn[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;14Hn[46m([m[19C)[46m)[m[52;163H5[14;15H[?25h[?25l[1m[96mcon[m[1m[96m[46ms[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;15H[1m[96ms[m[46m([m[19C)[46m)[m[52;163H6[14;16H[?25h[?25l([20C)[52;160H3[13;16H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[46m([20C)[m[52;163H2[13;12H[?25h[?25l([20C)[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[46m([20C)[m[52;163H2[13;12H[?25h[?25l[52;163H1[13;11H[?25h[?25l([20C)[52;163H0[13;10H[?25h[?25l[52;162H9 [13;9H[?25h[?25l[52;162H10[13;10H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;34H[K[52;162H9 [13;9H[?25h[?25ls (sum-lengths ([1m[96mcdr[m ls))))[52;162H10[13;10H[?25h[?25lu (sum-lengths ([1m[96mcdr[m ls))))[52;163H1[13;11H[?25h[?25lm (sum-lengths ([1m[96mcdr[m ls))))[52;163H2[13;12H[?25h[?25l- (sum-lengths ([1m[96mcdr[m ls))))[52;163H3[13;13H[?25h[?25ll (sum-lengths ([1m[96mcdr[m ls))))[52;163H4[13;14H[?25h[?25le (sum-lengths ([1m[96mcdr[m ls))))[52;163H5[13;15H[?25h[?25ln (sum-lengths ([1m[96mcdr[m ls))))[52;163H6[13;16H[?25h[?25lg (sum-lengths ([1m[96mcdr[m ls))))[52;163H7[13;17H[?25h[?25lt (sum-lengths ([1m[96mcdr[m ls))))[52;163H8[13;18H[?25h[?25lh (sum-lengths ([1m[96mcdr[m ls))))[52;163H9[13;19H[?25h[?25ls (sum-lengths ([1m[96mcdr[m ls))))[52;162H20[13;20H[?25h[?25l[52;162H19[13;19H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H2[13;12H[?25h[?25l[52;163H1[13;11H[?25h[?25l[52;163H0[13;10H[?25h[?25l[52;162H9 [13;9H[?25h[?25l(sum-lengths (sum-lengths ([1m[96mcdr[m ls))))[13;9H[46m([34C)[m[52;162H10[13;10H[?25h[?25l([34C)[52;163H1[13;11H[?25h[?25l[52;163H2[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l  (sum-lengths ([1m[96mcdr[m ls))))[52;163H2[13;22H[?25h[?25l( (sum-lengths ([1m[96mcdr[m ls))))[13;22H[46m([23C)[m[52;163H3[13;23H[?25h[?25lc (sum-lengths ([1m[96mcdr[m ls[3C)[13;22H([23C)[52;163H4[13;24H[?25h[?25la (sum-lengths ([1m[96mcdr[m ls))))[52;163H5[13;25H[?25h[?25l[1m[96mcar[m (sum-lengths ([1m[96mcdr[m ls))))[52;163H6[13;26H[?25h[?25l  (sum-lengths ([1m[96mcdr[m ls))))[52;163H7[13;27H[?25h[?25ll (sum-lengths ([1m[96mcdr[m ls))))[52;163H8[13;28H[?25h[?25ls (sum-lengths ([1m[96mcdr[m ls))))[52;163H9[13;29H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls))))[13;22H[46m([6C)[m[52;162H30[13;30H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls))))[13;9H[46m([m[12C([6C)[46m)[m[52;163H1[13;31H[?25h[?25l[13;9H([20C) [46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l([20C)[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[52;163H9[13;39H[?25h[?25l[52;162H40[13;40H[?25h[?25l[10;3H[46m([14;40H)[m[52;160H4[14;40H[?25h[?25l[10;3H([14;5H[46m([33C)[m)[52;162H39[14;39H[?25h[?25l    ([5C[46m([26C)[m)[52;163H8[14;38H[?25h[?25l[14;11H([4C[46m([20C)[m)[52;163H7[14;37H[?25h[?25l[14;16H([12C[46m([6C)[m)[52;163H6[14;36H[?25h[?25l[14;29H([6C)[52;163H5[14;35H[?25h[?25l[52;163H4[14;34H[?25h[?25l[52;163H3[14;33H[?25h[?25l[52;163H2[14;32H[?25h[?25l[52;163H1[14;31H[?25h[?25l[46m([6C)[m[52;163H0[14;30H[?25h[?25l[52;162H29[14;29H[?25h[?25l([6C)[52;163H8[14;28H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H5[14;25H[?25h[?25l[52;163H4[14;24H[?25h[?25l[52;163H3[14;23H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H0[14;20H[?25h[?25l[52;162H19[14;19H[?25h[?25l[52;163H8[14;18H[?25h[?25l[46m([20C)[m[52;163H7[14;17H[?25h[?25l[52;163H6[14;16H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls[4C)[14;16H [46m([m[19C)[46m)[m[52;163H7[14;17H[?25h[?25l[52;163H8[14;18H[?25h[?25l([20C)[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25l[52;163H4[14;24H[?25h[?25l[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H8[14;28H[?25h[?25l[52;163H9[14;29H[?25h[?25l  ([1m[96mcdr[m ls)))))[52;162H30[14;30H[?25h[?25l( ([1m[96mcdr[m ls)))))[14;30H[46m([9C)[m[52;163H1[14;31H[?25h[?25lc ([1m[96mcdr[m ls[4C)[14;30H([9C)[52;163H2[14;32H[?25h[?25la ([1m[96mcdr[m ls)))))[52;163H3[14;33H[?25h[?25l[1m[96mcar[m ([1m[96mcdr[m ls)))))[52;163H4[14;34H[?25h[?25l  ([1m[96mcdr[m ls)))))[52;163H5[14;35H[?25h[?25ll ([1m[96mcdr[m ls)))))[52;163H6[14;36H[?25h[?25ls ([1m[96mcdr[m ls)))))[52;163H7[14;37H[?25h[?25l) ([1m[96mcdr[m ls)))))[14;30H[46m([6C)[m[52;163H8[14;38H[?25h[?25l) ([1m[96mcdr[m ls)))))[14;17H[46m([m[12C([6C)[46m)[m[52;163H9[14;39H[?25h[?25l[14;17H([20C) [46m([6C)[m[52;162H40[14;40H[?25h[?25l[1C([1m[96mcdr[m l[46ms[m)))))[14;40H([46m([m[5Cs[46m)[m[52;163H1[14;41H[?25h[?25l[46ms[m([1m[96mcdr[m l[46ms[m)))))[14;41Hs[46m([m[5Cs[46m)[m[52;163H2[14;42H[?25h[?25l[46mu[m([1m[96mcdr[m l[46ms[m)))))[14;42Hu[46m([m[5Cs[46m)[m[52;163H3[14;43H[?25h[?25l[46mm[m([1m[96mcdr[m l[46ms[m)))))[14;43Hm[46m([m[5Cs[46m)[m[52;163H4[14;44H[?25h[?25l[46ms[m([1m[96mcdr[m l[46ms[m)))))[14;44Hs[46m([m[5Cs[46m)[m[52;163H5[14;45H[?25h[?25l[46m-[m([1m[96mcdr[m l[46ms[m)))))[14;45H-[46m([m[5Cs[46m)[m[52;163H6[14;46H[?25h[?25l[46ml[m([1m[96mcdr[m l[46ms[m)))))[14;46Hl[46m([m[5Cs[46m)[m[52;163H7[14;47H[?25h[?25l[46me[m([1m[96mcdr[m l[46ms[m)))))[14;47He[46m([m[5Cs[46m)[m[52;163H8[14;48H[?25h[?25l[46mn[m([1m[96mcdr[m l[46ms[m)))))[14;48Hn[46m([m[5Cs[46m)[m[52;163H9[14;49H[?25h[?25l[46mg[m([1m[96mcdr[m l[46ms[m)))))[14;49Hg[46m([m[5Cs[46m)[m[52;162H50[14;50H[?25h[?25l[46mt[m([1m[96mcdr[m l[46ms[m)))))[14;50Ht[46m([m[5Cs[46m)[m[52;163H1[14;51H[?25h[?25l[46mh[m([1m[96mcdr[m l[46ms[m)))))[14;51Hh[46m([m[5Cs[46m)[m[52;163H2[14;52H[?25h[?25l[46ms[m([1m[96mcdr[m l[46ms[m)))))[14;52Hs[46m([m[5Cs[46m)[m[52;163H3[14;53H[?25h[?25l[46m [m([1m[96mcdr[m l[46ms[m)))))[14;53H [46m([m[5Cs[46m)[m[52;163H4[14;54H[?25h[?25l[52;163H5[14;55H[?25h[?25l([6C)[52;163H6[14;56H[?25h[?25l[52;163H7[14;57H[?25h[?25l[52;163H8[14;58H[?25h[?25l[52;163H9[14;59H[?25h[?25l[52;162H60[14;60H[?25h[?25l[46m([6C)[m[52;163H1[14;61H[?25h[?25l[14;40H[46m([m[13C([6C)[46m)[m[52;163H2[14;62H[?25h[?25l[14;11H[46m([m[28C([21C)[46m)[m[52;163H3[14;63H[?25h[?25l[14;11H([28C[46m([21C)[m)[52;163H2[14;62H[?25h[?25l[4C)[14;11H[46m([m[28C([21C)[46m)[m[52;163H3[14;63H[?25h[?25l    [46m([m[5C([51C)[46m)[m[52;163H4[14;64H[?25h[?25l[10;3H[46m([m[14;5H([58C)[46m)[m[52;163H5[14;65H[?25h[?25l[9;1H[46m([m
  ([14;65H)[46m)[m[52;163H6[14;66H[?25h[52;1H[K[14;65H[?25l[52;149H^[[14;65H[52;149H  [14;66H[9;1H(
  [46m([14;65H)[m)[52;159H14,65[9CTop[14;65H[?25h[?25l[52;149H:[14;65H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2717B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:14:40: sums-lengths: unbound identifier
  in: sums-lengths
  location...:
   lab5-sol.scm:14:40
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2717B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  [106m([m[38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mcons[m (sum-lengths ([36mcar[m ls)) (sums-lengths ([36mcdr[m ls))))[106m)[m)


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,65[9CTop[14;65H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  [46m([m[93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mcons[m (sum-lengths ([1m[96mcar[m ls)) (sums-lengths ([1m[96mcdr[m ls))))[46m)[m)


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,65[9CTop"lab5-sol.scm" 92L, 2717B[14;65H[?25h[?25l[10;3H([14;65H)[52;160H6,0-1[16;1H[?25h[?25l[9;1H[46m([14;66H)[m[52;160H4,66 [14;66H[?25h[?25l[52;149H~@k[14;66H[52;149H   [14;65H[9;1H(
  [46m([14;65H)[m)[52;163H5[14;65H[?25h[?25l[52;149H~@k[14;65H[52;149H   [14;64H[10;3H([14;5H[46m([58C)[m)[52;163H4[14;64H[?25h[?25l[52;149H~@k[14;64H[52;149H   [14;63H    ([5C[46m([51C)[m)[52;163H3[14;63H[?25h[?25l[52;149H~@k[14;63H[52;149H   [14;62H[14;11H([28C[46m([21C)[m)[52;163H2[14;62H[?25h[?25l[52;149H~@k[14;62H[52;149H   [14;61H[14;40H([13C[46m([6C)[m)[52;163H1[14;61H[?25h[?25l[52;149H~@k[14;61H[52;149H   [14;60H([6C)[52;163H0[14;60H[?25h[?25l[52;149H~@k[14;60H[52;149H   [14;59H[52;162H59[14;59H[?25h[?25l[52;149H~@k[14;59H[52;149H   [14;58H[52;163H8[14;58H[?25h[?25l[52;149H~@k[14;58H[52;149H   [14;57H[52;163H7[14;57H[?25h[?25l[52;149H~@k[14;57H[52;149H   [14;56H[52;163H6[14;56H[?25h[?25l[52;149H~@k[14;56H[52;149H   [14;55H[52;163H5[14;55H[?25h[?25l[52;149H~@k[14;55H[52;149H   [14;54H[46m([6C)[m[52;163H4[14;54H[?25h[?25l[52;149H~@k[14;54H[52;149H   [14;53H ([6C)[52;163H3[14;53H[?25h[?25l[52;149H~@k[14;53H[52;149H   [14;52H[52;163H2[14;52H[?25h[?25l[52;149H~@k[14;52H[52;149H   [14;51H[52;163H1[14;51H[?25h[?25l[52;149H~@k[14;51H[52;149H   [14;50H[52;163H0[14;50H[?25h[?25l[52;149H~@k[14;50H[52;149H   [14;49H[52;162H49[14;49H[?25h[?25l[52;149H~@k[14;49H[52;149H   [14;48H[52;163H8[14;48H[?25h[?25l[52;149H~@k[14;48H[52;149H   [14;47H[52;163H7[14;47H[?25h[?25l[52;149H~@k[14;47H[52;149H   [14;46H[52;163H6[14;46H[?25h[?25l[52;149H~@k[14;46H[52;149H   [14;45H[52;163H5[14;45H[?25h[?25l[52;149H~@k[14;45H[52;149H   [14;44H[52;163H4[14;44H[?25h[?25l[52;149H~@k[14;44H[52;149H   [14;43H[52;163H3[14;43H[?25h[?25l[52;149H~@k[14;43H[52;149H   [14;42H[52;163H2[14;42H[?25h[?25l[52;149H~@k[14;42H[52;149H   [14;41H[52;163H1[14;41H[?25h[?25l[52;149H~@k[14;41H[52;149H   [14;40H[46m([21C)[m[52;163H0[14;40H[?25h[?25l[52;149H~@k[14;40H[52;149H   [14;39H ([21C)[52;162H39[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [14;38H[14;17H[46m([20C)[m[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;37H[14;17H([12C[46m([6C)[m)[52;163H7[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;36H([6C)[52;163H6[14;36H[?25h[?25l[52;149H~@k[14;36H[52;149H   [14;35H[52;163H5[14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [14;34H[52;163H4[14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H   [14;33H[52;163H3[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [14;32H[52;163H2[14;32H[?25h[?25l[52;149H~@k[14;32H[52;149H   [14;31H[52;163H1[14;31H[?25h[?25l[52;149H~@k[14;31H[52;149H   [14;30H[46m([6C)[m[52;163H0[14;30H[?25h[?25l[52;149H~@k[14;30H[52;149H   [14;29H ([6C)[52;162H29[14;29H[?25h[?25l[52;149H~@k[14;29H[52;149H   [14;30H[46m([6C)[m[52;162H30[14;30H[?25h[?25l[52;149H~@k[14;30H[52;149H   [14;29H ([6C)[52;162H29[14;29H[?25h[?25l[52;149Hi[14;29H[52;149H [14;29H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,29[9CTop[14;29H[?25h[?25l [46m([6C)[m[52;162H30[14;30H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;66H[K[14;29H[46m([m[1m[96mcar[m ls[46m)[m)[52;162H29[14;29H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;65H[K[14;28H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H8[14;28H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;64H[K[14;27H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H7[14;27H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;63H[K[14;26H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H6[14;26H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;62H[K[14;25H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H5[14;25H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;61H[K[14;24H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H4[14;24H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;60H[K[14;23H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H3[14;23H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;59H[K[14;22H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H2[14;22H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;58H[K[14;21H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H1[14;21H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;57H[K[14;20H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H0[14;20H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;56H[K[14;19H[46m([m[1m[96mcar[m ls[46m)[m)[52;162H19[14;19H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;55H[K[14;18H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H8[14;18H[?25h[?25l[1m[96m[46mc[m[1m[96mar[m ls)[1C (sums-lengths ([1m[96mcdr[m ls)[14;54H[K[14;17H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H7[14;17H[?25h[?25l[52;163H8[14;18H[?25h[?25l([6C)[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25l[46m([6C)[m[52;163H4[14;24H[?25h[?25l[14;11H[46m([m[5C([6C)[46m)[m[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l[46m [m(sums-lengths ([1m[96mcdr[m ls)[14;53H[K[14;11H([5C[46m([6C)[m [52;163H5[14;25H[?25h[?25l[14;17H([6C)[52;160H3[13;25H[?25h[?25l[52;160H2,23[12;23H[?25h[?25l[52;160H3,25[13;25H[?25h[52;1H[K[13;24H[?25l[52;149H^[[13;24H[52;149H  [13;25H[52;159H13,24[9CTop[13;24H[?25h[?25l[52;149H:[13;24H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2703B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:14:26: sums-lengths: unbound identifier
  in: sums-lengths
  location...:
   lab5-sol.scm:14:26
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2703B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mcons[m ([36mcar[m ls) (sums-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,24[9CTop[13;24H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mcons[m ([1m[96mcar[m ls) (sums-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,24[9CTop"lab5-sol.scm" 92L, 2703B[13;24H[?25h[?25l[52;149H:[13;24H[52;1H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[52;1H[K[52;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2703B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mcons[m ([36mcar[m ls) (sums-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,24[9CTop[13;24H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mcons[m ([1m[96mcar[m ls) (sums-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,24[9CTop"lab5-sol.scm" 92L, 2703B[13;24H[?25h[?25l[52;160H4,27[14;27H[?25h[?25l[52;149H~@k[14;27H[52;149H   [14;26H[46m([21C)[m[52;163H6[14;26H[?25h[?25l[52;149H~@k[14;26H[52;149H   [14;25H ([21C)[52;163H5[14;25H[?25h[?25l[52;149H~@k[14;25H[52;149H   [14;24H[14;17H[46m([6C)[m[52;163H4[14;24H[?25h[?25l[52;149H~@k[14;24H[52;149H   [14;23H([6C)[52;163H3[14;23H[?25h[?25l[52;149H~@k[14;23H[52;149H   [14;22H[52;163H2[14;22H[?25h[?25l[52;149H~@k[14;22H[52;149H   [14;21H[52;163H1[14;21H[?25h[?25l[52;149H~@k[14;21H[52;149H   [14;20H[52;163H0[14;20H[?25h[?25l[52;149H~@k[14;20H[52;149H   [14;19H[52;162H19[14;19H[?25h[?25l[52;149H~@k[14;19H[52;149H   [14;18H[52;163H8[14;18H[?25h[?25l[52;149H~@k[14;18H[52;149H   [14;19H[52;163H9[14;19H[?25h[?25l[52;149H~@k[14;19H[52;149H   [14;20H[52;162H20[14;20H[?25h[?25l[52;149H~@k[14;20H[52;149H   [14;21H[52;163H1[14;21H[?25h[?25l[52;149H~@k[14;21H[52;149H   [14;22H[52;163H2[14;22H[?25h[?25l[52;149H~@k[14;22H[52;149H   [14;23H[52;163H3[14;23H[?25h[?25l[52;149H~@k[14;23H[52;149H   [14;24H[14;17H[46m([6C)[m[52;163H4[14;24H[?25h[?25l[52;149H~@k[14;24H[52;149H   [14;25H[14;17H([6C)[52;163H5[14;25H[?25h[?25l[52;149H~@k[14;25H[52;149H   [14;26H[46m([21C)[m[52;163H6[14;26H[?25h[?25l[52;149H~@k[14;26H[52;149H   [14;27H([21C)[52;163H7[14;27H[?25h[?25l[52;149H~@k[14;27H[52;149H   [14;28H[52;163H8[14;28H[?25h[?25l[52;149H~@k[14;28H[52;149H   [14;29H[52;163H9[14;29H[?25h[?25l[52;149H~@k[14;29H[52;149H   [14;30H[52;162H30[14;30H[?25h[?25l[52;149H~@k[14;30H[52;149H   [14;31H[52;163H1[14;31H[?25h[?25l[52;149H~@k[14;31H[52;149H   [14;32H[52;163H2[14;32H[?25h[?25l[52;149H~@k[14;32H[52;149H   [14;33H[52;163H3[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [14;34H[52;163H4[14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H   [14;35H[52;163H5[14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [14;36H[52;163H6[14;36H[?25h[?25l[52;149H~@k[14;36H[52;149H   [14;37H[52;163H7[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;38H[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;39H[52;163H9[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [14;40H[46m([6C)[m[52;162H40[14;40H[?25h[?25l[52;149H~@k[14;40H[52;149H   [14;41H([6C)[52;163H1[14;41H[?25h[?25l[52;149H~@k[14;41H[52;149H   [14;42H[52;163H2[14;42H[?25h[?25l[52;149H~@k[14;42H[52;149H   [14;43H[52;163H3[14;43H[?25h[?25l[52;149H~@k[14;43H[52;149H   [14;44H[52;163H4[14;44H[?25h[?25l[52;149H~@k[14;44H[52;149H   [14;45H[52;163H5[14;45H[?25h[?25l[52;149H~@k[14;45H[52;149H   [14;46H[52;163H6[14;46H[?25h[?25l[52;149H~@k[14;46H[52;149H   [14;47H[14;40H[46m([6C)[m[52;163H7[14;47H[?25h[?25l[52;149H~@k[14;47H[52;149H   [14;48H[14;26H[46m([m[13C([6C)[46m)[m[52;163H8[14;48H[?25h[?25l[52;149H~@k[14;48H[52;149H   [14;49H[14;11H[46m([m[14C([21C)[46m)[m[52;163H9[14;49H[?25h[?25l[52;149H~@k[14;49H[52;149H   [14;50H    [46m([m[5C([37C)[46m)[m[52;162H50[14;50H[?25h[?25l[52;149H~@k[14;50H[52;149H   [14;51H[10;3H[46m([m[14;5H([44C)[46m)[m[52;163H1[14;51H[?25h[?25l[52;149H~@k[14;51H[52;149H   [14;52H[9;1H[46m([m
  ([14;51H)[46m)[m[52;163H2[14;52H[?25h[?25l[52;149H~@k[14;52H[52;149H   [13;52H[9;1H([13;45H[46m([6C)[m[14;52H)[52;160H3[13;52H[?25h[?25l[52;149H~@k[13;52H[52;149H   [13;53H[13;32H[46m([m[12C([6C)[46m)[m[52;163H3[13;53H[?25h[?25l[52;149H~@k[13;53H[52;149H   [13;54H     [46m([m[25C([20C)[46m)[m[52;163H4[13;54H[?25h[?25l[52;149H~@k[13;54H[52;149H   [13;53H     ([25C[46m([20C)[m)[52;163H3[13;53H[?25h[?25l[52;149H~@k[13;53H[52;149H   [13;52H[13;32H([12C[46m([6C)[m)[52;163H2[13;52H[?25h[?25l[52;149H~@k[13;52H[52;149H   [13;51H([6C)[52;163H1[13;51H[?25h[?25l[52;149H~@k[13;51H[52;149H   [13;50H[52;163H0[13;50H[?25h[?25l[52;149H~@k[13;50H[52;149H   [13;49H[52;162H49[13;49H[?25h[?25l[52;149H~@k[13;49H[52;149H   [13;48H[52;163H8[13;48H[?25h[?25l[52;149H~@k[13;48H[52;149H   [13;47H[52;163H7[13;47H[?25h[?25l[52;149H~@k[13;47H[52;149H   [13;46H[52;163H6[13;46H[?25h[?25l[52;149H~@k[13;46H[52;149H   [13;45H[46m([6C)[m[52;163H5[13;45H[?25h[?25l[52;149H~@k[13;45H[52;149H   [13;44H ([6C)[52;163H4[13;44H[?25h[?25l[52;149H~@k[13;44H[52;149H   [13;43H[52;163H3[13;43H[?25h[?25l[52;149H~@k[13;43H[52;149H   [13;42H[52;163H2[13;42H[?25h[?25l[52;149H~@k[13;42H[52;149H   [13;41H[52;163H1[13;41H[?25h[?25l[52;149H~@k[13;41H[52;149H   [13;40H[52;163H0[13;40H[?25h[?25l[52;149H~@k[13;40H[52;149H   [13;39H[52;162H39[13;39H[?25h[?25l[52;149H~@k[13;39H[52;149H   [13;38H[52;163H8[13;38H[?25h[?25l[52;149H~@k[13;38H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;35H[52;163H5[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;34H[52;163H4[13;34H[?25h[?25l[52;149H~@k[13;34H[52;149H   [13;33H[52;163H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;32H[46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;31H ([20C)[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;30H[13;9H[46m([20C)[m[52;163H0[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [13;29H[13;9H([12C[46m([6C)[m)[52;162H29[13;29H[?25h[?25l[52;149H~@k[13;29H[52;149H   [13;30H[13;9H[46m([m[12C([6C)[46m)[m[52;162H30[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [13;31H[13;9H([20C)[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;32H[46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;33H([20C)[52;163H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;34H[52;163H4[13;34H[?25h[?25l[52;149H~@k[13;34H[52;149H   [13;35H[52;163H5[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [13;38H[52;163H8[13;38H[?25h[?25l[52;149H~@k[13;38H[52;149H   [13;39H[52;163H9[13;39H[?25h[?25l[52;149H~@k[13;39H[52;149H   [13;40H[52;162H40[13;40H[?25h[?25l[52;149H~@k[13;40H[52;149H   [13;41H[52;163H1[13;41H[?25h[?25l[52;149H~@k[13;41H[52;149H   [13;42H[52;163H2[13;42H[?25h[?25l[52;149H~@k[13;42H[52;149H   [13;43H[52;163H3[13;43H[?25h[?25l[52;149H~@k[13;43H[52;149H   [13;44H[52;163H4[13;44H[?25h[?25l[52;149H~@k[13;44H[52;149H   [13;45H[46m([6C)[m[52;163H5[13;45H[?25h[?25l[52;149H~@k[13;45H[52;149H   [13;46H([6C)[52;163H6[13;46H[?25h[?25l[52;149H~@k[13;46H[52;149H   [13;47H[52;163H7[13;47H[?25h[?25l[52;149H~@k[13;47H[52;149H   [13;48H[52;163H8[13;48H[?25h[?25l[52;149H~@k[13;48H[52;149H   [13;49H[52;163H9[13;49H[?25h[?25l[52;149H~@k[13;49H[52;149H   [13;50H[52;162H50[13;50H[?25h[?25l[52;149H~@k[13;50H[52;149H   [13;51H[52;163H1[13;51H[?25h[?25l[52;149H~@k[13;51H[52;149H   [13;52H[13;45H[46m([6C)[m[52;163H2[13;52H[?25h[?25l[52;149H~@k[13;52H[52;149H   [13;53H[13;32H[46m([m[12C([6C)[46m)[m[52;163H3[13;53H[?25h[?25l[52;149H~@k[13;53H[52;149H   [13;54H     [46m([m[25C([20C)[46m)[m[52;163H4[13;54H[?25h[?25l[52;149H~@k[13;54H[52;149H   [13;55H[12;5H[46m([m[13;6H([47C)[46m)[m[52;163H5[13;55H[?25h[?25l[52;149H~@k[13;55H[52;149H   [14;52H[9;1H[46m([m[12;5H([13;55H)[14;52H[46m)[m[52;160H4,52[14;52H[?25h[?25l[52;149H~@k[14;52H[52;149H   [13;55H[9;1H([12;5H[46m([13;55H)[m[14;52H)[52;160H3,55[13;55H[?25h[?25l[52;149H~@k[13;55H[52;149H   [13;54H[12;5H([13;6H[46m([47C)[m)[52;163H4[13;54H[?25h[?25l[52;149H~@k[13;54H[52;149H   [13;53H     ([25C[46m([20C)[m)[52;163H3[13;53H[?25h[?25l[52;149H~@k[13;53H[52;149H   [13;52H[13;32H([12C[46m([6C)[m)[52;163H2[13;52H[?25h[?25l[52;149H~@k[13;52H[52;149H   [13;51H([6C)[52;163H1[13;51H[?25h[?25l[52;149H~@k[13;51H[52;149H   [13;50H[52;163H0[13;50H[?25h[?25l[52;149H~@k[13;50H[52;149H   [13;49H[52;162H49[13;49H[?25h[?25l[52;149H~@k[13;49H[52;149H   [13;48H[52;163H8[13;48H[?25h[?25l[52;149H~@k[13;48H[52;149H   [13;47H[52;163H7[13;47H[?25h[?25l[52;149H~@k[13;47H[52;149H   [13;46H[52;163H6[13;46H[?25h[?25l[52;149H~@k[13;46H[52;149H   [13;45H[46m([6C)[m[52;163H5[13;45H[?25h[?25l[52;149H~@k[13;45H[52;149H   [13;44H ([6C)[52;163H4[13;44H[?25h[?25l[52;149H~@k[13;44H[52;149H   [14;44H[52;160H4[14;44H[?25h[?25l[52;149H~@k[14;44H[52;149H   [14;45H[52;163H5[14;45H[?25h[?25l[52;149H~@k[14;45H[52;149H   [14;46H[52;163H6[14;46H[?25h[?25l[52;149H~@k[14;46H[52;149H   [14;47H[14;40H[46m([6C)[m[52;163H7[14;47H[?25h[?25l[52;149H~@k[14;47H[52;149H   [14;48H[14;26H[46m([m[13C([6C)[46m)[m[52;163H8[14;48H[?25h[?25l[52;149H~@k[14;48H[52;149H   [14;49H[14;11H[46m([m[14C([21C)[46m)[m[52;163H9[14;49H[?25h[?25l[52;149H~@k[14;49H[52;149H   [14;50H    [46m([m[5C([37C)[46m)[m[52;162H50[14;50H[?25h[?25l[52;149H~@k[14;50H[52;149H   [14;51H[10;3H[46m([m[14;5H([44C)[46m)[m[52;163H1[14;51H[?25h[?25l[52;149H~@k[14;51H[52;149H   [14;52H[9;1H[46m([m
  ([14;51H)[46m)[m[52;163H2[14;52H[?25h[?25l[52;149H~@k[14;52H[52;149H   [14;51H[9;1H(
  [46m([14;51H)[m)[52;163H1[14;51H[?25h[?25l[52;149H~@k[14;51H[52;149H   [14;50H[10;3H([14;5H[46m([44C)[m)[52;163H0[14;50H[?25h[?25l[52;149H~@k[14;50H[52;149H   [14;49H    ([5C[46m([37C)[m)[52;162H49[14;49H[?25h[?25l[52;149H~@k[14;49H[52;149H   [14;48H[14;11H([14C[46m([21C)[m)[52;163H8[14;48H[?25h[?25l[52;149H~@k[14;48H[52;149H   [14;47H[14;26H([13C[46m([6C)[m)[52;163H7[14;47H[?25h[?25l[52;149H~@k[14;47H[52;149H   [14;46H([6C)[52;163H6[14;46H[?25h[?25l[52;149H~@k[14;46H[52;149H   [14;45H[52;163H5[14;45H[?25h[?25l[52;149H~@k[14;45H[52;149H   [14;44H[52;163H4[14;44H[?25h[?25l[52;149H~@k[14;44H[52;149H   [14;43H[52;163H3[14;43H[?25h[?25l[52;149H~@k[14;43H[52;149H   [14;42H[52;163H2[14;42H[?25h[?25l[52;149H~@k[14;42H[52;149H   [14;41H[52;163H1[14;41H[?25h[?25l[52;149H~@k[14;41H[52;149H   [14;40H[46m([6C)[m[52;163H0[14;40H[?25h[?25l[52;149H~@k[14;40H[52;149H   [14;39H ([6C)[52;162H39[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [14;38H[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;37H[52;163H7[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;36H[52;163H6[14;36H[?25h[?25l[52;149H~@k[14;36H[52;149H   [14;35H[52;163H5[14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [14;34H[52;163H4[14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H   [14;33H[52;163H3[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [13;33H[52;160H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;32H[46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;31H ([20C)[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;30H[13;9H[46m([20C)[m[52;163H0[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [14;30H[13;9H([20C)[52;160H4[14;30H[?25h[?25l[52;149H~@k[14;30H[52;149H   [14;29H[52;162H29[14;29H[?25h[?25l[52;149H~@k[14;29H[52;149H   [14;28H[52;163H8[14;28H[?25h[?25l[52;149H~@k[14;28H[52;149H   [14;27H[52;163H7[14;27H[?25h[?25l[52;149H~@k[14;27H[52;149H   [14;26H[46m([21C)[m[52;163H6[14;26H[?25h[?25l[52;149H~@k[14;26H[52;149H   [14;27H([21C)[52;163H7[14;27H[?25h[?25l[52;149H~@k[14;27H[52;149H   [14;26H[46m([21C)[m[52;163H6[14;26H[?25h[?25l[52;149Hi[14;26H[52;149H [14;26H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,26[9CTop[14;26H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;52H[K[14;25H[46m([ms[20C[46m)[m)[52;163H5[14;25H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;51H[K[14;24H[46m([ms[20C[46m)[m)[52;163H4[14;24H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;50H[K[14;23H[46m([ms[20C[46m)[m)[52;163H3[14;23H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;49H[K[14;22H[46m([ms[20C[46m)[m)[52;163H2[14;22H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;48H[K[14;21H[46m([ms[20C[46m)[m)[52;163H1[14;21H[?25h[?25lca([46ms[mums-lengths ([1m[96mcdr[m ls)[14;47H[K[14;20H[46m([ms[20C[46m)[m)[52;163H0[14;20H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;46H[K[14;19H[46m([ms[20C[46m)[m)[52;162H19[14;19H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;45H[K[14;18H[46m([ms[20C[46m)[m)[52;163H8[14;18H[?25h[?25l[46ms[mums-lengths ([1m[96mcdr[m ls)[14;44H[K[14;17H[46m([ms[20C[46m)[m)[52;163H7[14;17H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;43H[K[14;16H[46m([ms[20C[46m)[m)[52;163H6[14;16H[?25h[?25lcon([46ms[mums-lengths ([1m[96mcdr[m ls)[14;42H[K[14;15H[46m([ms[20C[46m)[m)[52;163H5[14;15H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;41H[K[14;14H[46m([ms[20C[46m)[m)[52;163H4[14;14H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;40H[K[14;13H[46m([ms[20C[46m)[m)[52;163H3[14;13H[?25h[?25l([46ms[mums-lengths ([1m[96mcdr[m ls)[14;39H[K[14;12H[46m([ms[20C[46m)[m)[52;163H2[14;12H[?25h[?25l[46ms[mums-lengths ([1m[96mcdr[m ls)[14;38H[K[14;11H[46m([ms[20C[46m)[m)[52;163H1[14;11H[?25h[?25l[52;163H2[14;12H[?25h[?25l([21C)[52;163H3[14;13H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H5[14;15H[?25h[?25l[52;163H6[14;16H[?25h[?25l[52;163H7[14;17H[?25h[?25l[52;163H8[14;18H[?25h[?25l[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25l[52;163H4[14;24H[?25h[?25l [46m([6C)[m[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l([6C)[52;163H7[14;27H[?25h[?25l[52;163H8[14;28H[?25h[?25l[52;163H9[14;29H[?25h[?25l[52;162H30[14;30H[?25h[?25l[52;163H1[14;31H[?25h[?25l[46m([6C)[m[52;163H2[14;32H[?25h[?25l[14;11H[46m([m[13C([6C)[46m)[m[52;163H3[14;33H[?25h[?25l    [46m([m[5C([21C)[46m)[m[52;163H4[14;34H[?25h[?25l[14;37H[K[14;5H([5C[46m([21C)[m)[52;163H3[14;33H[?25h[?25l    [46m([m[5C([21C)[46m)[m[52;163H4[14;34H[?25h[?25l[10;3H[46m([m[14;5H([28C)[46m)[m[52;163H5[14;35H[?25h[?25l[9;1H[46m([m
  ([14;35H)[46m)[m[52;163H6[14;36H[?25h[?25l[52;163H7[14;37H[?25h[?25l[52;163H6[14;36H[?25h[?25l[9;1H([14;36H)[52;160H3[13;36H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[52;1H[K[13;33H[?25l[52;149H^[[13;33H[52;149H  [13;34H[52;159H13,33[9CTop[13;33H[?25h[?25l[52;149H:[13;33H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2687B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:14:11: sums-lengths: unbound identifier
  in: sums-lengths
  location...:
   lab5-sol.scm:14:11
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2687B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sums-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,33[9CTop[13;33H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sums-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,33[9CTop"lab5-sol.scm" 92L, 2687B[13;33H[?25h[?25l[52;162H18[13;18H[?25h[?25l[52;162H25[13;25H[?25h[?25l[14;25H[46m([6C)[m[52;160H4[14;25H[?25h[?25l([6C)[52;160H3,11[13;11H[?25h[?25l[52;160H5,1-8[15;8H[?25h[?25l[14;5H[46m([28C)[m[52;160H4,34 [14;34H[?25h[?25l[9;1H[46m([m[14;5H([28C))[46m)[m[52;163H6[14;36H[?25h[?25l[9;1H([14;36H)[52;162H15[14;15H[?25h[?25l[10C[46m([6C)[m[52;162H32[14;32H[?25h[?25l[9;1H[46m([m[14;25H([6C))))[46m)[m[52;163H6[14;36H[?25h[?25l[9;1H([14;36H)[52;162H29[14;29H[?25h[?25l[52;162H16[14;16H[?25h[?25l[52;149H~@k[14;16H[52;149H   [14;15H[52;163H5[14;15H[?25h[?25l[52;149H~@k[14;15H[52;149H   [14;16H[52;163H6[14;16H[?25h[?25l[52;149Hi[14;16H[52;149H [14;16H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,16[9CTop[14;16H[?25h[?25l-lengths ([1m[96mcdr[m ls)[14;36H[K[52;163H5[14;15H[?25h[52;1H[K[14;14H[?25l[52;149H^[[14;14H[52;149H  [14;15H[52;159H14,14[9CTop[14;14H[?25h[?25l[52;149H:[14;14H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2686B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2686B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,14[9CTop[14;14H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,14[9CTop"lab5-sol.scm" 92L, 2686B[14;14H[?25h[?25l[46m([20C)[m[52;163H1[14;11H[?25h[?25l[52;149Hi[14;11H[52;149H [14;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,11[9CTop[14;11H[?25h[?25l[46mc[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;11Hc[46m([m[19C)[46m)[m[52;163H2[14;12H[?25h[?25l[46mo[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;12Ho[46m([m[19C)[46m)[m[52;163H3[14;13H[?25h[?25l[46mn[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;13Hn[46m([m[19C)[46m)[m[52;163H4[14;14H[?25h[?25l[1m[96mcon[m[1m[96m[46ms[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;14H[1m[96ms[m[46m([m[19C)[46m)[m[52;163H5[14;15H[?25h[?25lcon([46ms[mum-lengths ([1m[96mcdr[m ls)[14;39H[K[14;14H[46m([ms[19C[46m)[m)[52;163H4[14;14H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;38H[K[14;13H[46m([ms[19C[46m)[m)[52;163H3[14;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;37H[K[14;12H[46m([ms[19C[46m)[m)[52;163H2[14;12H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;36H[K[14;11H[46m([ms[19C[46m)[m)[52;163H1[14;11H[?25h[?25l[1C(sum-lengths ([1m[96mcdr[m ls[4C)[14;11H([46m([m[19C)[46m)[m[52;163H2[14;12H[?25h[?25l[46mc[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;12Hc[46m([m[19C)[46m)[m[52;163H3[14;13H[?25h[?25l[46mo[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;13Ho[46m([m[19C)[46m)[m[52;163H4[14;14H[?25h[?25l[46mn[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;14Hn[46m([m[19C)[46m)[m[52;163H5[14;15H[?25h[?25l[1m[96mcon[m[1m[96m[46ms[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;15H[1m[96ms[m[46m([m[19C)[46m)[m[52;163H6[14;16H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls[4C)[14;16H [46m([m[19C)[46m)[m[52;163H7[14;17H[?25h[?25l[1C(sum-lengths ([1m[96mcdr[m ls[4C)[14;17H([46m([m[19C)[46m)[m[52;163H8[14;18H[?25h[?25l[46m)[m(sum-lengths ([1m[96mcdr[m ls[4C)[14;18H)[46m([m[19C)[46m)[m[52;163H9[14;19H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls[4C)[14;19H [46m([m[19C)[46m)[m[52;162H20[14;20H[?25h[?25l[46m()[m ([20C)[52;162H19[14;19H[?25h[?25l[52;163H8[14;18H[?25h[?25l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;18Hs[46m)[m[52;163H9[14;19H[?25h[?25l[46mu[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;19Hu[46m)[m[52;162H20[14;20H[?25h[?25l[46mm[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;20Hm[46m)[m[52;163H1[14;21H[?25h[?25l[46me[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;21He[46m)[m[52;163H2[14;22H[?25h[?25l)[46m [m(sum-lengths ([1m[96mcdr[m ls)[14;48H[K[14;21H[46m)[m [52;163H1[14;21H[?25h[?25l[46m-[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;21H-[46m)[m[52;163H2[14;22H[?25h[?25l[46ml[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;22Hl[46m)[m[52;163H3[14;23H[?25h[?25l[46me[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;23He[46m)[m[52;163H4[14;24H[?25h[?25l[46mn[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;24Hn[46m)[m[52;163H5[14;25H[?25h[?25l[46mg[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;25Hg[46m)[m[52;163H6[14;26H[?25h[?25l[46mt[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;26Ht[46m)[m[52;163H7[14;27H[?25h[?25l[46mh[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;27Hh[46m)[m[52;163H8[14;28H[?25h[?25l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;28Hs[46m)[m[52;163H9[14;29H[?25h[?25l[46m [m) (sum-lengths ([1m[96mcdr[m ls)))))[14;29H [46m)[m[52;162H30[14;30H[?25h[?25l[46m([m) (sum-lengths ([1m[96mcdr[m ls)))))[14;17H([13C[46m)[m[52;163H1[14;31H[?25h[?25l[46mc[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;31Hc[46m)[m[52;163H2[14;32H[?25h[?25l[46ma[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;32Ha[46m)[m[52;163H3[14;33H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;33H[1m[96mr[m[46m)[m[52;163H4[14;34H[?25h[?25l[46m [m) (sum-lengths ([1m[96mcdr[m ls)))))[14;34H [46m)[m[52;163H5[14;35H[?25h[?25l[46ml[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;35Hl[46m)[m[52;163H6[14;36H[?25h[?25l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[14;36Hs[46m)[m[52;163H7[14;37H[?25h[?25l[1C) (sum-lengths ([1m[96mcdr[m ls)))))[14;17H[46m([m[12C([6C)[46m)[m[52;163H8[14;38H[?25h[?25l[52;163H9[14;39H[?25h[?25l[14;17H([20C)[52;160H3[13;39H[?25h[52;1H[K[13;38H[?25l[52;149H^[[13;38H[52;149H  [13;39H[52;159H13,38[9CTop[13;38H[?25h[?25l[52;149H:[13;38H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2715B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:9:0: read-syntax: expected a `)` to close `(`
  possible cause: indentation suggests a missing `)` before line 17
  context...:
   /usr/share/racket/collects/syntax/module-reader.rkt:186:17: body
   /usr/share/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal
   /usr/share/racket/collects/racket/../syntax/module-reader.rkt:65:9: lang:read-syntax
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2715B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mcons[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,38[9CTop[13;38H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mcons[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,38[9CTop"lab5-sol.scm" 92L, 2715B[13;38H[?25h[?25l[14;30H[46m([6C)[m[52;160H4,37[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;38H[14;17H[46m([m[12C([6C)[46m)[m[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;39H[14;17H([20C)[52;163H9[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [14;40H[46m([20C)[m[52;162H40[14;40H[?25h[?25l[52;149H~@k[14;40H[52;149H   [14;41H([20C)[52;163H1[14;41H[?25h[?25l[52;149H~@k[14;41H[52;149H   [14;42H[52;163H2[14;42H[?25h[?25l[52;149H~@k[14;42H[52;149H   [14;43H[52;163H3[14;43H[?25h[?25l[52;149H~@k[14;43H[52;149H   [14;44H[52;163H4[14;44H[?25h[?25l[52;149H~@k[14;44H[52;149H   [14;45H[52;163H5[14;45H[?25h[?25l[52;149H~@k[14;45H[52;149H   [14;46H[52;163H6[14;46H[?25h[?25l[52;149H~@k[14;46H[52;149H   [14;47H[52;163H7[14;47H[?25h[?25l[52;149H~@k[14;47H[52;149H   [14;48H[52;163H8[14;48H[?25h[?25l[52;149H~@k[14;48H[52;149H   [14;49H[52;163H9[14;49H[?25h[?25l[52;149H~@k[14;49H[52;149H   [14;50H[52;162H50[14;50H[?25h[?25l[52;149H~@k[14;50H[52;149H   [14;51H[52;163H1[14;51H[?25h[?25l[52;149H~@k[14;51H[52;149H   [14;52H[52;163H2[14;52H[?25h[?25l[52;149H~@k[14;52H[52;149H   [14;53H[46m([6C)[m[52;163H3[14;53H[?25h[?25l[52;149H~@k[14;53H[52;149H   [14;54H([6C)[52;163H4[14;54H[?25h[?25l[52;149H~@k[14;54H[52;149H   [14;55H[52;163H5[14;55H[?25h[?25l[52;149H~@k[14;55H[52;149H   [14;56H[52;163H6[14;56H[?25h[?25l[52;149H~@k[14;56H[52;149H   [14;57H[52;163H7[14;57H[?25h[?25l[52;149H~@k[14;57H[52;149H   [14;58H[52;163H8[14;58H[?25h[?25l[52;149H~@k[14;58H[52;149H   [14;59H[52;163H9[14;59H[?25h[?25l[52;149H~@k[14;59H[52;149H   [14;60H[14;53H[46m([6C)[m[52;162H60[14;60H[?25h[?25l[52;149H~@k[14;60H[52;149H   [14;61H[14;40H[46m([m[12C([6C)[46m)[m[52;163H1[14;61H[?25h[?25l[52;149H~@k[14;61H[52;149H   [14;62H[14;11H[46m([m[28C([20C)[46m)[m[52;163H2[14;62H[?25h[?25l[52;149H~@k[14;62H[52;149H   [14;63H    [46m([m[5C([50C)[46m)[m[52;163H3[14;63H[?25h[?25l[52;149H~@k[14;63H[52;149H   [14;64H[10;3H[46m([m[14;5H([57C)[46m)[m[52;163H4[14;64H[?25h[?25l[52;149H~@k[14;64H[52;149H   [14;64H[?25h[?25l[52;149Hi[14;64H[52;149H [14;64H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,64[9CTop[14;64H[?25h[?25l[1C)[9;1H[46m([m
  ([14;64H)[46m)[m[52;163H5[14;65H[?25h[52;1H[K[14;64H[?25l[52;149H^[[14;64H[52;149H  [14;65H[9;1H(
  [46m([14;64H)[m)[52;159H14,64[9CTop[14;64H[?25h[?25l[52;149H:[14;64H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2716B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     '(0 0 . 0)
expected:   0
--------------------
car: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2716B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  [106m([m[38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mcons[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))[106m)[m)


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,64[9CTop[14;64H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  [46m([m[93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mcons[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[46m)[m)


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,64[9CTop"lab5-sol.scm" 92L, 2716B[14;64H[?25h[?25l[10;3H([14;64H)[52;162H3[14;34H[?25h[?25l[52;163H9[14;39H[?25h[?25l[14;17H[46m([20C)[m[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;37H[14;17H([12C[46m([6C)[m)[52;163H7[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;36H([6C)[52;163H6[14;36H[?25h[?25l[52;149H~@k[14;36H[52;149H   [14;37H[14;30H[46m([6C)[m[52;163H7[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;38H[14;17H[46m([m[12C([6C)[46m)[m[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;39H[14;17H([20C)[52;163H9[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [14;40H[46m([20C)[m[52;162H40[14;40H[?25h[?25l[52;149H~@k[14;40H[52;149H   [14;39H ([20C)[52;162H39[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [14;38H[14;17H[46m([20C)[m[52;163H8[14;38H[?25h[?25l[52;149H~@k[14;38H[52;149H   [14;37H[14;17H([12C[46m([6C)[m)[52;163H7[14;37H[?25h[?25l[52;149H~@k[14;37H[52;149H   [14;36H([6C)[52;163H6[14;36H[?25h[?25l[52;149H~@k[14;36H[52;149H   [14;35H[52;163H5[14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [14;34H[52;163H4[14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H   [14;33H[52;163H3[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [14;32H[52;163H2[14;32H[?25h[?25l[52;149H~@k[14;32H[52;149H   [14;31H[52;163H1[14;31H[?25h[?25l[52;149H~@k[14;31H[52;149H   [14;30H[46m([6C)[m[52;163H0[14;30H[?25h[?25l[52;149H~@k[14;30H[52;149H   [14;29H ([6C)[52;162H29[14;29H[?25h[?25l[52;149H~@k[14;29H[52;149H   [14;28H[52;163H8[14;28H[?25h[?25l[52;149H~@k[14;28H[52;149H   [14;27H[52;163H7[14;27H[?25h[?25l[52;149H~@k[14;27H[52;149H   [14;26H[52;163H6[14;26H[?25h[?25l[52;149H~@k[14;26H[52;149H   [14;25H[52;163H5[14;25H[?25h[?25l[52;149H~@k[14;25H[52;149H   [14;24H[52;163H4[14;24H[?25h[?25l[52;149H~@k[14;24H[52;149H   [14;23H[52;163H3[14;23H[?25h[?25l[52;149H~@k[14;23H[52;149H   [14;22H[52;163H2[14;22H[?25h[?25l[52;149H~@k[14;22H[52;149H   [14;21H[52;163H1[14;21H[?25h[?25l[52;149H~@k[14;21H[52;149H   [14;20H[52;163H0[14;20H[?25h[?25l[52;149H~@k[14;20H[52;149H   [14;19H[52;162H19[14;19H[?25h[?25l[52;149H~@k[14;19H[52;149H   [14;18H[52;163H8[14;18H[?25h[?25l[52;149H~@k[14;18H[52;149H   [14;17H[46m([20C)[m[52;163H7[14;17H[?25h[?25l[52;149H~@k[14;17H[52;149H   [14;16H ([20C)[52;163H6[14;16H[?25h[?25l[52;149H~@k[14;16H[52;149H   [14;17H[46m([20C)[m[52;163H7[14;17H[?25h[?25l[52;149H~@k[14;17H[52;149H   [14;16H ([20C)[52;163H6[14;16H[?25h[?25l[52;149Hi[14;16H[52;149H [14;16H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,16[9CTop[14;16H[?25h[?25lcon (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;65H[K[52;163H5[14;15H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;64H[K[52;163H4[14;14H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;63H[K[52;163H3[14;13H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;62H[K[14;11H[46m([46C)[m[52;163H2[14;12H[?25h[?25la (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls[5C)[14;11H([46C)[52;163H3[14;13H[?25h[?25lp (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H4[14;14H[?25h[?25lp (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H5[14;15H[?25h[?25le (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H6[14;16H[?25h[?25ln (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H7[14;17H[?25h[?25l[1m[96mappend[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H8[14;18H[?25h[52;1H[K[14;17H[?25l[52;149H^[[14;17H[52;149H  [14;18H[52;159H14,17[9CTop[14;17H[?25h[?25l[52;149H:[14;17H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2718B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lappend: contract violation
  expected: list?
  given: 0
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2718B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mappend[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,17[9CTop[14;17H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mappend[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,17[9CTop"lab5-sol.scm" 92L, 2718B[14;17H[?25h[?25l[2C[46m([20C)[m[52;163H9[14;19H[?25h[?25l([20C)[52;163H8[14;18H[?25h[?25l[52;149Hi[14;18H[52;149H [14;18H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,18[9CTop[14;18H[?25h[?25lappen (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;67H[K[52;163H7[14;17H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;66H[K[52;163H6[14;16H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;65H[K[52;163H5[14;15H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;64H[K[52;163H4[14;14H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;63H[K[52;163H3[14;13H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[14;62H[K[14;11H[46m([46C)[m[52;163H2[14;12H[?25h[?25ll (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls[5C)[14;11H([46C)[52;163H3[14;13H[?25h[?25li (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H4[14;14H[?25h[?25ls (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H5[14;15H[?25h[?25l[1m[96mlist[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))[52;163H6[14;16H[?25h[52;1H[K[14;15H[?25l[52;149H^[[14;15H[52;149H  [14;16H[52;159H14,15[9CTop[14;15H[?25h[?25l[52;149H:[14;15H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2716B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     '(0 (0 0))
expected:   0
--------------------
car: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2716B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36mlist[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,15[9CTop[14;15H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96mlist[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,15[9CTop"lab5-sol.scm" 92L, 2716B[14;15H[?25h[?25l[52;162H29[14;29H[?25h[?25l    [46m([57C)[m[52;162H5 [14;5H[?25h[?25l[52;149H2[14;6H[48;5;242m([m[57C)[52;1H[1m-- VISUAL --[m[52;13H[K[52;149H2[14;6H[52;159H14,6[10CTop[14;6H[?25h[?25l[52;149H5[14;9H[93m[48;5;242mels[m[52;162H9[14;9H[?25h[?25l[52;149H8[14;12H[93m[48;5;242me[m[48;5;242m ([m[52;162H12[14;12H[?25h[?25l[52;149H14[14;18H[1m[96m[48;5;242mlist[m[48;5;242m ([m[52;163H8[14;18H[?25h[?25l[52;149H21[14;25H[14;18H[48;5;242msum-len[m[52;162H25[14;25H[?25h[?25l[52;150H6[14;30H[48;5;242mgths [m[46m([6C)[m[52;162H30[14;30H[?25h[?25l[52;150H9[14;33H[48;5;242m([m[1m[96m[48;5;242mca[m[1m[96mr[m ls)[52;163H3[14;33H[?25h[?25l[52;149H33[14;37H[1m[96m[48;5;242mr[m[48;5;242m ls[m[46m)[m[52;163H7[14;37H[?25h[?25l[52;150H6[14;40H[48;5;242m)) [m[46m([20C)[m[52;162H40[14;40H[?25h[?25l[52;150H8[14;42H[48;5;242m(s[m[19C)[52;163H2[14;42H[?25h[?25l[52;150H9[14;43H[48;5;242mu[m[52;163H3[14;43H[?25h[?25l[52;149H40[14;44H[48;5;242mm[m[52;163H4[14;44H[?25h[?25l[52;150H1[14;45H[48;5;242m-[m[52;163H5[14;45H[?25h[?25l[52;150H3[14;47H[48;5;242mle[m[52;163H7[14;47H[?25h[?25l[52;150H5[14;49H[48;5;242mng[m[52;163H9[14;49H[?25h[?25l[52;150H7[14;51H[48;5;242mth[m[52;162H51[14;51H[?25h[?25l[52;150H9[14;53H[48;5;242ms [m[46m([6C)[m[52;163H3[14;53H[?25h[?25l[52;149H52[14;56H[48;5;242m([m[1m[96m[48;5;242mcd[m[1m[96mr[m ls)[52;163H6[14;56H[?25h[?25l[52;150H5[14;59H[1m[96m[48;5;242mr[m[48;5;242m l[m[52;163H9[14;59H[?25h[?25l[52;150H9[14;63H[48;5;242ms)))[m[46m)[m[52;162H63[14;63H[?25h[?25l[52;149H60[14;64H[10;3H[46m([m[14;63H[48;5;242m)[m[46m)[m[52;163H4[14;64H[?25h[?25l[52;150H1[14;65H[9;1H[46m([m
  ([14;64H[48;5;242m)[m[46m)[m[52;163H5[14;65H[?25h[?25l[52;150H2[14;66H[9;1H([14;65H[48;5;242m)[m[52;163H6[14;66H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[52;150H1[14;65H[9;1H[46m([14;65H)[m[52;163H5[14;65H[?25h[?25l[?25h[?25l[52;149Hc [14;65H[52;149H [14;5H[52;4H[1mINSERT [m[52;159H[K[52;159H14,5[10CTop[14;5H[K[9;1H([14;5H[?25h[?25l[52;162H4[14;4H[?25h[?25l[52;162H3[14;3H[?25h[?25l[52;162H2[14;2H[?25h[?25l[52;162H1[14;1H[?25h[?25l[13;51r[51;1H
[1;52r[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[51;9H[38;5;224m'()[m[52;159H[K[52;159H13,56[9CTop[12;5H[46m([13;55H)[?25h[?25l[m[12;5H([13;55H)[52;160H2,23[12;23H[?25h[?25l[11;5H[46m([12C)[m[52;160H1,19[11;19H[?25h[?25l    ([12C)[52;160H2,23[12;23H[?25h[?25l[52;160H0,3 [10;3H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[10;4H[52;159H10,4[10CTop[10;4H[48;5;242m([?25h[?25l
[m    [10;4H[93m[48;5;242mcond[m[48;5;242m  
    [m[46m([12C)[m[52;160H1,5[11;5H[?25h[?25l[2C[48;5;242m(([m[11C)[52;162H7[11;7H[?25h[?25l[1C[1m[96m[48;5;242mn[m[1m[96mull?[m [52;162H8[11;8H[?25h[?25l[2C[1m[96m[48;5;242mul[m[1m[96ml?[m [52;162H10[11;10H[?25h[?25l[1C[1m[96m[48;5;242ml[m[1m[96m?[m [52;163H1[11;11H[?25h[?25l[2C[1m[96m[48;5;242m?[m[48;5;242m [m[52;163H3[11;13H[?25h[?25ll[48;5;242ml[m[52;163H4[11;14H[?25h[?25ls[48;5;242ms[m[46m)[m[52;163H5[11;15H[?25h[?25l[1C[48;5;242m)[m[52;163H6[11;16H[?25h[?25l [48;5;242m [m[52;163H7[11;17H[?25h[?25l[1C[95m[48;5;242m0[m[46m)[m[52;163H8[11;18H[?25h[?25l[1C[48;5;242m)[m[52;163H9[11;19H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[52;149H3[12;22H[11;19H[48;5;242m 
    (([m[1m[96m[48;5;242mpair?[m[48;5;242m ([m[1m[96m[48;5;242mcar[m[48;5;242m ls))[m[52;160H2,22[12;22H[?25h[?25l[46m)[m[52;163H1[12;21H[?25h[?25l[46m)[m)[52;163H0[12;20H[?25h[?25l[?25h[?25l[52;149H [11;6H[52;4H[1mINSERTt --[m[52;13H[K[52;159H11,6[10CTop[10;3H([93mcond[m [10;9H[K[11;1H    (([1m[96mnull?[m ls) [95m0[m)[11;19H[K[12;1H    (([1m[96mpair?[m [46m([m[1m[96mcar[m ls[11;6H[46m([8C)[m[12;13H([6C)[11;6H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[10;4H[52;159H10,4[10CTop[10;3H[48;5;242m([m[11;6H([8C)[10;4H[?25h[?25l[52;149H3[10;5H[93m[48;5;242mc[m[52;162H5[10;5H[?25h[?25l[52;149H2[11;6H[10;5H[93m[48;5;242mond[m[48;5;242m  
    ([m[46m([8C)[m[52;160H1,6[11;6H[?25h[?25l[2C[48;5;242m([m[1m[96m[48;5;242mn[m[1m[96mull?[m ls)[52;162H8[11;8H[?25h[?25l[4C[1m[96m[48;5;242mull?[m [52;162H12[11;12H[?25h[?25l l[48;5;242m l[m[52;163H4[11;14H[?25h[?25l[52;149H3[12;16H[11;14H[48;5;242ms) [m[95m[48;5;242m0[m[48;5;242m) 
    (([m[1m[96m[48;5;242mpair?[m[48;5;242m ([m[1m[96m[48;5;242mca[m[1m[96mr[m [52;160H2,16[12;16H[?25h[?25l[2C[1m[96m[48;5;242mr[m[48;5;242m [m[52;163H8[12;18H[?25h[?25lls)[48;5;242mls)[m[46m)[m[52;162H21[12;21H[?25h[?25l[1C[48;5;242m)[m[52;163H2[12;22H[?25h[?25l[52;149H4[13;24H[12;22H[48;5;242m  
     ([m[1m[96m[48;5;242m+[m[48;5;242m (sum-lengths ([m[1m[96m[48;5;242mc[m[1m[96mar[m [52;160H3,24[13;24H[?25h[?25l[1C[1m[96m[48;5;242ma[m[1m[96mr[m [52;163H5[13;25H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;163H6[13;26H[?25h[?25l [48;5;242m [m[52;163H7[13;27H[?25h[?25ll[48;5;242ml[m[52;163H8[13;28H[?25h[?25ls)[48;5;242ms)[m[46m)[m[52;162H30[13;30H[?25h[?25l[2C[48;5;242m) [m[46m([20C)[m[52;163H2[13;32H[?25h[?25l[2C[48;5;242m(s[m[19C)[52;163H4[13;34H[?25h[?25lum[48;5;242mum[m[52;163H6[13;36H[?25h[?25l-[48;5;242m-[m[52;163H7[13;37H[?25h[?25l[52;149H3[12;23H[12;23H[K[13;1H     ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-[52;160H2,23[12;23H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[52;149H4[13;46H[12;23H[48;5;242m 
     ([m[1m[96m[48;5;242m+[m[48;5;242m (sum-lengths ([m[1m[96m[48;5;242mcar[m[48;5;242m ls)) (sum-lengths ([m[52;160H3,46[13;46H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mdr[m [52;163H7[13;47H[?25h[?25l[1C[1m[96m[48;5;242md[m[1m[96mr[m [52;163H8[13;48H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;163H9[13;49H[?25h[?25l [48;5;242m [m[52;162H50[13;50H[?25h[?25ll[48;5;242ml[m[52;163H1[13;51H[?25h[?25ls))))[48;5;242ms))))[m[52;163H6[13;56H[?25h[?25l[46m)[m[52;163H5[13;55H[?25h[?25l[46m)[m)[52;163H4[13;54H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H5[13;55H[?25h[?25l[?25h[?25l[52;149Hc[13;55H[52;1H3 fewer lines[1mI[m[52;14H[K[10;3H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H10,3[10CTop[10;51r[10;1H[3M[1;52r[10;1H  [10;3H[K[49;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[50;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H10,3[10CTop[10;3H[?25h[?25l([52;162H4[10;4H[?25h[?25li[52;162H5[10;5H[?25h[?25l[93mif[m[52;162H6[10;6H[?25h[?25l[52;162H7[10;7H[?25h[?25lp[52;162H8[10;8H[?25h[?25la[52;162H9[10;9H[?25h[?25lr[52;162H10[10;10H[?25h[?25l[10;9H[K[52;162H9 [10;9H[?25h[?25l[10;8H[K[52;162H8[10;8H[?25h[?25l[10;7H[K[52;162H7[10;7H[?25h[?25l([52;162H8[10;8H[?25h[?25lp[52;162H9[10;9H[?25h[?25la[52;162H10[10;10H[?25h[?25li[52;163H1[10;11H[?25h[?25lr[52;163H2[10;12H[?25h[?25l[1m[96mpair?[m[52;163H3[10;13H[?25h[?25l[52;163H4[10;14H[?25h[?25lc[52;163H5[10;15H[?25h[?25la[52;163H6[10;16H[?25h[?25l[1m[96mcar[m[52;163H7[10;17H[?25h[?25lca[10;16H[K[52;163H6[10;16H[?25h[?25l[10;15H[K[52;163H5[10;15H[?25h[?25l[10;14H[K[52;163H4[10;14H[?25h[?25l([52;163H5[10;15H[?25h[?25lc[52;163H6[10;16H[?25h[?25la[52;163H7[10;17H[?25h[?25l[1m[96mcar[m[52;163H8[10;18H[?25h[?25l[52;163H9[10;19H[?25h[?25ll[52;162H20[10;20H[?25h[?25ls[52;163H1[10;21H[?25h[?25l)[10;14H[46m([6C)[m[52;163H2[10;22H[?25h[?25l[10;14H([6C)[52;159H9,22 [9;22H[?25h[?25l[10;14H[46m([6C)[m[52;159H10,22[10;22H[?25h[?25l[52;163H1[10;21H[?25h[?25l[10;14H([6C)[52;163H0[10;20H[?25h[?25l[52;162H19[10;19H[?25h[?25l[52;163H8[10;18H[?25h[?25l[52;163H7[10;17H[?25h[?25l[52;163H8[10;18H[?25h[?25l[52;163H9[10;19H[?25h[?25l[52;162H20[10;20H[?25h[?25l[46m([6C)[m[52;163H1[10;21H[?25h[?25l[52;163H2[10;22H[?25h[?25l[52;163H1[10;21H[?25h[?25l[10;14H([6C)[52;163H0[10;20H[?25h[?25l[52;162H19[10;19H[?25h[?25l[52;162H20[10;20H[?25h[?25l[46m([6C)[m[52;163H1[10;21H[?25h[?25l[52;163H2[10;22H[?25h[?25l[10;21H[K[10;14H([52;163H1[10;21H[?25h[?25l[10;20H[K[52;163H0[10;20H[?25h[?25l[10;19H[K[52;162H19[10;19H[?25h[?25l[52;163H8[10;18H[?25h[?25lca[10;17H[K[52;163H7[10;17H[?25h[?25l[10;16H[K[52;163H6[10;16H[?25h[?25l[10;15H[K[52;163H5[10;15H[?25h[?25l[10;14H[K[52;163H4[10;14H[?25h[?25l[52;163H3[10;13H[?25h[?25lpair[10;12H[K[52;163H2[10;12H[?25h[?25l[10;11H[K[52;163H1[10;11H[?25h[?25l[10;10H[K[52;163H0[10;10H[?25h[?25l[10;9H[K[52;162H9 [10;9H[?25h[?25l[10;8H[K[52;162H8[10;8H[?25h[?25ln[52;162H9[10;9H[?25h[?25lu[52;162H10[10;10H[?25h[?25ll[52;163H1[10;11H[?25h[?25ll[52;163H2[10;12H[?25h[?25l[1m[96mnull?[m[52;163H3[10;13H[?25h[?25l[52;163H4[10;14H[?25h[?25ll[52;163H5[10;15H[?25h[?25ls[52;163H6[10;16H[?25h[?25l)[10;7H[46m([8C)[m[52;163H7[10;17H[?25h[?25l[10;7H([8C)[52;163H8[10;18H[?25h[?25l[95m0[m[52;163H9[10;19H[?25h[?25l)  [46m([15C)[m[52;162H20[10;20H[?25h[?25l[11;51r[11;1H[L[1;52r[52;159H[K[52;159H11,3[10CTop[10;3H([15C)
  [?25h[?25li[52;162H4[11;4H[?25h[?25l[93mif[m[52;162H5[11;5H[?25h[?25l[52;162H6[11;6H[?25h[?25l[52;162H5[11;5H[?25h[?25li[11;4H[K[52;162H4[11;4H[?25h[?25l[11;3H[K[52;162H3[11;3H[?25h[?25l([52;162H4[11;4H[?25h[?25li[52;162H5[11;5H[?25h[?25l[93mif[m[52;162H6[11;6H[?25h[?25l[52;162H7[11;7H[?25h[?25l([52;162H8[11;8H[?25h[?25lp[52;162H9[11;9H[?25h[?25la[52;162H10[11;10H[?25h[?25lr[52;163H1[11;11H[?25h[?25li[52;163H2[11;12H[?25h[?25l[11;11H[K[52;163H1[11;11H[?25h[?25l[11;10H[K[52;163H0[11;10H[?25h[?25li[52;163H1[11;11H[?25h[?25lr[52;163H2[11;12H[?25h[?25l[1m[96mpair?[m[52;163H3[11;13H[?25h[?25l[52;163H4[11;14H[?25h[?25lc[52;163H5[11;15H[?25h[?25la[52;163H6[11;16H[?25h[?25l[1m[96mcar[m[52;163H7[11;17H[?25h[?25lca[11;16H[K[52;163H6[11;16H[?25h[?25l[11;15H[K[52;163H5[11;15H[?25h[?25l[11;14H[K[52;163H4[11;14H[?25h[?25l([52;163H5[11;15H[?25h[?25lc[52;163H6[11;16H[?25h[?25la[52;163H7[11;17H[?25h[?25l[1m[96mcar[m[52;163H8[11;18H[?25h[?25l[52;163H9[11;19H[?25h[?25ll[52;162H20[11;20H[?25h[?25ls[52;163H1[11;21H[?25h[?25l)[11;14H[46m([6C)[m[52;163H2[11;22H[?25h[?25l[11;14H([6C)[52;163H3[11;23H[?25h[?25l[11;14H[46m([6C)[m[52;163H2[11;22H[?25h[?25l)[11;7H[46m([m[6C([6C)[46m)[m[52;163H3[11;23H[?25h[?25l[12;51r[12;1H[L[1;52r[52;159H[K[52;159H12,5[10CTop[11;7H([14C)
    [?25h[?25l([52;162H6[12;6H[?25h[?25l[1m[96m+[m[52;162H7[12;7H[?25h[?25l[52;162H8[12;8H[?25h[?25l[95m1[m[52;162H9[12;9H[?25h[?25l[52;162H10[12;10H[?25h[?25ls[52;163H1[12;11H[?25h[?25lu[52;163H2[12;12H[?25h[?25lm[52;163H3[12;13H[?25h[?25l-[52;163H4[12;14H[?25h[?25ll[52;163H5[12;15H[?25h[?25le[52;163H6[12;16H[?25h[?25ln[52;163H7[12;17H[?25h[?25lg[52;163H8[12;18H[?25h[?25lt[52;163H9[12;19H[?25h[?25lh[52;162H20[12;20H[?25h[?25ls[52;163H1[12;21H[?25h[?25l[52;163H0[12;20H[?25h[?25l[52;162H19[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H6[12;16H[?25h[?25l[52;163H5[12;15H[?25h[?25l[52;163H4[12;14H[?25h[?25l[52;163H3[12;13H[?25h[?25l[52;163H2[12;12H[?25h[?25l[52;163H1[12;11H[?25h[?25l[52;163H0[12;10H[?25h[?25l(sum-lengths[52;163H1[12;11H[?25h[?25l[52;160H3,2-9[13;9H[?25h[?25l[52;160H2,22 [12;22H[?25h[?25l[52;163H3[12;23H[?25h[?25l([52;163H4[12;24H[?25h[?25lc[52;163H5[12;25H[?25h[?25ld[52;163H6[12;26H[?25h[?25l[1m[96mcdr[m[52;163H7[12;27H[?25h[?25l[52;163H8[12;28H[?25h[?25l([52;163H9[12;29H[?25h[?25lc[52;162H30[12;30H[?25h[?25ld[52;163H1[12;31H[?25h[?25l[1m[96mcdr[m[52;163H2[12;32H[?25h[?25l[52;163H3[12;33H[?25h[?25ll[52;163H4[12;34H[?25h[?25ls[52;163H5[12;35H[?25h[?25l)[12;28H[46m([6C)[m[52;163H6[12;36H[?25h[?25l)[12;23H[46m([m[4C([6C)[46m)[m[52;163H7[12;37H[?25h[?25l[12;23H([12C)[52;163H2[12;32H[?25h[?25lcd ls)[12;36H[K[52;163H1[12;31H[?25h[?25l ls)[12;35H[K[52;163H0[12;30H[?25h[?25l ls)[12;34H[K[12;28H[46m([m ls[46m)[m[52;162H29[12;29H[?25h[?25lc l[46ms[m))[12;28H(c ls[52;162H30[12;30H[?25h[?25la ls))[52;163H1[12;31H[?25h[?25l[1m[96mcar[m ls))[52;163H2[12;32H[?25h[?25l[12;23H[46m([12C)[m[52;163H7[12;37H[?25h[?25l[12;23H([12C)[52;162H10[12;10H[?25h[?25l[18C[46m([6C)[m[52;162H28[12;28H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[12;36H[K[12;27H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H7[12;27H[?25h[?25lcd([1m[96m[46mc[m[1m[96mar[m ls)[12;35H[K[12;26H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H6[12;26H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[12;34H[K[12;25H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H5[12;25H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[12;33H[K[12;24H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H4[12;24H[?25h[?25l[46m([m([6C)[46m)[m[52;162H33[12;33H[?25h[?25l[52;163H2[12;32H[?25h[?25l[12;23H([46m([6C)[m)[52;163H1[12;31H[?25h[?25l[12;24H([6C)[52;163H0[12;30H[?25h[?25l[52;162H29[12;29H[?25h[?25l[52;163H8[12;28H[?25h[?25l[52;163H7[12;27H[?25h[?25l[52;163H6[12;26H[?25h[?25l[46m([6C)[m[52;163H5[12;25H[?25h[?25l[52;163H4[12;24H[?25h[?25l[1m[96m[46mc[m[1m[96mar[m ls)[12;32H[K[12;23H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H3[12;23H[?25h[?25l[52;163H4[12;24H[?25h[?25l([6C)[52;163H5[12;25H[?25h[?25l[52;163H6[12;26H[?25h[?25l[52;163H7[12;27H[?25h[?25l[52;163H8[12;28H[?25h[?25l[52;163H9[12;29H[?25h[?25l[46m([6C)[m[52;162H30[12;30H[?25h[?25l[12;10H[46m([m[12C([6C)[46m)[m[52;163H1[12;31H[?25h[?25l[52;163H2[12;32H[?25h[?25l[12;31H[K[12;10H([12C[46m([6C)[m[52;163H1[12;31H[?25h[?25l[12;23H([6C)[52;163H2[12;32H[?25h[?25l)[12;10H[46m([21C)[m[52;163H3[12;33H[?25h[?25l[52;163H2[12;32H[?25h[?25l)[12;32H[K[12;31H[46m)[m[52;163H1[12;31H[?25h[?25l[52;163H2[12;32H[?25h[?25l[12;10H([20C)[52;163H3[12;33H[?25h[?25l([52;163H4[12;34H[?25h[?25ls[52;163H5[12;35H[?25h[?25lu[52;163H6[12;36H[?25h[?25lm[52;163H7[12;37H[?25h[?25l-[52;163H8[12;38H[?25h[?25ll[52;163H9[12;39H[?25h[?25le[52;162H40[12;40H[?25h[?25ln[52;163H1[12;41H[?25h[?25lg[52;163H2[12;42H[?25h[?25lt[52;163H3[12;43H[?25h[?25lh[52;163H4[12;44H[?25h[?25ls[52;163H5[12;45H[?25h[?25l[52;163H6[12;46H[?25h[?25l([52;163H7[12;47H[?25h[?25lc[52;163H8[12;48H[?25h[?25ld[52;163H9[12;49H[?25h[?25l[1m[96mcdr[m[52;162H50[12;50H[?25h[?25l[52;163H1[12;51H[?25h[?25ll[52;163H2[12;52H[?25h[?25ls[52;163H3[12;53H[?25h[?25l)[12;46H[46m([6C)[m[52;163H4[12;54H[?25h[?25l)[12;33H[46m([m[12C([6C)[46m)[m[52;163H5[12;55H[?25h[?25l)    [46m([m[27C([20C)[46m)[m[52;163H6[12;56H[?25h[?25l[13;51r[13;1H[L[1;52r[52;159H[K[52;159H13,5[10CTop[12;5H([49C)
    [?25h[?25ls[52;162H6[13;6H[?25h[?25lu[52;162H7[13;7H[?25h[?25lm[52;162H8[13;8H[?25h[?25l-[52;162H9[13;9H[?25h[?25ll[52;162H10[13;10H[?25h[?25le[52;163H1[13;11H[?25h[?25ln[52;163H2[13;12H[?25h[?25lg[52;163H3[13;13H[?25h[?25lt[52;163H4[13;14H[?25h[?25lh[52;163H5[13;15H[?25h[?25ls[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l([52;163H8[13;18H[?25h[?25lc[52;163H9[13;19H[?25h[?25ld[52;162H20[13;20H[?25h[?25l[1m[96mcdr[m[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25lc[52;163H3[13;23H[?25h[?25la[52;163H4[13;24H[?25h[?25ld[52;163H5[13;25H[?25h[?25l[13;24H[K[52;163H4[13;24H[?25h[?25l[13;23H[K[52;163H3[13;23H[?25h[?25l[13;22H[K[52;163H2[13;22H[?25h[?25ll[52;163H3[13;23H[?25h[?25ls[52;163H4[13;24H[?25h[?25l)[13;17H[46m([6C)[m[52;163H5[13;25H[?25h[?25l)[11;3H[46m([m[13;17H([6C)[46m)[m[52;163H6[13;26H[?25h[?25l[11;3H([13;25H)[52;162H6 [13;6H[?25h[?25l[52;162H5[13;5H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls))    [46m([20C)[m[52;162H6[13;6H[?25h[?25l[52;162H27[13;27H[?25h[?25l)[11;3H[46m([m[13;5H([20C)[46m)[m[52;163H8[13;28H[?25h[?25l)[9;1H[46m([m

  ([13;27H)[46m)[m[52;163H9[13;29H[?25h[52;1H[K[13;28H[?25l[52;149H^[[13;28H[52;149H  [13;29H[52;159H13,28[9CTop[13;28H[?25h[?25l[52;149H:[13;28H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 91L, 2671B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:10:2: if: missing an "else" expression
  in: (if (null? ls) 0)
  location...:
   lab5-sol.scm:10:2
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 91L, 2671B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls) [31m0[m)
  ([38;5;130mif[m ([36mpair?[m ([36mcar[m ls))
    ([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))
    (sum-lengths ([36mcdr[m ls)))[106m)[m


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[51;9H[35m'()[m[52;159H13,28[9CTop[13;28H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls) [95m0[m)
  ([93mif[m ([1m[96mpair?[m ([1m[96mcar[m ls))
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))
    (sum-lengths ([1m[96mcdr[m ls)))[46m)[m


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[51;9H[38;5;224m'()[m[52;159H13,28[9CTop"lab5-sol.scm" 91L, 2671B[13;28H[?25h[?25l[9;1H(
  [46m([15C)[m[13;28H)[52;160H0,19[10;19H[?25h[?25l  ([15C)[52;160H1,4 [11;4H[?25h[?25l[3C[46m([14C)[m[52;162H7[11;7H[?25h[?25l([14C)[52;159H8,28[8;28H[?25h[?25l[9;9H[46m([14C)[m[52;159H9,24[9;24H[?25h[?25l[52;149Hi[9;24H[52;149H [9;24H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H9,24[10CTop[9;24H[?25h[?25l[52;162H5[9;25H[?25h[?25l[10;51r[10;1H[L[1;52r[52;159H[K[52;159H10,3[10CTop[9;9H([14C)
  [?25h[?25l[11;51r[11;1H[3L[1;52r[10;3H([93mcond[m
(([1m[96mnull?[m ls) [38;5;224m'()[m)
(([1m[96mpair?[m ([1m[96mcar[m ls))
(appen[52;11H[1m(paste) --[m[52;159H[K[13;7H[?25h[?25l[14;51r[14;1H[2L[1;52r[13;2H[1m[96mappend[m (my-[38;5;81m^][matten ([1m[96mcar[m ls))
(my-[38;5;81m^][matten ([1m[96mcdr[m ls))))
([93melse[m (con[?25h[?25l[1m[96mcons[m ([1m[96mcar[m ls) (my-[38;5;81m^][matten ([1m[96mcdr[m ls)))))))[52;159H15,47-48      Top[15;48H[?25h[?25l[11;1H[46m([14C)[m[52;160H1,1    [11;1H[?25h[?25l[10;51r[51;1H
[1;52r[10;1H  ([93mcond[m(([1m[96mnull?[m ls) [38;5;224m'()[m)
[46m([14C)[m[51;1H[96m;;map elements of ls to #t or #f depending on whether or not[m[52;11H[1m--a[m[52;13H[K[52;159H10,8[10CTop[10;8H[46m([14C)[m
([14C)[10;8H[?25h[?25l[11;51r[11;1H[L[1;52r[10;8H[K[11;5H(([1m[96mnull?[m ls) [38;5;224m'()[m)[52;159H[K[52;159H11,5[10CTop[11;5H[46m([14C)[m    [?25h[?25l([14C)
[46m([14;23H)[m[52;160H2,1[12;1H[?25h[?25l[11;51r[51;1H
[1;52r[11;1H    (([1m[96mnull?[m ls) [38;5;224m'()[m)(([1m[96mpair?[m ([1m[96mcar[m ls))
[46m([m[13;23H)[14;22H[46m([m[51;1H[96m;;map elements of ls to #t or #f depending on whether or not[m[52;159H[K[52;159H11,21[9CTop[11;21H[46m([m
([13;23H[46m)[m[14;22H([11;21H[?25h[?25l[12;51r[12;1H[L[1;52r[11;21H[K[12;5H(([1m[96mpair?[m ([1m[96mcar[m ls))[13;23H[1m[96m[46ma[m[1m[96mr[m [14;23H)[52;159H[K[52;159H12,5[10CTop[12;5H[46m([m[13;23H[1m[96mar[m [14;23H[46m)[12;5H[?25h[?25l[11;5H([14C)[m
    ([14;23H)[52;160H1,20[11;20H[?25h[?25l[11;20H[K[11;5H([12C[38;5;224m[46m()[m[52;162H19[11;19H[?25h[?25l[46m)[m[11;19H[K[11;5H[46m([m[52;163H8[11;18H[?25h[?25l)[11;18H[K[11;17H[46m)[m[52;163H7[11;17H[?25h[?25l[95m[46m0[m)[95m0[m[46m)[m[52;163H8[11;18H[?25h[?25l[52;163H9[11;19H[?25h[?25l    ([12C)
    [46m([14;23H)[m[52;160H2,5 [12;5H[?25h[?25l([7C[46m([6C)[m[14;23H)[52;162H13[12;13H[?25h[?25l([6C)
[46m([14;22H)[m[52;160H3,1 [13;1H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[13;2H[52;159H13,2[10CTop[13;2H[48;5;242m([m[14;22H)[13;2H[?25h[?25l
(m[13;2H[1m[96m[48;5;242mappend[m[48;5;242m (my-^]atten ([m[1m[96m[48;5;242mcar[m[48;5;242m ls)) 
(m[m[52;160H4,3[14;3H[?25h[?25ly[48;5;242my[m[52;162H4[14;4H[?25h[?25l-[48;5;242m-[1C][m[52;162H5[14;5H[?25h[?25l[?25h[?25l[2C[48;5;242m^[m[52;162H6-7[14;7H[?25h[?25la[48;5;242ma[m[52;162H7-8[14;8H[?25h[?25lt[48;5;242mt[m[52;162H8-9[14;9H[?25h[?25lt[48;5;242mt[m[52;162H9-10[14;10H[?25h[?25le[48;5;242me[m[52;162H10-11[14;11H[?25h[?25ln[48;5;242mn[m[52;163H1-12[14;12H[?25h[?25l [48;5;242m [m[46m([6C)[m[52;163H2-13[14;13H[?25h[?25l[1C[48;5;242m([m[6C)[52;163H3-14[14;14H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mdr[m [52;163H4-15[14;15H[?25h[?25l[1C[1m[96m[48;5;242md[m[1m[96mr[m [52;163H5-16[14;16H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;163H6-17[14;17H[?25h[?25l [48;5;242m [m[52;163H7-18[14;18H[?25h[?25ll[48;5;242ml[m[52;163H8-19[14;19H[?25h[?25ls[48;5;242ms[m[46m)[m[52;163H9-20[14;20H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;162H20-21[14;21H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H1-22[14;22H[?25h[?25l[1C[12;5H[46m([m[14;22H[48;5;242m)[m[46m)[m[52;163H2-23[14;23H[?25h[?25l[12;5H([14;22H[46m)[m)[52;163H1-22[14;22H[?25h[?25l[52;149H3[15;22H[14;22H[48;5;242m)) 
([m[93m[48;5;242melse[m[48;5;242m ([m[1m[96m[48;5;242mcons[m[48;5;242m ([m[1m[96m[48;5;242mcar[m[48;5;242m ls) [m[46m([19C)[m[52;160H5,22   [15;22H[?25h[?25l[1C[48;5;242m([m[19C)[52;163H3[15;23H[?25h[?25l[46m([19C)[m[52;163H2[15;22H[?25h[?25l[52;149H2[14;22H[46m)[m)[14;24H[K[15;1H([93melse[m ([1m[96mcons[m ([1m[96mcar[m ls) ([19C)[52;160H4,21-22[14;22H[?25h[?25l[52;149H3[15;22H[14;22H[48;5;242m)) 
([m[93m[48;5;242melse[m[48;5;242m ([m[1m[96m[48;5;242mcons[m[48;5;242m ([m[1m[96m[48;5;242mcar[m[48;5;242m ls) [m[46m([19C)[m[52;160H5,22   [15;22H[?25h[?25l[1C[48;5;242m([m[19C)[52;163H3[15;23H[?25h[?25lm[48;5;242mm[m[52;163H4[15;24H[?25h[?25ly[48;5;242my[m[52;163H5[15;25H[?25h[?25l-[48;5;242m-[1C][m[52;163H6[15;26H[?25h[?25l[?25h[?25l[3C[48;5;242m^]a[m[52;163H8-29[15;29H[?25h[?25ltt[48;5;242mtt[m[52;162H30-31[15;31H[?25h[?25len[48;5;242men[m[52;163H2-33[15;33H[?25h[?25l ([48;5;242m ([m[52;163H4-35[15;35H[?25h[?25l[52;149H4[16;20H[15;35H[1m[96m[48;5;242mcdr[m[48;5;242m ls))))))) 
  ([m[93m[48;5;242mif[m[48;5;242m ([m[1m[96m[48;5;242mnull?[m[48;5;242m ls) [m[95m[48;5;242m0[m[48;5;242m)[m[52;160H6,20   [16;20H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[52;149H3[15;45H[10;3H[46m([15;45H)[m))[15;48H[K[16;1H  ([93mif[m ([1m[96mnull?[m ls) [95m0[m)[52;160H5,44-45[15;45H[?25h[?25l[1C[9;1H[46m([m
  ([15;45H[48;5;242m)[m[46m)[m[52;163H5-46[15;46H[?25h[?25l[1C[9;1H([15;46H[48;5;242m)[m[52;163H6-47[15;47H[?25h[?25l[?25h[?25l[52;149Hc[15;47H[52;149H [13;1H[52;4H[1mINSERTt --[m[52;13H[K[52;159H13,1[10CTop[13;51r[13;1H[2M[1;52r[13;1H[K[50;1H[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m[52;159H[K[52;159H13,1[10CTop[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;5H(([1m[96mpair?[m ([1m[96mcar[m ls))[51;1H([93mdefine[m greater-than[52;159H[K[52;159H12,22[9CTop[12;6H[46m([14C)[?25h[?25l[m    (([14C)
  [46m([15C)[m[52;160H3,3 [13;3H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[13;4H[52;159H13,4[10CTop[13;4H[48;5;242m([m[15C)[13;4H[?25h[?25l[52;149H3[13;5H[93m[48;5;242mi[m[52;162H5[13;5H[?25h[?25l[52;149H4[13;6H[93m[48;5;242mf[m[52;162H6[13;6H[?25h[?25l[52;149H5[13;7H[48;5;242m [m[46m([8C)[m[52;162H7[13;7H[?25h[?25l[52;149H7[13;9H[48;5;242m([m[1m[96m[48;5;242mn[m[1m[96mull?[m ls)[52;162H9[13;9H[?25h[?25l[52;149H8[13;10H[1m[96m[48;5;242mu[m[1m[96mll?[m [52;162H10[13;10H[?25h[?25l[52;149H9[13;11H[1m[96m[48;5;242ml[m[1m[96ml?[m [52;163H1[13;11H[?25h[?25l[52;149H10[13;12H[1m[96m[48;5;242ml[m[1m[96m?[m [52;163H2[13;12H[?25h[?25l[52;150H1[13;13H[1m[96m[48;5;242m?[m [52;163H3[13;13H[?25h[?25l[52;150H2[13;14H[48;5;242m [m[52;163H4[13;14H[?25h[?25l[52;149H2 [14;15H[13;14H[48;5;242mls) [m[95m[48;5;242m0[m[48;5;242m) 
  ([m[93m[48;5;242mif[m[48;5;242m ([m[1m[96m[48;5;242mpair?[m[48;5;242m ([m[52;160H4,15[14;15H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mar[m [52;163H6[14;16H[?25h[?25l[1C[1m[96m[48;5;242ma[m[1m[96mr[m [52;163H7[14;17H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;163H8[14;18H[?25h[?25l [48;5;242m [m[52;163H9[14;19H[?25h[?25ll[48;5;242ml[m[52;162H20[14;20H[?25h[?25ls[48;5;242ms[m[46m)[m[52;163H1[14;21H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H2[14;22H[?25h[?25l[?25h[?25l[52;149Hc[14;22H[52;149H [13;3H[52;4H[1mINSERTt --[m[52;13H[K[52;159H13,3[10CTop[13;51r[51;1H
[1;52r[13;1H  [13;3H[K[14;7H[46m [14C [m[51;3H([93mlambda[m (ls (v [95m0[m))[52;159H[K[52;159H13,3[10CTop[14;7H [14C [13;3H[?25h[?25l[52;162H2[13;2H[?25h[?25l[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;5H(([1m[96mpair?[m ([1m[96mcar[m ls))[51;5H([93mif[m ([1m[96mnull?[m ls)[52;159H[K[52;159H12,22[9CTop[12;6H[46m([14C)[?25h[?25l[m    (([14C)
    [46m([49C)[m[52;160H3,5 [13;5H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;4H[46m([m[1m[96m+[m [47C[46m)[m[52;162H4[13;4H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;54H[K[13;3H[46m([m[1m[96m+[m [47C[46m)[m[52;162H3[13;3H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;53H[K[13;2H[46m([m[1m[96m+[m [47C[46m)[m[52;162H2[13;2H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;52H[K[13;1H[46m([m[1m[96m+[m [47C[46m)[m[52;162H1[13;1H[?25h[?25l[12;51r[51;1H
[1;52r[12;1H    (([1m[96mpair?[m ([1m[96mcar[m ls))([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))
[46m [m[51;9H[38;5;224m'()[m[52;159H[K[52;159H12,22[9CTop[12;22H[46m([49C)[m
 [12;22H[?25h[?25l[13;51r[13;1H[L[1;52r[12;22H[K[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))[52;159H[K[52;159H13,6[10CTop[13;6H[46m([49C)[m     [?25h[?25l([49C)
    [46m([20C)[m[52;160H4,5[14;5H[?25h[?25l[13;6H[46m([49C)[m
    ([20C)[52;160H3,57[13;57H[?25h[?25l)[12;5H[46m([m[13;6H([49C)[46m)[m[52;163H8[13;58H[?25h[?25l[12;5H([13;57H)
    [46m([20C)[m[52;160H4,5 [14;5H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;28H[K[14;4H[46m([ms[19C[46m)[m)[52;162H4[14;4H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;27H[K[14;3H[46m([ms[19C[46m)[m)[52;162H3[14;3H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;26H[K[14;2H[46m([ms[19C[46m)[m)[52;162H2[14;2H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[14;25H[K[14;1H[46m([ms[19C[46m)[m)[52;162H1[14;1H[?25h[?25l[13;51r[51;1H
[1;52r[13;1H     ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))(sum-lengths ([1m[96mcdr[m ls))))
[46m        [m[51;9H[38;5;224m'()[m[52;159H[K[52;159H13,58[9CTop[13;58H[46m([20C)[m
        [13;58H[?25h[?25l[14;51r[14;1H[L[1;52r[13;58H[K[14;5H(sum-lengths ([1m[96mcdr[m ls))))[52;159H[K[52;159H14,5[10CTop[14;5H[46m([20C)[m    [?25h[?25l[52;162H6[14;6H[?25h[?25lesum-lengths ([1m[96mcdr[m ls[3C)    ([20C)[52;162H7[14;7H[?25h[?25llsum-lengths ([1m[96mcdr[m ls))))[52;162H8[14;8H[?25h[?25lssum-lengths ([1m[96mcdr[m ls))))[52;162H9[14;9H[?25h[?25lesum-lengths ([1m[96mcdr[m ls))))[52;162H10[14;10H[?25h[?25l[93melse[m sum-lengths ([1m[96mcdr[m ls))))[52;163H1[14;11H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls))))[14;11H[46m([20C)[m[52;163H2[14;12H[?25h[?25l([20C)[52;163H3[14;13H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H5[14;15H[?25h[?25l[52;163H6[14;16H[?25h[?25l[52;163H7[14;17H[?25h[?25l[52;163H8[14;18H[?25h[?25l[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25l [46m([6C)[m[52;163H4[14;24H[?25h[?25l[52;163H5[14;25H[?25h[?25l([6C)[52;163H6[14;26H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H8[14;28H[?25h[?25l[52;163H9[14;29H[?25h[?25l[52;162H30[14;30H[?25h[?25l[46m([6C)[m[52;163H1[14;31H[?25h[?25l[14;11H[46m([m[12C([6C)[46m)[m[52;163H2[14;32H[?25h[?25l    [46m([m[5C([20C)[46m)[m[52;163H3[14;33H[?25h[?25l[10;3H[46m([m[14;5H([27C)[46m)[m[52;163H4[14;34H[?25h[?25l[52;163H5[14;35H[?25h[?25l)[9;1H[46m([m
  ([14;34H)[46m)[m[52;163H6[14;36H[?25h[52;1H[K[14;35H[?25l[52;149H^[[14;35H[52;149H  [14;36H[52;159H14,35[9CTop[14;35H[?25h[?25l[52;149H:[14;35H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2686B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     5
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2686B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls))))[106m)[m


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,35[9CTop[14;35H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls))))[46m)[m


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,35[9CTop"lab5-sol.scm" 92L, 2686B[14;35H[?25h[?25l[9;1H([14;35H)[19;26H[38;5;224m[46m([11C)[m[52;160H9,38[19;38H[?25h[?25l[19;26H[38;5;224m([11C)[m[52;159H20,41[20;41H[?25h[?25l[19;26H[38;5;224m[46m([11C)[m[52;159H19,38[19;38H[?25h[?25l[18;1H[46m([34C)[m[19;26H[38;5;224m([11C)[m[52;160H8,36[18;36H[?25h[?25l([34C)[19;33H[38;5;224m[46m([3C)[m[52;160H9,37[19;37H[?25h[?25l[13;11H[46m([20C)[m[19;33H[38;5;224m([3C)[m[52;160H3,11[13;11H[?25h[?25l[52;149H~@k[13;11H[52;149H   [13;10H ([20C)[52;163H0[13;10H[?25h[?25l[52;149H~@k[13;10H[52;149H   [13;9H[52;162H9 [13;9H[?25h[?25l[52;149H~@k[13;9H[52;149H   [13;10H[52;162H10[13;10H[?25h[?25l[52;149H~@k[13;10H[52;149H   [13;11H[46m([20C)[m[52;163H1[13;11H[?25h[?25l[52;149Hi[13;11H[52;149H [13;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,11[9CTop[13;11H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;57H[K[13;10H[46m([ms[19C[46m)[m [52;163H0[13;10H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;56H[K[13;9H[46m([ms[19C[46m)[m [52;162H9 [13;9H[?25h[?25l[52;162H10[13;10H[?25h[?25l([20C)[52;163H1[13;11H[?25h[52;1H[K[13;10H[?25l[52;149H^[[13;10H[52;149H  [13;11H[52;159H13,10[9CTop[13;10H[?25h[?25l[52;149H:[13;10H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2684B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2684B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,10[9CTop[13;10H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,10[9CTop"lab5-sol.scm" 92L, 2684B[13;10H[?25h[?25l[52;162H23[13;23H[?25h[?25l[13;9H[46m([20C)[m[52;162H9 [13;9H[?25h[?25l[52;149Hi[13;9H[52;149H [13;9H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,9[10CTop[13;9H[?25h[?25l[95m[46m1[m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;9H[95m1[m[46m([m[19C)[46m)[m[52;162H10[13;10H[?25h[?25l[46m [m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;10H [46m([m[19C)[46m)[m[52;163H1[13;11H[?25h[?25l([20C)[52;162H27[13;27H[?25h[?25l[52;162H10[13;10H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;57H[K[52;162H9 [13;9H[?25h[?25l[95m2[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;162H10[13;10H[?25h[?25l[14C[46m([6C)[m[52;162H24[13;24H[?25h[52;1H[K[13;23H[?25l[52;149H^[[13;23H[52;149H  [13;24H([6C)[52;159H13,23[9CTop[13;23H[?25h[?25l[52;149H:[13;23H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2686B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     10
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ clear
[?2004l[H[2J[3J[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ clear./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2686B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m2[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,23[9CTop[13;23H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m2[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,23[9CTop"lab5-sol.scm" 92L, 2686B[13;23H[?25h[?25l[52;162H10[13;10H[?25h[?25l[52;149Hi[13;10H[52;149H [13;10H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,10[9CTop[13;10H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;57H[K[52;162H9 [13;9H[?25h[?25l[95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;162H10[13;10H[?25h[?25l[52;163H9[13;19H[?25h[?25l[13;11H[46m([20C)[m[52;163H1[13;11H[?25h[?25l[1C(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;11H([46m([m[19C)[46m)[m[52;163H2[13;12H[?25h[?25l[46m [m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;12H [46m([m[19C)[46m)[m[52;163H3[13;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;59H[K[13;12H[46m([ms[19C[46m)[m [52;163H2[13;12H[?25h[?25l[46m [m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;12H [46m([m[19C)[46m)[m[52;163H3[13;13H[?25h[?25l[1m[96m[46m=[m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;13H[1m[96m=[m[46m([m[19C)[46m)[m[52;163H4[13;14H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;60H[K[13;13H[46m([ms[19C[46m)[m [52;163H3[13;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;59H[K[13;12H[46m([ms[19C[46m)[m [52;163H2[13;12H[?25h[?25l[1m[96m[46m+[m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;12H[1m[96m+[m[46m([m[19C)[46m)[m[52;163H3[13;13H[?25h[?25l[46m [m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;13H [46m([m[19C)[46m)[m[52;163H4[13;14H[?25h[?25l     [46m([m[7C([20C)[24C[46m)[m[52;162H60[13;60H[?25h[?25l[1C)[12;5H[46m([m[13;6H([53C)[46m)[m[52;163H1[13;61H[?25h[52;1H[K[13;60H[?25l[52;149H^[[13;60H[52;149H  [13;61H[12;5H([13;6H[46m([53C)[m)[52;159H13,60[9CTop[13;60H[?25h[?25l[52;149H:[13;60H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2690B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm clear[K./lab5-sol.scm 
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     5
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2690B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H[106m([m[36m+[m [31m1[m ([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))[106m)[m)
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,60[9CTop[13;60H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H[46m([m[1m[96m+[m [95m1[m ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))[46m)[m)
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,60[9CTop"lab5-sol.scm" 92L, 2690B[13;60H[?25h[?25l     ([7C[46m([20C)[m[24C)[52;162H14[13;14H[?25h[?25l[52;149Hi[13;14H[52;149H [13;14H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,14[9CTop[13;14H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;61H[K[13;13H[46m([ms[19C[46m)[m [52;163H3[13;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;60H[K[13;12H[46m([ms[19C[46m)[m [52;163H2[13;12H[?25h[?25l[46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;59H[K[13;11H[46m([ms[19C[46m)[m [52;163H1[13;11H[?25h[?25l[12;5H[46m([m[13;11H([20C)[24C[46m)[m[52;162H57[13;57H[?25h[?25l[13;58H[K[12;5H([13;6H[46m([49C)[m)[52;163H6[13;56H[?25h[?25l[12;5H[46m([m[13;6H([49C)[46m)[m[52;163H8[13;58H[?25h[?25l[12;5H([13;57H)[52;162H36[13;36H[?25h[?25l[19;27H[38;5;224m[46m([3C)[m[52;160H9,27[19;27H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[19;28H[52;159H19,28[9CTop[19;28H[38;5;224m[48;5;242m([m[3C[38;5;224m)[?25h[?25l[m[52;149H3[19;29H[95m[48;5;242m1[m[52;163H9[19;29H[?25h[?25l[52;149H4[19;30H[48;5;242m [m[52;162H30[19;30H[?25h[?25l[52;149H5[19;31H[95m[48;5;242m2[m[38;5;224m[46m)[m[52;163H1[19;31H[?25h[?25l[52;149H6[19;32H[38;5;224m[48;5;242m)[m[52;163H2[19;32H[?25h[?25l[52;149H5[19;31H[38;5;224m[46m)[m[52;163H1[19;31H[?25h[?25l[?25h[?25l[52;149H [19;33H[52;4H[1mINSERTt --[m[52;13H[K[52;159H19,33[9CTop[19;27H[38;5;224m[46m([m[95m1[m [95m2[m[38;5;224m([3C)[m[1C[38;5;224m[46m([3C)[?25h[?25l[m[13;24H[46m([6C)[m[19;33H[38;5;224m([3C)[m[52;160H3,31[13;31H[?25h[?25l)[1C (sum-lengths ([1m[96mcdr[m ls)[13;57H[K[13;30H[46m)[m)[52;163H0[13;30H[?25h[?25l)[1C (sum-lengths ([1m[96mcdr[m ls)[13;56H[K[13;29H[46m)[m)[52;162H29[13;29H[?25h[?25l[46m([m)) (sum-lengths ([1m[96mcdr[m ls))))[13;24H([5C[46m)[m[52;162H30[13;30H[?25h[?25l[46mc[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;30Hc[46m)[m[52;163H1[13;31H[?25h[?25l[46ma[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;31Ha[46m)[m[52;163H2[13;32H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;32H[1m[96mr[m[46m)[m[52;163H3[13;33H[?25h[?25l[46m [m)) (sum-lengths ([1m[96mcdr[m ls))))[13;33H [46m)[m[52;163H4[13;34H[?25h[?25l[46ml[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;34Hl[46m)[m[52;163H5[13;35H[?25h[?25l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;35Hs[46m)[m[52;163H6[13;36H[?25h[?25l[13;29H([6C)[52;162H48[13;48H[?25h[52;1H[K[13;47H[?25l[52;149H^[[13;47H[52;149H  [13;48H[52;159H13,47[9CTop[13;47H[?25h[?25l[52;162H12[13;12H[?25h[?25l[52;149Hi[13;12H[52;149H [13;12H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H13,12[9CTop[13;12H[?25h[?25l+sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;163H3[13;13H[?25h[?25l[1m[96m+[m sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;163H4[13;14H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;162H14[13;14H[?25h[?25l[46m([51C)[m[52;163H1[13;11H[?25h[?25l([19C[46m([6C)[m[24C)[52;162H38[13;38H[?25h[?25l[13;31H([6C)[52;162H2[13;28H[?25h[?25l[52;162H33[13;33H[?25h[?25l[13;26H[46m([12C)[m[52;163H9[13;39H[?25h[?25l[52;162H40[13;40H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls))))[13;11H[46m([m[14C([12C)[46m)[m[52;163H1[13;41H[?25h[?25l[52;163H0[13;40H[?25h[?25l[46m [m) (sum-lengths ([1m[96mcdr[m ls))))[13;40H [46m)[m[52;163H1[13;41H[?25h[?25l[13;11H([14C[46m([12C)[m )[52;163H0[13;40H[?25h[?25l[52;162H39[13;39H[?25h[?25l[13;26H([4C[46m([6C)[m)[52;163H8[13;38H[?25h[?25l[13;31H([6C)[52;163H7[13;37H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H3[13;33H[?25h[?25l[46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;163H1[13;31H[?25h[?25l([6C)[52;163H0[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l[52;163H8[13;28H[?25h[?25l[46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;163H6[13;26H[?25h[?25l([12C)[52;163H5[13;25H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H3[13;23H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H0[13;20H[?25h[?25l[52;162H19[13;19H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l(sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls)) ) (sum-lengths ([1m[96mcdr[m ls))))[13;14H[46m([27C)[m[52;163H5[13;15H[?25h[?25l[52;162H42[13;42H[?25h[?25l[46m([m) (sum-lengths ([1m[96mcdr[m ls))))[13;14H([28C[46m)[m[52;163H3[13;43H[?25h[?25l[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;14H[46m([m[27C()[46m)[m[52;163H4[13;44H[?25h[?25l[13;14H([27C[46m()[m)[52;163H3[13;43H[?25h[?25l[13;14H[46m([m[27C()[46m)[m[52;163H4[13;44H[?25h[?25l[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;11H[46m([m[2C([29C)[46m)[m[52;163H5[13;45H[?25h[?25l[13;11H([2C[46m([29C)[m)[52;163H4[13;44H[?25h[?25l[13;14H([27C[46m()[m)[52;163H3[13;43H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l[13;14H[46m([m[27C()[46m)[m[52;163H4[13;44H[?25h[?25l[13;11H[46m([m[2C([29C)[46m)[m[52;163H5[13;45H[?25h[?25l[13;11H([2C[46m([29C)[m)[52;163H4[13;44H[?25h[?25l[13;11H[46m([m[2C([29C)[46m)[m[52;163H5[13;45H[?25h[?25l[13;11H([2C[46m([29C)[m)[52;163H4[13;44H[?25h[?25l[13;11H[46m([m[2C([29C)[46m)[m[52;163H5[13;45H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;70H[K[13;11H([2C[46m([29C)[m [52;163H4[13;44H[?25h[?25l[13;14H([27C[46m()[m)[52;163H3[13;43H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l[46m)[m[1C (sum-lengths ([1m[96mcdr[m ls)[13;69H[K[13;14H[46m([m[28C)[52;163H2[13;42H[?25h[?25l)[1C (sum-lengths ([1m[96mcdr[m ls)[13;68H[K[13;41H[46m)[m)[52;163H1[13;41H[?25h[?25l[13;11H[46m([m[2C([26C)[46m)[m[52;163H2[13;42H[?25h[?25l[46m [m) (sum-lengths ([1m[96mcdr[m ls))))[13;42H [46m)[m[52;163H3[13;43H[?25h[?25l[46m([m) (sum-lengths ([1m[96mcdr[m ls))))[13;11H([32C[46m)[m[52;163H4[13;44H[?25h[?25l[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;11H[46m([m[31C()[46m)[m[52;163H5[13;45H[?25h[?25l[13;11H([31C[46m()[m)[52;163H4[13;44H[?25h[?25l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;44Hs[46m)[m[52;163H5[13;45H[?25h[?25l[46mu[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;45Hu[46m)[m[52;163H6[13;46H[?25h[?25l[46mm[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;46Hm[46m)[m[52;163H7[13;47H[?25h[?25l[46m-[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;47H-[46m)[m[52;163H8[13;48H[?25h[?25l[46ml[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;48Hl[46m)[m[52;163H9[13;49H[?25h[?25l[46me[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;49He[46m)[m[52;162H50[13;50H[?25h[?25l[46mn[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;50Hn[46m)[m[52;163H1[13;51H[?25h[?25l[46mg[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;51Hg[46m)[m[52;163H2[13;52H[?25h[?25l[46mt[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;52Ht[46m)[m[52;163H3[13;53H[?25h[?25l[46mh[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;53Hh[46m)[m[52;163H4[13;54H[?25h[?25l[46md[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;54Hd[46m)[m[52;163H5[13;55H[?25h[?25l)[1C (sum-lengths ([1m[96mcdr[m ls)[13;81H[K[13;54H[46m)[m)[52;163H4[13;54H[?25h[?25l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;54Hs[46m)[m[52;163H5[13;55H[?25h[?25l[46m [m)) (sum-lengths ([1m[96mcdr[m ls))))[13;55H [46m)[m[52;163H6[13;56H[?25h[?25l[46m([m)) (sum-lengths ([1m[96mcdr[m ls))))[13;43H([13C[46m)[m[52;163H7[13;57H[?25h[?25l[46mc[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;57Hc[46m)[m[52;163H8[13;58H[?25h[?25l[46md[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;58Hd[46m)[m[52;163H9[13;59H[?25h[?25l[1m[96mcd[m[1m[96m[46mr[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;59H[1m[96mr[m[46m)[m[52;162H60[13;60H[?25h[?25l[46m [m)) (sum-lengths ([1m[96mcdr[m ls))))[13;60H [46m)[m[52;163H1[13;61H[?25h[?25l[46m([m)) (sum-lengths ([1m[96mcdr[m ls))))[13;56H([5C[46m)[m[52;163H2[13;62H[?25h[?25l[46mc[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;62Hc[46m)[m[52;163H3[13;63H[?25h[?25l[46ma[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;63Ha[46m)[m[52;163H4[13;64H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;64H[1m[96mr[m[46m)[m[52;163H5[13;65H[?25h[?25l[46m [m)) (sum-lengths ([1m[96mcdr[m ls))))[13;65H [46m)[m[52;163H6[13;66H[?25h[?25l[46ml[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;66Hl[46m)[m[52;163H7[13;67H[?25h[?25l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;67Hs[46m)[m[52;163H8[13;68H[?25h[?25l[2C) (sum-lengths ([1m[96mcdr[m ls))))[13;56H[46m([m[4C([6C)[46m)[m[52;163H9[13;69H[?25h[?25l[13;43H[46m([m[12C([12C)[46m)[m[52;162H70[13;70H[?25h[?25l[52;163H1[13;71H[?25h[?25l[52;163H0[13;70H[?25h[?25l[52;163H1[13;71H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls))))[13;11H[46m([m[31C([26C)[46m)[m[52;163H2[13;72H[?25h[?25l[52;163H1[13;71H[?25h[?25l[13;11H([31C[46m([26C)[m)[52;163H0[13;70H[?25h[?25l[13;43H([12C[46m([12C)[m)[52;162H69[13;69H[?25h[?25l[13;56H([4C[46m([6C)[m)[52;163H8[13;68H[?25h[?25l[13;61H([6C)[52;163H7[13;67H[?25h[?25l[52;163H6[13;66H[?25h[?25l[52;163H5[13;65H[?25h[?25l[52;163H4[13;64H[?25h[?25l[52;163H3[13;63H[?25h[?25l[46m([6C)[m[52;163H2[13;62H[?25h[?25l[52;163H1[13;61H[?25h[?25l([6C)[52;163H0[13;60H[?25h[?25l[52;162H59[13;59H[?25h[?25l[52;163H8[13;58H[?25h[?25l[46m([12C)[m[52;163H7[13;57H[?25h[?25l[52;163H6[13;56H[?25h[?25l([12C)[52;163H5[13;55H[?25h[?25l[52;163H4[13;54H[?25h[?25l[52;163H3[13;53H[?25h[?25l[52;163H2[13;52H[?25h[?25l[52;163H1[13;51H[?25h[?25l[52;163H0[13;50H[?25h[?25l[52;162H49[13;49H[?25h[?25l[52;163H8[13;48H[?25h[?25l[52;163H7[13;47H[?25h[?25l[52;163H6[13;46H[?25h[?25l[52;163H5[13;45H[?25h[?25l[46m([26C)[m[52;163H4[13;44H[?25h[?25l[52;163H3[13;43H[?25h[?25l[13;14H[46m([26C)[m ([26C)[52;163H2[13;42H[?25h[?25l[52;163H1[13;41H[?25h[?25l[13;14H([12C[46m([12C)[m)[52;163H0[13;40H[?25h[?25l[13;27H([4C[46m([6C)[m)[52;162H39[13;39H[?25h[?25l[13;32H([6C)[52;163H8[13;38H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[46m([6C)[m[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l([6C)[52;163H1[13;31H[?25h[?25l[52;163H0[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l[46m([12C)[m[52;163H8[13;28H[?25h[?25l[52;163H7[13;27H[?25h[?25l([12C)[52;163H6[13;26H[?25h[?25l [46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l([12C)[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l [46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l([6C)[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[46m([6C)[m[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l([6C)[52;163H1[13;31H[?25h[?25l[52;163H0[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l[46m([12C)[m[52;163H8[13;28H[?25h[?25l[52;163H7[13;27H[?25h[?25l([12C)[52;163H6[13;26H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H3[13;23H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H0[13;20H[?25h[?25l[52;162H19[13;19H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[46m([26C)[m[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l([26C)[52;163H3[13;13H[?25h[?25l[46m([59C)[m[52;163H2[13;12H[?25h[?25l[95m1+[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls[3C) (sum-lengths ([1m[96mcdr[m ls))))[13;11H([59C)[52;163H3[13;13H[?25h[?25l [1m[96m+[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))[52;163H4[13;14H[?25h[?25l[95m+[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls)[13;98H[K[52;163H3[13;13H[?25h[?25l[1m[96m+[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls)[13;97H[K[13;11H[46m([59C)[m[52;163H2[13;12H[?25h[?25l([59C)[52;163H3[13;13H[?25h[?25l  (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))[52;163H4[13;14H[?25h[?25l[95m1[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))[52;163H5[13;15H[?25h[?25l [46m([26C)[m[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l([26C)[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[46m([61C)[m[52;163H2[13;12H[?25h[?25l[52;163H1[13;11H[?25h[?25l[52;163H2[13;12H[?25h[?25l([61C)[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l [46m([26C)[m[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l([26C)[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l [46m([12C)[m[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l([12C)[52;163H1[13;31H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l [46m([6C)[m[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l([6C)[52;163H6[13;36H[?25h[52;1H[K[13;35H[?25l[52;149H^[[13;35H[52;149H  [13;36H[52;159H13,35[9CTop[13;35H[?25h[?25l[52;149H:[13;35H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2727B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2727B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m ([36m+[m [31m1[m (sum-lengths ([36mcar[m ([36mcar[m ls))) (sum-lengths ([36mcdr[m ([36mcar[m ls)))) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,35[9CTop[13;35H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,35[9CTop"lab5-sol.scm" 92L, 2727B[13;35H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;160H4,2[14;23H[?25h[?25l[52;160H3,21[13;21H[?25h[?25l[52;162H15[13;15H[?25h[?25l[52;163H7[13;17H[?25h[?25l[46m([26C)[m[52;163H6[13;16H[?25h[?25l[52;149H~@k[13;16H[52;149H   [13;15H ([26C)[52;163H5[13;15H[?25h[?25l[52;149H~@k[13;15H[52;149H   [13;14H[52;163H4[13;14H[?25h[?25l[52;149H~@k[13;14H[52;149H   [13;15H[52;163H5[13;15H[?25h[?25l[52;149H~@k[13;15H[52;149H   [13;16H[46m([26C)[m[52;163H6[13;16H[?25h[?25l[52;149Hi[13;16H[52;149H [13;16H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,16[9CTop[13;16H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ([1m[96mcar[m ls)))[46m [m(sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls)[13;98H[K[13;15H[46m([ms[25C[46m)[m [52;163H5[13;15H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ([1m[96mcar[m ls)))[46m [m(sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls)[13;97H[K[13;14H[46m([ms[25C[46m)[m [52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l([26C)[52;163H6[13;16H[?25h[52;1H[K[13;15H[?25l[52;149H^[[13;15H[52;149H  [13;16H[52;159H13,15[9CTop[13;15H[?25h[?25l[52;149H:[13;15H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2725B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2725B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m ([36m+[m (sum-lengths ([36mcar[m ([36mcar[m ls))) (sum-lengths ([36mcdr[m ([36mcar[m ls)))) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,15[9CTop[13;15H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m ([1m[96m+[m (sum-lengths ([1m[96mcar[m ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,15[9CTop"lab5-sol.scm" 92L, 2725B[13;15H[?25h[?25l[52;162H24[13;24H[?25h[?25l[52;149H~@k[13;24H[52;149H   [13;23H[52;163H3[13;23H[?25h[?25l[52;149H~@k[13;23H[52;149H   [12;21H    ([46m([14C)[m[52;160H2,21[12;21H[?25h[?25l[52;149H~@k[12;21H[52;149H   [13;23H[12;6H([14C)[52;160H3,23[13;23H[?25h[?25l[52;149H~@k[13;23H[52;149H   [13;24H[52;163H4[13;24H[?25h[?25l[52;149H~@k[13;24H[52;149H   [13;25H[52;163H5[13;25H[?25h[?25l[52;149H~@k[13;25H[52;149H   [13;26H[52;163H6[13;26H[?25h[?25l[52;149H~@k[13;26H[52;149H   [13;27H[46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;149H~@k[13;27H[52;149H   [13;28H([12C)[52;163H8[13;28H[?25h[?25l[52;149H~@k[13;28H[52;149H   [13;29H[52;163H9[13;29H[?25h[?25l[52;149H~@k[13;29H[52;149H   [13;30H[52;162H30[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [13;31H[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;32H[46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;33H([6C)[52;163H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;34H[52;163H4[13;34H[?25h[?25l[52;149H~@k[13;34H[52;149H   [13;35H[52;163H5[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [13;38H[52;163H8[13;38H[?25h[?25l[52;149H~@k[13;38H[52;149H   [12;21H    ([46m([14C)[m[52;160H2,21[12;21H[?25h[?25l[52;149H~@k[12;21H[52;149H   [11;18H    [46m([12C)[m[12;6H([14C)[52;160H1,18[11;18H[?25h[?25l[52;149H~@k[11;18H[52;149H   [11;18H[?25h[?25l[52;149H~@k[11;18H[52;149H   [12;21H[11;5H([12C)[12;6H[46m([14C)[m[52;160H2,21[12;21H[?25h[?25l[52;149H~@k[12;21H[52;149H   [13;38H[12;6H([14C)[52;160H3,38[13;38H[?25h[?25l[52;149H~@k[13;38H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;35H[52;163H5[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;34H[52;163H4[13;34H[?25h[?25l[52;149H~@k[13;34H[52;149H   [13;33H[52;163H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;32H[46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;31H ([6C)[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;30H[52;163H0[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [13;29H[52;162H29[13;29H[?25h[?25l[52;149H~@k[13;29H[52;149H   [13;28H[52;163H8[13;28H[?25h[?25l[52;149H~@k[13;28H[52;149H   [13;27H[46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;149H~@k[13;27H[52;149H   [13;28H([12C)[52;163H8[13;28H[?25h[?25l[52;149H~@k[13;28H[52;149H   [13;29H[52;163H9[13;29H[?25h[?25l[52;149H~@k[13;29H[52;149H   [13;30H[52;162H30[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [13;31H[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;32H[46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;33H([6C)[52;163H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;34H[52;163H4[13;34H[?25h[?25l[52;149H~@k[13;34H[52;149H   [13;35H[52;163H5[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [14;35H[9;1H[46m([14;35H)[m[52;160H4,35[14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [15;8H[9;1H([14;35H)[52;160H5,1-8[15;8H[?25h[?25l[52;149H~@k[15;8H[52;149H   [16;1H[52;160H6,0-1[16;1H[?25h[?25l[52;149H~@k[16;1H[52;149H   [17;31H[46m([29C)[m[52;160H7,31 [17;31H[?25h[?25l[52;149H~@k[17;31H[52;149H   [18;36H[17;1H([29C)
[46m([34C)[m[52;160H8,36[18;36H[?25h[?25l[52;149H~@k[18;36H[52;149H   [19;37H[18;1H([34C)[19;33H[38;5;224m[46m([3C)[m[52;160H9,37[19;37H[?25h[?25l[52;149H~@k[19;37H[52;149H   [19;38H[19;26H[38;5;224m[46m([m[6C[38;5;224m([3C)[m[38;5;224m[46m)[m[52;163H8[19;38H[?25h[?25l[52;149H~@k[19;38H[52;149H   [19;39H[19;12H[46m([m[13C[38;5;224m([11C)[m[46m)[m[52;163H9[19;39H[?25h[?25l[52;149H~@k[19;39H[52;149H   [19;40H[19;12H([26C)[52;162H40[19;40H[?25h[?25l[52;149H~@k[19;40H[52;149H   [19;41H[52;163H1[19;41H[?25h[?25l[52;149H~@k[19;41H[52;149H   [19;42H[46m([40C)[m[52;163H2[19;42H[?25h[?25l[52;149H~@k[19;42H[52;149H   [19;41H([40C)[52;163H1[19;41H[?25h[?25l[52;149H~@k[19;41H[52;149H   [19;40H[52;163H0[19;40H[?25h[?25l[52;149H~@k[19;40H[52;149H   [19;39H[19;12H[46m([26C)[m[52;162H39[19;39H[?25h[?25l[52;149H~@k[19;39H[52;149H   [19;38H[19;12H([13C[38;5;224m[46m([11C)[m)[52;163H8[19;38H[?25h[?25l[52;149H~@k[19;38H[52;149H   [18;36H[46m([34C)[m[19;26H[38;5;224m([11C)[m[52;160H8,36[18;36H[?25h[?25l[52;149H~@k[18;36H[52;149H   [17;31H[46m([29C)[m
([34C)[52;160H7,31[17;31H[?25h[?25l[52;149H~@k[17;31H[52;149H   [16;1H
([29C)[52;160H6,0-1[16;1H[?25h[?25l[52;149H~@k[16;1H[52;149H   [15;8H[52;160H5,1-8[15;8H[?25h[?25l[52;149H~@k[15;8H[52;149H   [14;35H[9;1H[46m([14;35H)[m[52;160H4,35 [14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [14;34H[9;1H(
  [46m([14;34H)[m)[52;163H4[14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H   [14;33H[10;3H([14;5H[46m([27C)[m)[52;163H3[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [14;34H[10;3H[46m([m[14;5H([27C)[46m)[m[52;163H4[14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H   [14;35H[9;1H[46m([m
  ([14;34H)[46m)[m[52;163H5[14;35H[?25h[?25l[52;149H~@k[14;35H[52;149H   [13;35H[9;1H([14;35H)[52;160H3[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [12;21H    ([46m([14C)[m[52;160H2,21[12;21H[?25h[?25l[52;149H~@k[12;21H[52;149H   [13;35H[12;6H([14C)[52;160H3,35[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [13;38H[52;163H8[13;38H[?25h[?25l[52;149H~@k[13;38H[52;149H   [13;39H[13;32H[46m([6C)[m[52;163H9[13;39H[?25h[?25l[52;149H~@k[13;39H[52;149H   [13;40H[13;27H[46m([m[4C([6C)[46m)[m[52;162H40[13;40H[?25h[?25l[52;149H~@k[13;40H[52;149H   [13;41H[13;14H[46m([m[12C([12C)[46m)[m[52;163H1[13;41H[?25h[?25l[52;149H~@k[13;41H[52;149H   [13;42H[13;14H([26C)[52;163H2[13;42H[?25h[?25l[52;149H~@k[13;42H[52;149H   [13;41H[13;14H[46m([26C)[m[52;163H1[13;41H[?25h[?25l[52;149H~@k[13;41H[52;149H   [13;40H[13;14H([12C[46m([12C)[m)[52;163H0[13;40H[?25h[?25l[52;149H~@k[13;40H[52;149H   [13;39H[13;27H([4C[46m([6C)[m)[52;162H39[13;39H[?25h[?25l[52;149H~@k[13;39H[52;149H   [13;38H([6C)[52;163H8[13;38H[?25h[?25l[52;149H~@k[13;38H[52;149H   [13;37H[52;163H7[13;37H[?25h[?25l[52;149H~@k[13;37H[52;149H   [13;36H[52;163H6[13;36H[?25h[?25l[52;149H~@k[13;36H[52;149H   [13;35H[52;163H5[13;35H[?25h[?25l[52;149H~@k[13;35H[52;149H   [13;34H[52;163H4[13;34H[?25h[?25l[52;149H~@k[13;34H[52;149H   [13;33H[52;163H3[13;33H[?25h[?25l[52;149H~@k[13;33H[52;149H   [13;32H[46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;149H~@k[13;32H[52;149H   [13;31H ([6C)[52;163H1[13;31H[?25h[?25l[52;149H~@k[13;31H[52;149H   [13;30H[52;163H0[13;30H[?25h[?25l[52;149H~@k[13;30H[52;149H   [13;29H[52;162H29[13;29H[?25h[?25l[52;149H~@k[13;29H[52;149H   [13;28H[52;163H8[13;28H[?25h[?25l[52;149H~@k[13;28H[52;149H   [13;27H[46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;149H~@k[13;27H[52;149H   [13;26H ([12C)[52;163H6[13;26H[?25h[?25l[52;149H~@k[13;26H[52;149H   [13;25H[52;163H5[13;25H[?25h[?25l[52;149H~@k[13;25H[52;149H   [13;24H[52;163H4[13;24H[?25h[?25l[52;149H~@k[13;24H[52;149H   [13;23H[52;163H3[13;23H[?25h[?25l[52;149H~@k[13;23H[52;149H   [13;22H[52;163H2[13;22H[?25h[?25l[52;149H~@k[13;22H[52;149H   [13;21H[52;163H1[13;21H[?25h[?25l[52;149H~@k[13;21H[52;149H   [13;20H[52;163H0[13;20H[?25h[?25l[52;149H~@k[13;20H[52;149H   [13;19H[52;162H19[13;19H[?25h[?25l[52;149H~@k[13;19H[52;149H   [13;18H[52;163H8[13;18H[?25h[?25l[52;149H~@k[13;18H[52;149H   [13;17H[52;163H7[13;17H[?25h[?25l[52;149H~@k[13;17H[52;149H   [13;16H[52;163H6[13;16H[?25h[?25l[52;149H~@k[13;16H[52;149H   [13;15H[52;163H5[13;15H[?25h[?25l[52;149H~@k[13;15H[52;149H   [13;14H[46m([26C)[m[52;163H4[13;14H[?25h[?25l[52;149H~@k[13;14H[52;149H   [13;13H ([26C)[52;163H3[13;13H[?25h[?25l[52;149H~@k[13;13H[52;149H   [13;12H[52;163H2[13;12H[?25h[?25l[52;149H~@k[13;12H[52;149H   [13;11H[46m([59C)[m[52;163H1[13;11H[?25h[?25l([59C)[52;163H8[13;18H[?25h[?25l[52;163H2[13;12H[?25h[?25l[52;149Hi[13;12H[52;149H [13;12H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,12[9CTop[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l [46m([26C)[m[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l([26C)[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l [46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l([12C)[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l [46m([6C)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l([6C)[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[46m([6C)[m[52;163H9[13;39H[?25h[?25l[13;32H([6C)[52;163H8[13;38H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[46m([6C)[m[52;163H9[13;39H[?25h[?25l[13;27H[46m([m[4C([6C)[46m)[m[52;162H40[13;40H[?25h[?25l[13;14H[46m([m[12C([12C)[46m)[m[52;163H1[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[13;14H([26C) [46m([26C)[m[52;163H3[13;43H[?25h[?25l[52;163H4[13;44H[?25h[?25l[52;163H3[13;43H[?25h[?25l[13;14H[46m([26C)[m ([26C)[52;163H2[13;42H[?25h[?25l[52;163H1[13;41H[?25h[?25l[13;14H([12C[46m([12C)[m)[52;163H0[13;40H[?25h[?25l[13;27H([4C[46m([6C)[m)[52;162H39[13;39H[?25h[?25l[13;27H[46m([m[4C([6C)[46m)[m[52;162H40[13;40H[?25h[?25l[13;14H[46m([m[12C([12C)[46m)[m[52;163H1[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[13;14H([26C) [46m([26C)[m[52;163H3[13;43H[?25h[?25l[9;1H[46m([m[13;43H([26C)[14;35H[46m)[m[52;160H4,36[14;36H[?25h[?25l[9;1H([13;43H[46m([26C)[m[14;35H)[52;160H3,43[13;43H[?25h[?25l[52;163H4[13;44H[?25h[?25l([26C)[52;163H5[13;45H[?25h[?25l[52;163H6[13;46H[?25h[?25l[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l[52;163H9[13;49H[?25h[?25l[52;162H50[13;50H[?25h[?25l[52;163H1[13;51H[?25h[?25l[52;163H2[13;52H[?25h[?25l[52;163H3[13;53H[?25h[?25l[52;163H4[13;54H[?25h[?25l[52;163H5[13;55H[?25h[?25l [46m([12C)[m[52;163H6[13;56H[?25h[?25l[52;163H7[13;57H[?25h[?25l([12C)[52;163H8[13;58H[?25h[?25l[52;163H9[13;59H[?25h[?25l[52;162H60[13;60H[?25h[?25l [46m([6C)[m[52;163H1[13;61H[?25h[?25l[52;163H2[13;62H[?25h[?25l([6C)[52;163H3[13;63H[?25h[?25l[52;163H4[13;64H[?25h[?25l[52;163H5[13;65H[?25h[?25l[52;163H6[13;66H[?25h[?25l[52;163H7[13;67H[?25h[?25l[46m([6C)[m[52;163H8[13;68H[?25h[?25l[13;56H[46m([m[4C([6C)[46m)[m[52;163H9[13;69H[?25h[?25l[13;43H[46m([m[12C([12C)[46m)[m[52;162H70[13;70H[?25h[?25l[13;11H[46m([m[31C([26C)[46m)[m[52;163H1[13;71H[?25h[?25l[9;1H[46m([m[13;11H([59C)[14;35H[46m)[m[52;160H4,36[14;36H[?25h[?25l[52;163H5[14;35H[?25h[?25l[9;1H(
  [46m([14;34H)[m)[52;163H4[14;34H[?25h[?25l[10;3H([14;5H[46m([27C)[m)[52;163H3[14;33H[?25h[?25l    ([5C[46m([20C)[m)[52;163H2[14;32H[?25h[?25l[14;11H([12C[46m([6C)[m)[52;163H1[14;31H[?25h[?25l[14;24H([6C)[52;163H0[14;30H[?25h[?25l[52;162H29[14;29H[?25h[?25l[52;163H8[14;28H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H6[14;26H[?25h[?25l[46m([6C)[m[52;163H5[14;25H[?25h[?25l[52;163H4[14;24H[?25h[?25l([6C)[52;163H3[14;23H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H0[14;20H[?25h[?25l[52;162H19[14;19H[?25h[?25l[52;163H8[14;18H[?25h[?25l[52;163H7[14;17H[?25h[?25l[52;163H6[14;16H[?25h[?25l[52;163H5[14;15H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H3[14;13H[?25h[?25l[46m([20C)[m[52;163H2[14;12H[?25h[?25l+sum-lengths ([1m[96mcdr[m ls[4C)[14;11H([20C)[52;163H3[14;13H[?25h[?25l[1m[96m+[m sum-lengths ([1m[96mcdr[m ls)))))[52;163H4[14;14H[?25h[?25l2sum-lengths ([1m[96mcdr[m ls)))))[52;163H5[14;15H[?25h[?25lsum-lengths ([1m[96mcdr[m ls)[14;38H[K[52;163H4[14;14H[?25h[?25l1sum-lengths ([1m[96mcdr[m ls)))))[52;163H5[14;15H[?25h[?25l[95m1[m sum-lengths ([1m[96mcdr[m ls)))))[52;163H6[14;16H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)))))[14;16H[46m([20C)[m[52;163H7[14;17H[?25h[?25l([20C)[52;163H8[14;18H[?25h[?25l[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25l[52;163H4[14;24H[?25h[?25l[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H8[14;28H[?25h[?25l [46m([6C)[m[52;163H9[14;29H[?25h[?25l[52;162H30[14;30H[?25h[?25l([6C)[52;163H1[14;31H[?25h[?25l[52;163H2[14;32H[?25h[?25l[52;163H3[14;33H[?25h[?25l[52;163H4[14;34H[?25h[?25l[52;163H5[14;35H[?25h[?25l[46m([6C)[m[52;163H6[14;36H[?25h[?25l[14;16H[46m([m[12C([6C)[46m)[m[52;163H7[14;37H[?25h[?25l[14;11H[46m([m[4C([20C)[46m)[m[52;163H8[14;38H[?25h[?25l    [46m([m[5C([26C)[46m)[m[52;163H9[14;39H[?25h[?25l[2C)[10;3H[46m([m[14;5H([33C)[46m)[m[52;162H40[14;40H[?25h[?25l[10;3H([13;27H[46m([12C)[m[14;40H)[52;160H3[13;40H[?25h[?25l[10;3H[46m([m[13;27H([12C)[14;40H[46m)[m[52;160H4[14;40H[?25h[?25l[9;1H[46m([m
  ([14;40H)[46m)[m[52;163H1[14;41H[?25h[?25l[9;1H([13;14H[46m([26C)[m[14;41H)[52;160H3[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[13;14H([26C) [46m([26C)[m[52;163H3[13;43H[?25h[?25l[52;163H4[13;44H[?25h[?25l([26C)[52;163H5[13;45H[?25h[?25l[52;163H6[13;46H[?25h[?25l[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l[52;163H9[13;49H[?25h[?25l[52;162H50[13;50H[?25h[?25l[52;163H1[13;51H[?25h[?25l[52;163H2[13;52H[?25h[?25l[52;163H3[13;53H[?25h[?25l[52;163H4[13;54H[?25h[?25l[52;163H5[13;55H[?25h[?25l [46m([12C)[m[52;163H6[13;56H[?25h[?25l[52;163H7[13;57H[?25h[?25l([12C)[52;163H8[13;58H[?25h[?25l[52;163H9[13;59H[?25h[?25l[52;162H60[13;60H[?25h[?25l [46m([6C)[m[52;163H1[13;61H[?25h[?25l[52;163H2[13;62H[?25h[?25l([6C)[52;163H3[13;63H[?25h[?25l[52;163H4[13;64H[?25h[?25l[52;163H5[13;65H[?25h[?25l[52;163H6[13;66H[?25h[?25l[52;163H7[13;67H[?25h[?25l[46m([6C)[m[52;163H8[13;68H[?25h[?25l[13;56H[46m([m[4C([6C)[46m)[m[52;163H9[13;69H[?25h[?25l[13;43H[46m([m[12C([12C)[46m)[m[52;162H70[13;70H[?25h[?25l[13;11H[46m([m[31C([26C)[46m)[m[52;163H1[13;71H[?25h[?25l[52;163H2[13;72H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;96H[K[13;11H([31C[46m([26C)[m [52;163H1[13;71H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;95H[K[13;43H([12C[46m([12C)[m [52;163H0[13;70H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;94H[K[13;56H([4C[46m([6C)[m [52;162H69[13;69H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;93H[K[13;61H([6C [52;163H8[13;68H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;92H[K[52;163H7[13;67H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;91H[K[52;163H6[13;66H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[13;90H[K[52;163H5[13;65H[?25h[?25lca (sum-lengths ([1m[96mcdr[m ls)[13;89H[K[52;163H4[13;64H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;88H[K[52;163H3[13;63H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;87H[K[13;61H[46m([23C)[m[52;163H2[13;62H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;86H[K[13;61H [23C)[52;163H1[13;61H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[13;85H[K[52;163H0[13;60H[?25h[?25lcd (sum-lengths ([1m[96mcdr[m ls)[13;84H[K[52;162H59[13;59H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;83H[K[52;163H8[13;58H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;82H[K[13;56H[46m([23C)[m[52;163H7[13;57H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;81H[K[13;56H [23C)[52;163H6[13;56H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[13;80H[K[52;163H5[13;55H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;79H[K[52;163H4[13;54H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;78H[K[52;163H3[13;53H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;77H[K[52;163H2[13;52H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;76H[K[52;163H1[13;51H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;75H[K[52;163H0[13;50H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;74H[K[52;162H49[13;49H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;73H[K[52;163H8[13;48H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;72H[K[52;163H7[13;47H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;71H[K[52;163H6[13;46H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;70H[K[52;163H5[13;45H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[13;69H[K[13;43H[46m([23C)[m[52;163H4[13;44H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;68H[K[13;43H [23C)[52;163H3[13;43H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[13;67H[K[13;14H[46m([26C)[m[52;163H2[13;42H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;66H[K[13;14H([12C[46m([12C)[m [52;163H1[13;41H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls))))[13;14H[46m([m[12C([12C)[46m)[m[52;163H2[13;42H[?25h[?25l[52;163H1[13;41H[?25h[?25l[13;14H([12C[46m([12C)[m)[52;163H0[13;40H[?25h[?25l[13;27H([4C[46m([6C)[m)[52;162H39[13;39H[?25h[?25l[13;32H([6C)[52;163H8[13;38H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[46m([6C)[m[52;163H9[13;39H[?25h[?25l[13;27H[46m([m[4C([6C)[46m)[m[52;162H40[13;40H[?25h[?25l[13;27H([4C[46m([6C)[m)[52;162H39[13;39H[?25h[?25l[13;32H([6C)[52;163H8[13;38H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[46m([6C)[m[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l([6C)[52;163H1[13;31H[?25h[?25l[52;163H0[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l[46m([12C)[m[52;163H8[13;28H[?25h[?25l[52;163H7[13;27H[?25h[?25l([12C)[52;163H6[13;26H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H3[13;23H[?25h[?25l[12;6H[46m([14C)[m[52;160H2,22[12;22H[?25h[?25l    (([14C)[52;160H3,23[13;23H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l [46m([12C)[m[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l([12C)[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l [46m([6C)[m[52;163H2[13;32H[?25h[?25l([6C)[52;160H4[14;32H[?25h[?25l[13;32H[46m([6C)[m[52;160H3[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;66H[K[13;31H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H1[13;31H[?25h[?25lca([1m[96m[46mc[m[1m[96mar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;65H[K[13;30H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H0[13;30H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;64H[K[13;29H[46m([m[1m[96mcar[m ls[46m)[m)[52;162H29[13;29H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;63H[K[13;28H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H8[13;28H[?25h[?25l[1m[96m[46mc[m[1m[96mar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;62H[K[13;27H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H7[13;27H[?25h[?25l([6C)[52;163H6[13;26H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H4[13;24H[?25h[?25l[52;163H3[13;23H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H0[13;20H[?25h[?25l[52;162H19[13;19H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H6[13;16H[?25h[?25l[46m([20C)[m[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;61H[K[13;13H[46m([ms[19C[46m)[m)[52;163H3[13;13H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;60H[K[13;12H[46m([ms[19C[46m)[m)[52;163H2[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l[46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;59H[K[13;11H[46m([ms[19C[46m)[m)[52;163H2[13;12H[?25h[?25l([20C)[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l [46m([6C)[m[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l([6C)[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[46m([6C)[m[52;163H1[13;31H[?25h[?25l[13;11H[46m([m[12C([6C)[46m)[m[52;163H2[13;32H[?25h[?25l     [46m([m[4C([20C)[46m)[m[52;163H3[13;33H[?25h[?25l[52;163H4[13;34H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;58H[K[13;6H([4C[46m([20C)[m [52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[?25l[13;11H([12C[46m([6C)[m)[52;163H1[13;31H[?25h[?25l[13;11H[46m([m[12C([6C)[46m)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[13;11H([20C) [46m([20C)[m[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l([20C)[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[52;163H9[13;39H[?25h[?25l[52;162H40[13;40H[?25h[?25l[52;163H1[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l[52;163H4[13;44H[?25h[?25l[52;163H5[13;45H[?25h[?25l[52;163H6[13;46H[?25h[?25l [46m([6C)[m[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l([6C)[52;163H9[13;49H[?25h[?25l[52;162H50[13;50H[?25h[?25l[52;163H1[13;51H[?25h[?25l[52;163H2[13;52H[?25h[?25l[52;163H3[13;53H[?25h[?25l[46m([6C)[m[52;163H4[13;54H[?25h[?25l[13;34H[46m([m[12C([6C)[46m)[m[52;163H5[13;55H[?25h[?25l     [46m([m[27C([20C)[46m)[m[52;163H6[13;56H[?25h[?25l[12;5H[46m([m[13;6H([49C)[46m)[m[52;163H7[13;57H[?25h[?25l[52;163H8[13;58H[?25h[?25l[9;1H[46m([m[12;5H([13;57H)[14;41H[46m)[m[52;160H4,42[14;42H[?25h[?25l[52;163H1[14;41H[?25h[?25l[9;1H(
  [46m([14;40H)[m)[52;163H0[14;40H[?25h[?25l[10;3H([14;5H[46m([33C)[m)[52;162H39[14;39H[?25h[?25l    ([5C[46m([26C)[m)[52;163H8[14;38H[?25h[?25l[14;11H([4C[46m([20C)[m)[52;163H7[14;37H[?25h[?25l[14;16H([12C[46m([6C)[m)[52;163H6[14;36H[?25h[52;1H[K[14;35H[?25l[52;149H^[[14;35H[52;149H  [14;36H[14;29H([6C)[52;159H14,35[9CTop[14;35H[?25h[?25l[52;149H:[14;35H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2692B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[Kclear
[?2004l[H[2J[3J[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm 
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     2
expected:   0
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     6
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     10
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [10Pclearvim lab5-sol.scm 
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2692B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,35[9CTop[14;35H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,35[9CTop"lab5-sol.scm" 92L, 2692B[14;35H[?25h[?25l[52;160H7,30[17;30H[?25h[?25l[18;30H[38;5;224m[46m()[m[52;160H8,31[18;31H[?25h[?25l[14;5H[46m([33C)[m[18;30H[38;5;224m()[m[52;160H4,39[14;39H[?25h[?25l[52;149H~@k[14;39H[52;149H   [13;39H
    ([33C)[52;160H3[13;39H[?25h[?25l[52;149H~@k[13;39H[52;149H   [12;21H    ([46m([14C)[m[52;160H2,21[12;21H[?25h[?25l[52;149H~@k[12;21H[52;149H   [12;20H    (([6C[46m([6C)[m)[52;163H0[12;20H[?25h[?25l[52;149H~@k[12;20H[52;149H   [12;21H    ([46m([m[6C([6C)[46m)[m[52;163H1[12;21H[?25h[?25l[52;149Hi[12;21H[52;149H [12;21H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H12,21[9CTop[12;21H[?25h[?25l[12;21H[K[12;6H([6C[46m([6C)[m[52;163H0[12;20H[?25h[?25l[12;13H([6C)[52;162H19[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25lcarls)[12;20H[K[52;163H7[12;17H[?25h[?25lls)[12;19H[K[52;163H6[12;16H[?25h[?25lls)[12;18H[K[52;163H5[12;15H[?25h[?25lls)[12;17H[K[12;13H[46m([mls[46m)[m[52;163H4[12;14H[?25h[?25l[46ml[ms)[12;16H[K[12;13Hl[52;163H3[12;13H[?25h[?25l[52;163H4[12;14H[?25h[?25l    ([46m([8C)[m[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25l    (([8C)[52;160H3[13;16H[?25h[?25l[12;6H[46m([8C)[m[52;160H2[12;16H[?25h[?25l[52;163H5[12;15H[?25h[?25l    (([8C)[52;163H4[12;14H[?25h[?25l[52;163H3[12;13H[?25h[?25l[52;160H1[11;13H[?25h[?25l(ls) [95m0[m)[11;13H[46m([mls[46m)[m[52;163H4[11;14H[?25h[?25lcl[46ms[m) [95m0[m)[11;13H(cls[52;163H5[11;15H[?25h[?25lals) [95m0[m)[52;163H6[11;16H[?25h[?25lrls) [95m0[m)[52;163H7[11;17H[?25h[?25l[1m[96mcar[m ls) [95m0[m)[52;163H8[11;18H[?25h[?25l[52;163H9[11;19H[?25h[?25l[46m([6C)[m[52;162H20[11;20H[?25h[?25l[52;163H1[11;21H[?25h[?25l_ [95m0[m)[11;13H([6C)[52;163H2[11;22H[?25h[?25l [95m0[m)[11;24H[K[11;13H[46m([6C)[m[52;163H1[11;21H[?25h[?25l) [95m0[m)    ([46m([m[6C([6C)[46m)[m[52;163H2[11;22H[?25h[?25l    (([14C)[12;6H[46m([8C)[m[52;160H2,16[12;16H[?25h[?25l[52;163H5[12;15H[?25h[?25l    (([8C)[52;163H4[12;14H[?25h[?25l[52;163H3[12;13H[?25h[?25l(ls)[46m([mls[46m)[m[52;163H4[12;14H[?25h[?25lcl[46ms[m)(cls[52;163H5[12;15H[?25h[?25lals)[52;163H6[12;16H[?25h[?25lrls)[52;163H7[12;17H[?25h[?25l[1m[96mcar[m ls)[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[46m([6C)[m[52;162H20[12;20H[?25h[?25l[52;163H1[12;21H[?25h[?25l)    ([46m([m[6C([6C)[46m)[m[52;163H2[12;22H[?25h[?25l    (([14C)[52;160H3[13;22H[?25h[52;1H[K[13;21H[?25l[52;149H^[[13;21H[52;149H  [13;22H[52;159H13,21[9CTop[13;21H[?25h[?25l[52;149H:[13;21H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2698B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2698B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ([36mcar[m ls)) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,21[9CTop[13;21H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ([1m[96mcar[m ls)) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,21[9CTop"lab5-sol.scm" 92L, 2698B[13;21H[?25h[?25l[52;160H1,18[11;18H[?25h[?25l[52;149Hi[11;18H[52;149H [11;18H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H11,18[9CTop[11;18H[?25h[?25lcarls)) [95m0[m)[11;24H[K[52;163H7[11;17H[?25h[?25lls)) [95m0[m)[11;23H[K[52;163H6[11;16H[?25h[?25lls)) [95m0[m)[11;22H[K[52;163H5[11;15H[?25h[?25lls)) [95m0[m)[11;21H[K[11;13H[46m([mls[46m)[m[52;163H4[11;14H[?25h[?25l[46ml[ms)[1C [95m0[m)[11;20H[K[11;13Hls))[52;163H3[11;13H[?25h[?25l[52;163H4[11;14H[?25h[?25l    ([46m([8C)[m[52;163H5[11;15H[?25h[?25l    [46m([m([8C)[46m)[m[52;163H6[11;16H[?25h[?25l[46m [m[95m0[m)[11;19H[K[11;5H([46m([8C)[m [52;163H5[11;15H[?25h[?25l[52;163H6[11;16H[?25h[?25l    (([8C)[52;160H2[12;16H[?25h[?25l[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25lcarls)[12;21H[K[52;163H7[12;17H[?25h[?25lls)[12;20H[K[52;163H6[12;16H[?25h[?25lls)[12;19H[K[52;163H5[12;15H[?25h[?25lls)[12;18H[K[12;13H[46m([mls[46m)[m[52;163H4[12;14H[?25h[?25l[46ml[ms)[12;17H[K[12;13Hls))[52;163H3[12;13H[?25h[?25l[52;163H4[12;14H[?25h[?25l    ([46m([8C)[m[52;163H5[12;15H[?25h[?25l    [46m([m([8C)[46m)[m[52;163H6[12;16H[?25h[?25l[12;16H[K[12;5H([46m([8C)[m[52;163H5[12;15H[?25h[?25l[52;163H6[12;16H[?25h[?25l    (([8C)[52;160H3[13;16H[?25h[52;1H[K[13;15H[?25l[52;149H^[[13;15H[52;149H  [13;16H[52;159H13,15[9CTop[13;15H[?25h[?25l[52;149H:[13;15H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2686B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     2
expected:   0
--------------------
cdr: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2686B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ls)[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,15[9CTop[13;15H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ls)[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,15[9CTop"lab5-sol.scm" 92L, 2686B[13;15H[?25h[?25l[52;162H27[13;27H[?25h[?25l[52;160H2,13[12;13H[?25h[?25l[52;149Hc[12;13H[?25h[?25l[52;150Ha[12;13H[?25h[?25l[52;151Hi[12;13H[52;149H   [12;13H[?25h[?25l[52;149H([12;13H[52;149H [11;13H[52;160H1[11;13H[?25h[?25l[52;149Hc[11;13H[?25h[?25l[52;150H~@k[11;13H[52;149H    [11;5H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H11,5[10CTop[11;51r[51;1H
[1;52r[11;5H[K[51;9H[38;5;224m'()[m[52;159H[K[52;159H11,5[10CTop[11;5H[?25h[52;1H[K[11;1H[?25l[52;149H^[[11;1H[52;149H  [11;5H[52;159H11,0-1[8CTop[11;1H[?25h[?25l[52;149Hu[11;1H[52;1H1 more line; before #1  7 seconds ago[52;149H[K[12;13H[12;51r[12;1H[L[1;52r[11;5H(([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ls)[52;1H[K[52;159H12,13[9CTop1 more line; before #1  7 seconds ago[52;159H[K[52;159H12,13[9CTop[12;13H[?25h[?25l[52;149H~@k[12;13H[52;149H   [13;13H[52;160H3[13;13H[?25h[?25l[52;149H~@k[13;13H[52;149H   [12;13H[52;160H2[12;13H[?25h[?25l[52;149H~@k[12;13H[52;149H   [13;13H[52;160H3[13;13H[?25h[?25l[52;149H~@k[13;13H[52;149H   [12;13H[52;160H2[12;13H[?25h[?25l[52;149H~@k[12;13H[52;149H   [12;12H[52;163H2[12;12H[?25h[?25l[52;149H~@k[12;12H[52;149H   [13;12H[52;160H3[13;12H[?25h[?25l[52;149H~@k[13;12H[52;149H   [13;11H[46m([20C)[m[52;163H1[13;11H[?25h[?25l[52;149H~@k[13;11H[52;149H   [13;10H ([20C)[52;163H0[13;10H[?25h[?25l[52;149H~@k[13;10H[52;149H   [12;10H[52;160H2[12;10H[?25h[?25l[52;149H~@k[12;10H[52;149H   [12;11H[52;163H1[12;11H[?25h[?25l[52;149H~@k[12;11H[52;149H   [12;12H[52;163H2[12;12H[?25h[?25l[52;149H~@k[12;12H[52;149H   [12;13H[52;163H3[12;13H[?25h[?25l[52;149Hi[12;13H[52;149H [12;13H[52;1H[1m-- INSERT --[m[52;14H[K[52;159H12,13[9CTop[12;13H[?25h[?25l(ls)[46m([mls[46m)[m[52;163H4[12;14H[?25h[?25lcl[46ms[m)(cls[52;163H5[12;15H[?25h[?25lals)[52;163H6[12;16H[?25h[?25l ls)[52;163H7[12;17H[?25h[?25lls)[12;19H[K[52;163H6[12;16H[?25h[?25ltls)[52;163H7[12;17H[?25h[?25l ls)[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[46m([mcat ls[46m)[m[52;162H20[12;20H[?25h[?25l[12;13H(cat ls)[52;162H19[12;19H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H7[12;17H[?25h[?25l ls)[12;20H[K[52;163H6[12;16H[?25h[?25l[1m[96mcar[m ls)[52;163H7[12;17H[?25h[?25l[52;163H8[12;18H[?25h[?25l[52;163H9[12;19H[?25h[?25l[46m([6C)[m[52;162H20[12;20H[?25h[?25l[52;163H1[12;21H[?25h[?25l)    ([46m([m[6C([6C)[46m)[m[52;163H2[12;22H[?25h[?25l    (([14C)[52;160H3[13;22H[?25h[?25l[52;160H4[14;22H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H0[14;20H[?25h[?25l[52;162H19[14;19H[?25h[?25l[52;163H8[14;18H[?25h[?25l[46m([20C)[m[52;163H7[14;17H[?25h[?25l[52;163H6[14;16H[?25h[?25l([20C)[52;160H5,2-9[15;9H[?25h[?25l[14;16H[46m([20C)[m[52;160H4,16 [14;16H[?25h[?25l([20C)[52;163H5[14;15H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H3[14;13H[?25h[?25l[46m([26C)[m[52;163H2[14;12H[?25h[?25l([26C)[52;163H3[14;13H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H5[14;15H[?25h[?25l [46m([20C)[m[52;163H6[14;16H[?25h[52;1H[K[14;15H[?25l[52;149H^[[14;15H[52;149H  [14;16H([20C)[52;159H14,15[9CTop[14;15H[?25h[?25l[52;149H:[14;15H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2692B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2692B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,15[9CTop[14;15H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,15[9CTop"lab5-sol.scm" 92L, 2692B[14;15H[?25h[?25l[52;162H22[14;22H[?25h[?25l[52;149H~@k[14;22H[52;149H   [15;8H[52;160H5,1-8[15;8H[?25h[?25l[52;149H~@k[15;8H[52;149H   [14;22H[52;160H4,22 [14;22H[?25h[?25l[52;149H~@k[14;22H[52;149H   [14;21H[52;163H1[14;21H[?25h[?25l[52;149H~@k[14;21H[52;149H   [14;20H[52;163H0[14;20H[?25h[?25l[52;149H~@k[14;20H[52;149H   [14;19H[52;162H19[14;19H[?25h[?25l[52;149H~@k[14;19H[52;149H   [14;18H[52;163H8[14;18H[?25h[?25l[52;149H~@k[14;18H[52;149H   [14;17H[52;163H7[14;17H[?25h[?25l[52;149H~@k[14;17H[52;149H   [14;16H[46m([20C)[m[52;163H6[14;16H[?25h[?25l[52;149H~@k[14;16H[52;149H   [14;15H ([20C)[52;163H5[14;15H[?25h[?25l[52;149H~@k[14;15H[52;149H   [14;14H[52;163H4[14;14H[?25h[?25l[52;149H~@k[14;14H[52;149H   [14;13H[52;163H3[14;13H[?25h[?25l[52;149H~@k[14;13H[52;149H   [14;12H[52;163H2[14;12H[?25h[?25l[52;149H~@k[14;12H[52;149H   [14;11H[46m([26C)[m[52;163H1[14;11H[?25h[?25l[52;149H^M[14;11H[52;149H  [15;8H[14;11H([26C)[52;160H5,1-8[15;8H[?25h[?25l[52;149H~@k[15;8H[52;149H   [14;8H[52;160H4,8  [14;8H[?25h[?25l[52;149H~@k[14;8H[52;149H   [14;9H[52;162H9[14;9H[?25h[?25l[52;149H~@k[14;9H[52;149H   [14;10H[52;162H10[14;10H[?25h[?25l[52;149H~@k[14;10H[52;149H   [14;11H[46m([26C)[m[52;163H1[14;11H[?25h[?25l[52;149H~@k[14;11H[52;149H   [14;12H([26C)[52;163H2[14;12H[?25h[?25l[52;149H~@k[14;12H[52;149H   [14;11H[46m([26C)[m[52;163H1[14;11H[?25h[?25l[52;149Hi[14;11H[52;149H [14;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,11[9CTop[14;11H[?25h[?25l[15;51r[15;1H[L[1;52r[14;11H[K[15;7H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))[52;159H[K[52;159H15,7[10CTop[15;7H[46m([26C)[15;7H[?25h[?25l[m([26C)[52;160H4[14;7H[?25h[?25l[52;162H8[14;8H[?25h[?25l[52;162H9[14;9H[?25h[?25l[52;162H10[14;10H[?25h[?25l[15;51r[15;1H[L[1;52r[52;159H[K[52;159H15,7[10CTop[15;7H[?25h[?25l([46m([16;35H)[m[52;162H8[15;8H[?25h[?25li([16;35H)[52;162H9[15;9H[?25h[?25l[93mif[m[52;162H10[15;10H[?25h[?25l[52;163H1[15;11H[?25h[?25l([46m([16;35H)[m[52;163H2[15;12H[?25h[?25ll([16;35H)[52;163H3[15;13H[?25h[?25ls[52;163H4[15;14H[?25h[?25l[52;163H5[15;15H[?25h[?25l[52;163H4[15;14H[?25h[?25l[15;13H[K[52;163H3[15;13H[?25h[?25l[15;12H[K[15;11H[46m([16;35H)[m[52;163H2[15;12H[?25h[?25ln([16;35H)[52;163H3[15;13H[?25h[?25lu[52;163H4[15;14H[?25h[?25ll[52;163H5[15;15H[?25h[?25ll[52;163H6[15;16H[?25h[?25l[1m[96mnull?[m[52;163H7[15;17H[?25h[?25l[52;163H8[15;18H[?25h[?25ll[52;163H9[15;19H[?25h[?25ls[52;162H20[15;20H[?25h[?25l)[15;11H[46m([8C)[m[52;163H1[15;21H[?25h[?25l[16;51r[16;1H[L[1;52r[52;159H[K[52;159H16,2-9[8CTop[15;11H([8C)[16;9H[?25h[?25l([46m([17;35H)[m[52;162H3-10[16;10H[?25h[?25ls([17;35H)[52;162H4-11[16;11H[?25h[?25lu[52;162H5-12[16;12H[?25h[?25lm[52;162H6-13[16;13H[?25h[?25l-[52;162H7-14[16;14H[?25h[?25ll[52;162H8-15[16;15H[?25h[?25le[52;162H9-16[16;16H[?25h[?25ln[52;162H10-17[16;17H[?25h[?25lg[52;163H1-18[16;18H[?25h[?25lth[52;163H3-20[16;20H[?25h[?25ls[52;163H4-21[16;21H[?25h[?25l([46m([17;35H)[m[52;163H5-22[16;22H[?25h[?25lc([17;35H)[52;163H6-23[16;23H[?25h[?25ld[52;163H7-24[16;24H[?25h[?25l[1m[96mcdr[m[52;163H8-25[16;25H[?25h[?25lcd[16;24H[K[52;163H7-24[16;24H[?25h[?25l[16;23H[K[52;163H6-23[16;23H[?25h[?25l[16;22H[K[16;21H[46m([17;35H)[m[52;163H5-22[16;22H[?25h[?25l[16;21H[K[17;35H)[52;163H4-21[16;21H[?25h[?25l[52;163H5-22[16;22H[?25h[?25l([46m([17;35H)[m[52;163H6-23[16;23H[?25h[?25lc([17;35H)[52;163H7-24[16;24H[?25h[?25ld[52;163H8-25[16;25H[?25h[?25l[1m[96mcdr[m[52;163H9-26[16;26H[?25h[?25l[52;162H20-27[16;27H[?25h[?25ll[52;163H1-28[16;28H[?25h[?25ls[52;163H2-29[16;29H[?25h[?25l([46m([17;35H)[m[52;163H3-30[16;30H[?25h[?25l[16;29H[K[17;35H)[52;163H2-29[16;29H[?25h[?25l)[16;22H[46m([6C)[m[52;163H3-30[16;30H[?25h[?25l)[16;9H[46m([m[12C([6C)[46m)[m[52;163H4-31[16;31H[?25h[?25l)[15;7H[46m([m[16;9H([20C)[46m)[m[52;163H5-32[16;32H[?25h[?25l[15;7H([16;31H)[17;7H[46m([26C)[m[52;160H7,7    [17;7H[?25h[?25l[11;5H[46m([12C)[m[17;7H([26C)[52;160H1,19[11;19H[?25h[?25l    ([12C)[12;6H[46m([14C)[m[52;160H2,22[12;22H[?25h[?25l    (([14C)[13;24H[46m([6C)[m[52;160H3,24[13;24H[?25h[?25l([6C)[52;160H4,10[14;10H[?25h[?25l[15;11H[46m([8C)[m[52;160H5,21[15;21H[?25h[?25l[15;7H[46m([m[3C([8C)[16;31H[46m)[m[52;162H7 [15;7H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[15;8H[52;159H15,8[10CTop[15;8H[48;5;242m([m[16;31H)[15;8H[?25h[?25l[52;149H3[15;9H[93m[48;5;242mi[m[52;162H9[15;9H[?25h[?25l[52;149H4[15;10H[93m[48;5;242mf[m[52;162H10[15;10H[?25h[?25l[52;149H5[15;11H[48;5;242m [m[46m([8C)[m[52;163H1[15;11H[?25h[?25l[52;149H6[15;12H[48;5;242m([m[8C)[52;163H2[15;12H[?25h[?25l[52;149H7[15;13H[1m[96m[48;5;242mn[m[1m[96mull?[m [52;163H3[15;13H[?25h[?25l[52;149H8[15;14H[1m[96m[48;5;242mu[m[1m[96mll?[m [52;163H4[15;14H[?25h[?25l[52;149H2[16;15H[15;14H[1m[96m[48;5;242mll?[m[48;5;242m ls) 
        (sum-l[m[52;160H6,8-15[16;15H[?25h[?25le[48;5;242me[m[52;162H9-16[16;16H[?25h[?25ln[48;5;242mn[m[52;162H10-17[16;17H[?25h[?25lg[48;5;242mg[m[52;163H1-18[16;18H[?25h[?25lt[48;5;242mt[m[52;163H2-19[16;19H[?25h[?25lh[48;5;242mh[m[52;163H3-20[16;20H[?25h[?25ls[48;5;242ms[m[52;163H4-21[16;21H[?25h[?25l [48;5;242m [m[46m([6C)[m[52;163H5-22[16;22H[?25h[?25l[1C[48;5;242m([m[6C)[52;163H6-23[16;23H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mdr[m [52;163H7-24[16;24H[?25h[?25l[1C[1m[96m[48;5;242md[m[1m[96mr[m [52;163H8-25[16;25H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;163H9-26[16;26H[?25h[?25l [48;5;242m [m[52;162H20-27[16;27H[?25h[?25ll[48;5;242ml[m[52;163H1-28[16;28H[?25h[?25ls[48;5;242ms[m[46m)[m[52;163H2-29[16;29H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H3-30[16;30H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H4-31[16;31H[?25h[?25l[?25h[?25l[52;149Hc[16;31H[52;149H [15;7H[52;4H[1mINSERTt --[m[52;13H[K[52;159H15,7[10CTop[15;51r[51;1H
[1;52r[15;1H      [15;7H[K[16;24H[46m [m[51;1H([93mdefine[m greater-than[52;159H[K[52;159H15,7[10CTop[16;24H [15;7H[?25h[?25l[52;162H6[15;6H[?25h[?25l[52;162H5[15;5H[?25h[?25l[52;162H4[15;4H[?25h[?25l[52;160H6[16;4H[?25h[?25l[52;162H5[16;5H[?25h[?25l[52;162H6[16;6H[?25h[?25l [46m([26C)[m[52;162H7[16;7H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[16;37H[K[16;6H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H6[16;6H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[16;36H[K[16;5H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H5[16;5H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[16;35H[K[16;4H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H4[16;4H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[16;34H[K[16;3H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H3[16;3H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[16;33H[K[16;2H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H2[16;2H[?25h[?25l[15;51r[51;1H
[1;52r[15;2H ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))[51;3H([93mlambda[m (ls (v [95m0[m))[52;159H[K[52;159H15,3[10CTop[15;3H[46m([26C)[m  [?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[15;33H[K[15;2H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H2[15;2H[?25h[?25l([1m[96m[46m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls)[15;32H[K[15;1H[46m([m[1m[96m+[m [24C[46m)[m)[52;162H1[15;1H[?25h[?25l[14;51r[51;1H
[1;52r[14;1H    ([93melse[m([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))
[46m        [m[51;5H([93mif[m ([1m[96mnull?[m ls)[52;159H[K[52;159H14,10[9CTop[14;10H[46m([26C)[m
        [14;10H[?25h[?25l[46m [m([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls[5C)[14;10H [46m([m[25C)[46m)[m[52;163H1[14;11H[?25h[?25l[12;5H[46m([13;57H)[m[14;11H([26C)[52;160H3,58[13;58H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,5[10CTop[12;5H([13;57H)
    [?25h[?25l([46m([15;40H)[m[52;162H6[14;6H[?25h[?25l(([46m([m[52;162H7[14;7H[?25h[?25le([15;40H)[52;162H8[14;8H[?25h[?25lq[52;162H9[14;9H[?25h[?25lu[52;162H10[14;10H[?25h[?25la[52;163H1[14;11H[?25h[?25ll[52;163H2[14;12H[?25h[?25l[1m[96mequal?[m[52;163H3[14;13H[?25h[?25l[52;163H4[14;14H[?25h[?25l([46m([15;40H)[m[52;163H5[14;15H[?25h[?25lc([15;40H)[52;163H6[14;16H[?25h[?25la[52;163H7[14;17H[?25h[?25l[1m[96mcar[m[52;163H8[14;18H[?25h[?25l[52;163H9[14;19H[?25h[?25ll[52;162H20[14;20H[?25h[?25ls[52;163H1[14;21H[?25h[?25l)[14;14H[46m([6C)[m[52;163H2[14;22H[?25h[?25l[14;14H([6C)[52;163H3[14;23H[?25h[?25l[38;5;224m'[m[52;163H4[14;24H[?25h[?25l[38;5;224m(
    ([melse [38;5;224m([m+ [2C[38;5;224m([12C([mcdr ls[38;5;224m)))))[m[14;24H[38;5;224m[46m([15;40H)[m[52;163H5[14;25H[?25h[?25l[38;5;224m)[m
    ([93melse[m ([1m[96m+[m[3C([12C([1m[96mcdr[m ls))))[46m)[m[14;25H[38;5;224m[46m)[m[15;40H)[52;163H6[14;26H[?25h[?25l)    ([46m([m[17C[38;5;224m()[m[46m)[m[52;163H7[14;27H[?25h[?25l[15;51r[15;1H[L[1;52r[52;159H[K[52;159H15,6[10CTop[14;6H([19C)[15;6H[?25h[?25l([46m([16;40H)[m[52;162H7[15;7H[?25h[?25ls([16;40H)[52;162H8[15;8H[?25h[?25lu[52;162H9[15;9H[?25h[?25lm[52;162H10[15;10H[?25h[?25l-[52;163H1[15;11H[?25h[?25ll[52;163H2[15;12H[?25h[?25le[52;163H3[15;13H[?25h[?25ln[52;163H4[15;14H[?25h[?25lg[52;163H5[15;15H[?25h[?25lt[52;163H6[15;16H[?25h[?25lh[52;163H7[15;17H[?25h[?25ls[52;163H8[15;18H[?25h[?25l[52;163H9[15;19H[?25h[?25l([46m([16;40H)[m[52;162H20[15;20H[?25h[?25lc([16;40H)[52;163H1[15;21H[?25h[?25ld[52;163H2[15;22H[?25h[?25l[1m[96mcdr[m[52;163H3[15;23H[?25h[?25l[52;163H4[15;24H[?25h[?25ll[52;163H5[15;25H[?25h[?25ls[52;163H6[15;26H[?25h[?25l)[15;19H[46m([6C)[m[52;163H7[15;27H[?25h[?25l)     [46m([m[12C([6C)[46m)[m[52;163H8[15;28H[?25h[?25l)[14;5H[46m([m[15;6H([20C)[46m)[m[52;163H9[15;29H[?25h[?25l[14;5H([15;28H)[52;160H6,33[16;33H[?25h[?25l[14;5H[46m([15;28H)[m[52;160H5,29[15;29H[?25h[?25l[14;5H([46m([19C)[m[15;28H)[52;160H4,27[14;27H[?25h[52;1H[K[14;26H[?25l[52;149H^[[14;26H[52;149H  [14;27H[52;159H14,26[9CTop[14;26H[?25h[?25l[52;149H:[14;26H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2748B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:21:0
actual:     6
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:22:0
actual:     10
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:30:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:31:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:43:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:44:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:71:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:72:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:81:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:92:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:93:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2748B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([106m([m[36mequal?[m ([36mcar[m ls) [35m'()[m[106m)[m[15;6H(sum-lengths ([36mcdr[m ls)))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H14,26[9CTop[14;26H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([46m([m[1m[96mequal?[m ([1m[96mcar[m ls) [38;5;224m'()[m[46m)[m[15;6H(sum-lengths ([1m[96mcdr[m ls)))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H14,26[9CTop"lab5-sol.scm" 94L, 2748B[14;26H[?25h[?25l    (([19C)[52;159H22,35[22;35H[?25h[?25l[52;160H1[21;35H[?25h[?25l[11;6H[46m([8C)[m[52;159H11,6 [11;6H[?25h[?25l[46m([m([8C)[2C[46m)[m[52;162H5[11;5H[?25h[?25l([12C)[14;6H[46m([19C)[m[52;160H4,26[14;26H[?25h[?25l    (([19C)[15;6H[46m([20C)[m[52;160H5,27[15;27H[?25h[?25l     ([20C)[52;162H7 [15;7H[?25h[?25l[52;149Hi[15;7H[52;149H [15;7H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H15,7[10CTop[15;7H[?25h[?25l0sum-lengths ([1m[96mcdr[m ls)))[52;162H8[15;8H[?25h[?25l[95m0[m sum-lengths ([1m[96mcdr[m ls)))[52;162H9[15;9H[?25h[?25l+sum-lengths ([1m[96mcdr[m ls)))[52;162H10[15;10H[?25h[?25l[1m[96m+[m sum-lengths ([1m[96mcdr[m ls)))[52;163H1[15;11H[?25h[?25l[14;6H[46m([19C)[m[52;160H4,27[14;27H[?25h[?25l    (([19C)[52;163H0[14;20H[?25h[?25l[52;160H6,33[16;33H[?25h[52;1H[K[16;32H[?25l[52;149H^[[16;32H[52;149H  [16;33H[52;159H16,32[9CTop[16;32H[?25h[?25l[52;149H:[16;32H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2752B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...:
   #<procedure:+>
   #<procedure:sum-lengths>
   '(())
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2752B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    (([36mequal?[m ([36mcar[m ls) [35m'()[m)[15;6H([31m0[m [36m+[m sum-lengths ([36mcdr[m ls)))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H16,32[9CTop[16;32H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    (([1m[96mequal?[m ([1m[96mcar[m ls) [38;5;224m'()[m)[15;6H([95m0[m [1m[96m+[m sum-lengths ([1m[96mcdr[m ls)))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H16,32[9CTop"lab5-sol.scm" 94L, 2752B[16;32H[?25h[?25l[52;160H5,11[15;11H[?25h[?25l[52;149Hi[15;11H[52;149H [15;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H15,11[9CTop[15;11H[?25h[?25l+sum-lengths ([1m[96mcdr[m ls)[15;32H[K[52;163H0[15;10H[?25h[?25lsum-lengths ([1m[96mcdr[m ls)[15;31H[K[52;162H9 [15;9H[?25h[?25l0sum-lengths ([1m[96mcdr[m ls)[15;30H[K[52;162H8[15;8H[?25h[?25lsum-lengths ([1m[96mcdr[m ls)[15;29H[K[15;6H[46m([20C)[m[52;162H7[15;7H[?25h[?25l([20C)[52;160H6,28[16;28H[?25h[?25l[52;162H35[16;35H[?25h[?25l    [46m([33C)[m[52;163H9[16;39H[?25h[?25l    ([23C[46m([6C)[m)))[52;163H6[16;36H[?25h[?25l[16;29H([6C)[52;163H3[16;33H[?25h[?25lcd ls)[16;41H[K[52;163H2[16;32H[?25h[?25l ls)[16;40H[K[52;163H1[16;31H[?25h[?25la ls))))))[52;163H2[16;32H[?25h[?25l[1m[96mcar[m ls))))))[52;163H3[16;33H[?25h[?25l[9;1H[46m([16;41H)[m[52;162H42[16;42H[?25h[52;1H[K[16;41H[?25l[52;149H^[[16;41H[52;149H  [16;42H[52;159H16,41[9CTop[16;41H[?25h[?25l[52;149HL[16;41H[52;149H [46;1H[9;1H([16;41H)[52;159H46,1 [46;1H[?25h[?25l[52;149Hx[46;1H[52;149H [46;1H[52;149Hdl[46;1H[52;149H  [46;1H[1C[96mExercise 2[m[46;12H[K[46;1H[?25h[?25l[52;149Hi[46;1H[52;149H [46;1H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H46,1[10CTop[46;1H[?25h[?25l[1C[96m;Exercise 2[m[52;162H2[46;2H[?25h[?25l[1C[96m;Exercise 2[m[52;162H3[46;3H[?25h[?25l[52;160H5,1[45;1H[?25h[?25l[52;160H6,3[46;3H[?25h[?25l[52;162H4[46;4H[?25h[?25l[96mExercise 2[m[46;13H[K[52;162H3[46;3H[?25h[52;1H[K[46;2H[?25l[52;149H^[[46;2H[52;149H  [46;3H[52;159H46,2[10CTop[46;2H[?25h[?25l[52;149H:[46;2H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2748B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2748B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    (([36mequal?[m ([36mcar[m ls) [35m'()[m)[15;6H(sum-lengths ([36mcdr[m ls)))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcar[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H46,2[10CTop[46;2H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    (([1m[96mequal?[m ([1m[96mcar[m ls) [38;5;224m'()[m)[15;6H(sum-lengths ([1m[96mcdr[m ls)))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H46,2[10CTop"lab5-sol.scm" 94L, 2748B[46;2H[?25h[?25l[52;159H15,25[15;25H[?25h[?25l[52;160H6,33[16;33H[?25h[?25l[52;149H~@k[16;33H[52;149H   [16;32H[52;163H2[16;32H[?25h[?25l[52;149H~@k[16;32H[52;149H   [16;33H[52;163H3[16;33H[?25h[?25l[52;149Hi[16;33H[52;149H [16;33H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H16,33[9CTop[16;33H[?25h[?25lca ls)[16;41H[K[52;163H2[16;32H[?25h[?25l ls)[16;40H[K[52;163H1[16;31H[?25h[?25l ls)[16;39H[K[16;29H[46m([m ls[46m)[m[52;163H0[16;30H[?25h[?25lc l[46ms[m))))))[16;29H(c ls[52;163H1[16;31H[?25h[?25ld ls))))))[52;163H2[16;32H[?25h[?25l[1m[96mcdr[m ls))))))[52;163H3[16;33H[?25h[?25l[14;6H[46m([19C)[m[52;160H4,27[14;27H[?25h[?25l[11;5H[46m([12C)[m[14;6H([19C)[52;160H1,5 [11;5H[?25h[?25l[96m[46m;[m[96m((null? ls) [m[96m[46m0[m[96m)[m    [96m;[m[96m[46m([m[11C[96m0[m[96m[46m)[m[52;162H6[11;6H[?25h[?25l[96m[46m;[m[1C[96m(null? ls) [m[96m[46m0[m[96m)[11;6H;[m[96m[46m([m[11C[96m0[m[96m[46m)[m[52;162H7[11;7H[?25h[?25l[52;162H21[11;21H[?25h[?25l[11;7H[96m([12C)[m[14;24H[38;5;224m[46m()[m[52;160H4,25[14;25H[?25h[?25l    [46m([m[18C[38;5;224m()[m[15;28H[46m)[m[52;160H5,28[15;28H[?25h[?25l[11;7H[96m[46m([12C)[m[14;5H([15;28H)[52;160H1,7 [11;7H[?25h[?25l[96m([1Cnull? ls) 0)[m[11;20H[K[11;6H[96m[46m([m[96m([m[11C[96m[46m)[m[52;162H6[11;6H[?25h[?25l([46m([m[1m[96mnull?[m ls) [95m0[m)[11;19H[K[11;5H[46m([m([11C[46m)[m[52;162H5[11;5H[?25h[?25l[52;162H19[11;19H[?25h[?25l    ([12C)[52;160H3,23[13;23H[?25h[52;1H[K[13;22H[?25l[52;149H^[[13;22H[52;149H  [13;23H[52;159H13,22[9CTop[13;22H[?25h[?25l[52;149H:[13;22H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2748B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote05:~/i471a/submit/lab5$ [?2004l
exit

Script done on 2022-03-03 13:38:39-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-03-03 13:48:34-05:00 [TERM="xterm-256color" TTY="/dev/pts/8" COLUMNS="176" LINES="52"]
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ exit[2Pcdgit pushcommit -m 'working on exercise 1'add .[Kscript -a lab5.LOG[10Pcd lab5/[3P..git branchcd i471a/submit/lab4/ls[Kvim lab5-sol.scm 
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2748B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    (([36mequal?[m ([36mcar[m ls) [35m'()[m)[15;6H(sum-lengths ([36mcdr[m ls)))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H13,22[9CTop[13;22H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    (([1m[96mequal?[m ([1m[96mcar[m ls) [38;5;224m'()[m)[15;6H(sum-lengths ([1m[96mcdr[m ls)))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H13,22[9CTop"lab5-sol.scm" 94L, 2748B[13;22H[?25h[?25l[52;162H36[13;36H[?25h[?25l[13;11H[46m([20C)[m[52;162H11[13;11H[?25h[?25l([20C)[52;160H4,22[14;22H[?25h[?25l    ([46m([19C)[m[52;163H6[14;26H[?25h[?25l    (([19C)[52;160H3,20[13;20H[?25h[?25l[52;162H8 [13;8H[?25h[?25l
    [46m([15;28H)[m[52;160H5,28[15;28H[?25h[?25l[14;5H([46m([19C)[m[15;28H)[52;160H4,6 [14;6H[?25h[?25l[46m([m([19C)[15;28H[46m)[m[52;162H5[14;5H[?25h[?25l[52;149Hi[14;5H[52;149H [14;5H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,5[10CTop[14;5H[?25h[?25l[96m[46m;[m[96m((equal? (car ls) '())[m    [96m;[m[96m[46m([m[52;162H6[14;6H[?25h[?25l[96m[46m;[m[1C[96m(equal? (car ls) '())[14;6H;[m[96m[46m([m[52;162H7[14;7H[?25h[?25l[96m([m[15;6H[46m([20C)[m)[52;160H5,6[15;6H[?25h[?25l[96m[46m;[m[96m(sum-lengths (cdr ls[m[96m[46m)[m[96m))[m     [96m;[m[96m[46m([m[19C[96m)[m[96m[46m)[m[52;162H7[15;7H[?25h[?25l[96m[46m;[m[96m(sum-lengths (cdr ls[2C)[15;7H;[m[96m[46m([m[19C[96m)[m[96m[46m)[m[52;162H8[15;8H[?25h[?25l[96m([20C)[m[16;16H[46m([20C)[m[52;160H6,37[16;37H[?25h[?25l[9;1H[46m([m[16;16H([20C))))[46m)[m[52;162H41[16;41H[?25h[?25l[9;1H([14;16H[96m[46m([6C)[m[16;41H)[52;160H4,23[14;23H[?25h[?25l[12;6H[46m([14C)[m[14;16H[96m(car ls)[m[52;160H2,22[12;22H[?25h[?25l    (([14C)[20;1H[46m([34C)[m[52;159H20,1 [20;1H[?25h[?25l[96m[46m;[m[96m(check-eq? (sum-lengths '(() ())) [m[96m[46m0[m[96m);[m[96m[46m([m[33C[96m0[m[96m[46m)[m[52;162H2[20;2H[?25h[?25l[96m[46m;[m[96m(check-eq? (sum-lengths '(() ())) [m[96m[46m0[m[96m);;[m[96m[46m([m[33C[96m0[m[96m[46m)[m[52;162H3[20;3H[?25h[52;1H[K[20;2H[?25l[52;149H^[[20;2H[52;149H  [20;3H[96m([34C)[m[52;159H20,2[10CTop[20;2H[?25h[?25l[52;149H:[20;2H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2754B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm exit[K[2Pcdgit pushcommit -m 'working on exercise 1'add .[Kscript -a lab5.LOG[10Pcd lab5/[3P..git branchcd i471a/submit/lab4/ls[Kvim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:21:0
actual:     6
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:22:0
actual:     10
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:30:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:31:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:43:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:44:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:71:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:72:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:81:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:92:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:93:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2754B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    [34m;;((equal? (car ls) '())[15;6H;;(sum-lengths (cdr ls)))[m
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H20,2[10CTop[20;2H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    [96m;;((equal? (car ls) '())[15;6H;;(sum-lengths (cdr ls)))[m
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H20,2[10CTop"lab5-sol.scm" 94L, 2754B[20;2H[?25h[?25l[52;160H2,32[22;32H[?25h[?25l[52;160H1,30[21;30H[?25h[?25l[52;162H41[21;41H[?25h[?25l[52;159H16,24[16;24H[?25h[?25l[16;16H[46m([20C)[m[52;162H16[16;16H[?25h[?25l[52;149Hi[16;16H[52;149H [16;16H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H16,16[9CTop[16;16H[?25h[?25l[14;8H[96m[46m([19C)[m[16;16H([20C)[52;160H4,8 [14;8H[?25h[?25l[96m[46m([m[96m([19C)[m[15;30H[96m[46m)[m[52;162H7[14;7H[?25h[?25l[13;11H[46m([20C)[m[14;7H[96m([15;30H)[m[52;160H3,11[13;11H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;57H[K[13;10H[46m([ms[19C[46m)[m [52;163H0[13;10H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;56H[K[13;9H[46m([ms[19C[46m)[m [52;162H9 [13;9H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;8H[46m([ms[19C[46m)[m [52;162H8[13;8H[?25h[?25l[46m [m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;8H [46m([m[19C)[46m)[m[52;162H9[13;9H[?25h[?25l([20C)[52;160H5,16[15;16H[?25h[?25l[16;16H[46m([20C)[m[52;160H6[16;16H[?25h[?25l([20C)[52;163H5[16;15H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[16;41H[K[52;163H4[16;14H[?25h[?25l( (sum-lengths ([1m[96mcdr[m ls))))))[16;14H[46m([23C)[m[52;163H5[16;15H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls[5C)[16;15H[46m)[m[22C)[52;163H6[16;16H[?25h[?25l[52;163H5[16;15H[?25h[?25l[46ms[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;15Hs[46m)[m[52;163H6[16;16H[?25h[?25l[46mu[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;16Hu[46m)[m[52;163H7[16;17H[?25h[?25l[46mm[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;17Hm[46m)[m[52;163H8[16;18H[?25h[?25l[46m-[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;18H-[46m)[m[52;163H9[16;19H[?25h[?25l[46ml[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;19Hl[46m)[m[52;162H20[16;20H[?25h[?25l[46me[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;20He[46m)[m[52;163H1[16;21H[?25h[?25l[46mn[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;21Hn[46m)[m[52;163H2[16;22H[?25h[?25l[46mg[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;22Hg[46m)[m[52;163H3[16;23H[?25h[?25l[46mt[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;23Ht[46m)[m[52;163H4[16;24H[?25h[?25l[46mh[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;24Hh[46m)[m[52;163H5[16;25H[?25h[?25l[46ms[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;25Hs[46m)[m[52;163H6[16;26H[?25h[?25l[46m [m) (sum-lengths ([1m[96mcdr[m ls))))))[16;26H [46m)[m[52;163H7[16;27H[?25h[?25l[46mc[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;27Hc[46m)[m[52;163H8[16;28H[?25h[?25l[46ma[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;28Ha[46m)[m[52;163H9[16;29H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;29H[1m[96mr[m[46m)[m[52;162H30[16;30H[?25h[?25lca)[46m [m(sum-lengths ([1m[96mcdr[m ls)[16;57H[K[16;29H[46m)[m [52;162H29[16;29H[?25h[?25l)[46m [m(sum-lengths ([1m[96mcdr[m ls)[16;56H[K[16;28H[46m)[m [52;163H8[16;28H[?25h[?25l)[46m [m(sum-lengths ([1m[96mcdr[m ls)[16;55H[K[16;27H[46m)[m [52;163H7[16;27H[?25h[?25l[46m([m) (sum-lengths ([1m[96mcdr[m ls))))))[16;14H([13C[46m)[m[52;163H8[16;28H[?25h[?25l[46mc[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;28Hc[46m)[m[52;163H9[16;29H[?25h[?25l[46ma[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;29Ha[46m)[m[52;162H30[16;30H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;30H[1m[96mr[m[46m)[m[52;163H1[16;31H[?25h[?25l[46m [m) (sum-lengths ([1m[96mcdr[m ls))))))[16;31H [46m)[m[52;163H2[16;32H[?25h[?25l[46ml[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;32Hl[46m)[m[52;163H3[16;33H[?25h[?25l[46ms[m) (sum-lengths ([1m[96mcdr[m ls))))))[16;33Hs[46m)[m[52;163H4[16;34H[?25h[?25l[1C) (sum-lengths ([1m[96mcdr[m ls))))))[16;14H[46m([m[12C([6C)[46m)[m[52;163H5[16;35H[?25h[?25l[16;14H([20C)[52;162H48[16;48H[?25h[52;1H[K[16;47H[?25l[52;149H^[[16;47H[52;149H  [16;48H[52;159H16,47[9CTop[16;47H[?25h[?25l[52;149H:[16;47H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2773B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2773B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    [34m;;((equal? (car ls) '())[15;6H;;(sum-lengths (cdr ls)))[m
    ([38;5;130melse[m ([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H16,47[9CTop[16;47H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    [96m;;((equal? (car ls) '())[15;6H;;(sum-lengths (cdr ls)))[m
    ([93melse[m ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H16,47[9CTop"lab5-sol.scm" 94L, 2773B[16;47H[?25h[?25l[52;160H7,1-8[17;8H[?25h[?25l[16;14H[46m([20C)[m[52;160H6,35 [16;35H[?25h[?25l[52;149H~@k[16;35H[52;149H   [16;36H[16;14H([20C)[52;163H6[16;36H[?25h[?25l[52;149H~@k[16;36H[52;149H   [16;35H[16;14H[46m([20C)[m[52;163H5[16;35H[?25h[?25l[52;149H~@k[16;35H[52;149H   [16;34H[16;14H([12C[46m([6C)[m)[52;163H4[16;34H[?25h[?25l[52;149H~@k[16;34H[52;149H   [16;33H([6C)[52;163H3[16;33H[?25h[?25l[52;149H~@k[16;33H[52;149H   [16;32H[52;163H2[16;32H[?25h[?25l[52;149H~@k[16;32H[52;149H   [16;31H[52;163H1[16;31H[?25h[?25l[52;149H~@k[16;31H[52;149H   [16;30H[52;163H0[16;30H[?25h[?25l[52;149H~@k[16;30H[52;149H   [16;29H[52;162H29[16;29H[?25h[?25l[52;149H~@k[16;29H[52;149H   [16;28H[52;163H8[16;28H[?25h[?25l[52;149H~@k[16;28H[52;149H   [16;27H[46m([6C)[m[52;163H7[16;27H[?25h[?25l[52;149H~@k[16;27H[52;149H   [16;26H ([6C)[52;163H6[16;26H[?25h[?25l[52;149H~@k[16;26H[52;149H   [16;25H[52;163H5[16;25H[?25h[?25l[52;149H~@k[16;25H[52;149H   [16;24H[52;163H4[16;24H[?25h[?25l[52;149H~@k[16;24H[52;149H   [16;25H[52;163H5[16;25H[?25h[?25l[52;149H~@k[16;25H[52;149H   [16;26H[52;163H6[16;26H[?25h[?25l[52;149H~@k[16;26H[52;149H   [16;27H[46m([6C)[m[52;163H7[16;27H[?25h[?25l[52;149Hi[16;27H[52;149H [16;27H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H16,27[9CTop[16;27H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;62H[K[16;26H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H6[16;26H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;61H[K[16;25H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H5[16;25H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;60H[K[16;24H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H4[16;24H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;59H[K[16;23H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H3[16;23H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;58H[K[16;22H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H2[16;22H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;57H[K[16;21H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H1[16;21H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;56H[K[16;20H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H0[16;20H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;55H[K[16;19H[46m([m[1m[96mcar[m ls[46m)[m)[52;162H19[16;19H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;54H[K[16;18H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H8[16;18H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;53H[K[16;17H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H7[16;17H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;52H[K[16;16H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H6[16;16H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;51H[K[16;15H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H5[16;15H[?25h[?25l[52;163H6[16;16H[?25h[?25l([6C)[52;163H7[16;17H[?25h[?25l[52;163H8[16;18H[?25h[?25l[52;163H7[16;17H[?25h[?25l[46m([6C)[m[52;163H6[16;16H[?25h[?25l[1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[16;50H[K[16;14H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H5[16;15H[?25h[?25l([6C)[52;163H6[16;16H[?25h[?25l[52;163H7[16;17H[?25h[?25l[52;163H8[16;18H[?25h[?25l[52;163H9[16;19H[?25h[?25l[52;162H20[16;20H[?25h[?25l[46m([6C)[m[52;163H1[16;21H[?25h[?25l[16;11H[46m([m[2C([6C)[46m)[m[52;163H2[16;22H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[16;49H[K[16;11H([2C[46m([6C)[m [52;163H1[16;21H[?25h[?25l[14;7H[96m[46m([15;30H)[m[16;14H([6C)[52;160H5,30[15;30H[?25h[52;1H[K[15;29H[?25l[52;149H^[[15;29H[52;149H  [15;30H[14;7H[96m([m[15;8H[96m[46m([20C)[m[96m)[m[52;159H15,29[9CTop[15;29H[?25h[?25l[52;149H:[15;29H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2759B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:21:0
actual:     6
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:22:0
actual:     9
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:30:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:31:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:43:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:44:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:71:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:72:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:81:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:92:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:93:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2759B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    [34m;;((equal? (car ls) '())[15;6H;;[m[34m[106m([m[34msum-lengths (cdr ls)[m[34m[106m)[m[34m)[m
    ([38;5;130melse[m ([36m+[m ([36mcar[m ls) (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H15,29[9CTop[15;29H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    [96m;;((equal? (car ls) '())[15;6H;;[m[96m[46m([m[96msum-lengths (cdr ls)[m[96m[46m)[m[96m)[m
    ([93melse[m ([1m[96m+[m ([1m[96mcar[m ls) (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H15,29[9CTop"lab5-sol.scm" 94L, 2759B[15;29H[?25h[?25l[15;8H[96m([20C)[m[16;36H[46m([6C)[m[52;160H6,36[16;36H[?25h[?25l[14;7H[96m[46m([15;30H)[m[16;36H([6C)[52;160H5,30[15;30H[?25h[?25l[13;22H[46m([6C)[m[14;7H[96m([15;30H)[m[52;160H3,22[13;22H[?25h[?25l([6C)[16;36H[46m([6C)[m[52;160H6,36[16;36H[?25h[?25l([6C)[52;162H13[16;13H[?25h[?25l[52;149H<20>[16;13H[52;149H    [16;14H[46m([6C)[m[52;163H4[16;14H[?25h[?25l([6C)[52;162H28[16;28H[?25h[?25l[52;160H3,31[13;31H[?25h[?25l[52;162H8 [13;8H[?25h[?25l[52;149H:[13;8H[52;1H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[52;1H[K[52;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:21:0
actual:     6
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:22:0
actual:     9
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:30:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:31:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:43:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:44:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:71:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:72:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:81:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:92:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:93:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2759B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    [34m;;((equal? (car ls) '())[15;6H;;(sum-lengths (cdr ls)))[m
    ([38;5;130melse[m ([36m+[m ([36mcar[m ls) (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H13,8[10CTop[13;8H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    [96m;;((equal? (car ls) '())[15;6H;;(sum-lengths (cdr ls)))[m
    ([93melse[m ([1m[96m+[m ([1m[96mcar[m ls) (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H13,8[10CTop"lab5-sol.scm" 94L, 2759B[13;8H[?25h[?25l[24C[46m([20C)[m[52;162H32[13;32H[?25h[?25l[10;3H[46m([m[13;32H([20C)[15;30H[96m[46m)[m[52;160H5,30[15;30H[?25h[?25l[10;3H([14;8H[96m[46m([19C)[m[15;30H[96m)[m[52;160H4,28[14;28H[?25h[?25l[14;8H[96m([19C)[m[52;160H3[13;28H[?25h[?25l[52;160H6,37[16;37H[?25h[?25l[46m([6C)[m[52;163H6[16;36H[?25h[?25l([6C)[52;162H24[16;24H[?25h[?25l[46m([20C)[m[52;163H3[16;23H[?25h[?25l([20C)[52;163H4[16;24H[?25h[?25l[52;149H2[16;25H[48;5;242ms[m[52;1H[1m-- VISUAL --[m[52;13H[K[52;149H2[16;25H[52;159H16,25[9CTop[16;25H[?25h[?25l[52;149H3[16;26H[48;5;242mu[m[52;163H6[16;26H[?25h[?25l[52;149H4[16;27H[48;5;242mm[m[52;163H7[16;27H[?25h[?25l[52;149H5[16;28H[48;5;242m-[m[52;163H8[16;28H[?25h[?25l[52;149H6[16;29H[48;5;242ml[m[52;163H9[16;29H[?25h[?25l[52;149H7[16;30H[48;5;242me[m[52;162H30[16;30H[?25h[?25l[52;149H8[16;31H[48;5;242mn[m[52;163H1[16;31H[?25h[?25l[52;149H9[16;32H[48;5;242mg[m[52;163H2[16;32H[?25h[?25l[52;149H10[16;33H[48;5;242mt[m[52;163H3[16;33H[?25h[?25l[52;150H1[16;34H[48;5;242mh[m[52;163H4[16;34H[?25h[?25l[52;150H2[16;35H[48;5;242ms[m[52;163H5[16;35H[?25h[?25l[52;150H1[16;34Hs[52;163H4[16;34H[?25h[?25l[?25h[?25l[52;149Hc [16;34H[52;149H [16;24H[52;4H[1mINSERT [m[52;159H[K[52;159H16,24[9CTop[16;24H ([1m[96mcdr[m ls))))))[16;38H[K[16;23H[46m([9C)[16;24H[?25h[?25l[m( [46m([6C)[m)[52;163H5[16;25H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[16;37H[K[16;24H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H4[16;24H[?25h[?25l[1m[96m[46mc[m[1m[96mdr[m ls)[16;36H[K[16;23H[46m([m[1m[96mcdr[m ls[46m)[m)[52;163H3[16;23H[?25h[?25l[52;163H4[16;24H[?25h[?25l([6C)[52;163H5[16;25H[?25h[?25l[52;163H6[16;26H[?25h[?25l[52;163H7[16;27H[?25h[?25l[52;163H8[16;28H[?25h[?25l[52;163H9[16;29H[?25h[?25l[46m([6C)[m[52;162H30[16;30H[?25h[?25l[16;11H[46m([m[11C([6C)[46m)[m[52;163H1[16;31H[?25h[?25l    [46m([m[5C([19C)[46m)[m[52;163H2[16;32H[?25h[?25l[10;3H[46m([m[16;5H([26C)[46m)[m[52;163H3[16;33H[?25h[?25l[16;35H[K[10;3H([16;5H[46m([26C)[m)[52;163H2[16;32H[?25h[?25l[10;3H[46m([m[16;5H([26C)[46m)[m[52;163H3[16;33H[?25h[?25l[9;1H[46m([m
  ([16;33H)[46m)[m[52;163H4[16;34H[?25h[52;1H[K[16;33H[?25l[52;149H^[[16;33H[52;149H  [16;34H[9;1H(
  [46m([16;33H)[m)[52;159H16,33[9CTop[16;33H[?25h[?25l[52;149H:[16;33H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2745B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l+: contract violation
  expected: number?
  given: '(2)
  argument position: 2nd
  other arguments...:
   1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2745B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  [106m([m[38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    [34m;;((equal? (car ls) '())[15;6H;;(sum-lengths (cdr ls)))[m
    ([38;5;130melse[m ([36m+[m ([36mcar[m ls) ([36mcdr[m ls)))[106m)[m)


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H16,33[9CTop[16;33H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  [46m([m[93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    [96m;;((equal? (car ls) '())[15;6H;;(sum-lengths (cdr ls)))[m
    ([93melse[m ([1m[96m+[m ([1m[96mcar[m ls) ([1m[96mcdr[m ls)))[46m)[m)


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H16,33[9CTop"lab5-sol.scm" 94L, 2745B[16;33H[?25h[?25l[10;3H([16;33H)[52;162H29[16;29H[?25h[?25l[16;11H[46m([19C)[m[52;162H31[16;31H[?25h[?25l[16;11H([11C[46m([6C)[m)[52;162H23[16;23H[?25h[?25l([6C)[52;160H7,1-8[17;8H[?25h[?25l[16;23H[46m([6C)[m[52;160H6,23 [16;23H[?25h[?25l[52;149Hi[16;23H[52;149H [16;23H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H16,23[9CTop[16;23H[?25h[?25l[52;163H4[16;24H[?25h[?25l [1m[96mcdr[m l[46ms[m)))))[16;23H([6Cs[52;163H5[16;25H[?25h[?25l([1m[96mcdr[m ls)))))[16;25H[46m([6C)[m[52;163H6[16;26H[?25h[?25l([6C)[52;163H7[16;27H[?25h[?25l[52;163H8[16;28H[?25h[?25l[52;163H9[16;29H[?25h[?25l[52;162H30[16;30H[?25h[?25l[52;163H1[16;31H[?25h[?25l[46m([6C)[m[52;163H2[16;32H[?25h[?25l[16;23H[46m([m ([6C)[46m)[m[52;163H3[16;33H[?25h[?25l[4C)[16;11H[46m([m[11C([9C)[46m)[m[52;163H4[16;34H[?25h[?25l[16;11H([11C[46m([9C)[m)[52;163H3[16;33H[?25h[?25l[16;23H( [46m([6C)[m)[52;163H2[16;32H[?25h[?25l[16;25H([6C)[52;163H1[16;31H[?25h[?25l[52;163H0[16;30H[?25h[?25l[52;162H29[16;29H[?25h[?25l[52;163H8[16;28H[?25h[?25l[52;163H7[16;27H[?25h[?25l[46m([6C)[m[52;163H6[16;26H[?25h[?25l[52;163H5[16;25H[?25h[?25l[46m([m ([6C)[46m)[m[52;163H4[16;24H[?25h[?25ls ([1m[96mcdr[m ls[5C)[16;23H([9C)[52;163H5[16;25H[?25h[?25lu ([1m[96mcdr[m ls))))))[52;163H6[16;26H[?25h[?25lm ([1m[96mcdr[m ls))))))[52;163H7[16;27H[?25h[?25l- ([1m[96mcdr[m ls))))))[52;163H8[16;28H[?25h[?25ll ([1m[96mcdr[m ls))))))[52;163H9[16;29H[?25h[?25le ([1m[96mcdr[m ls))))))[52;162H30[16;30H[?25h[?25ln ([1m[96mcdr[m ls))))))[52;163H1[16;31H[?25h[?25lg ([1m[96mcdr[m ls))))))[52;163H2[16;32H[?25h[?25lt ([1m[96mcdr[m ls))))))[52;163H3[16;33H[?25h[?25lh ([1m[96mcdr[m ls))))))[52;163H4[16;34H[?25h[?25ls ([1m[96mcdr[m ls))))))[52;163H5[16;35H[?25h[?25l[52;160H4,22[14;22H[?25h[?25l[13;22H[46m([6C)[m[52;160H3[13;22H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;21H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H1[13;21H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[13;54H[K[13;20H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H0[13;20H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[13;53H[K[13;19H[46m([m[1m[96mcar[m ls[46m)[m)[52;162H19[13;19H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[13;52H[K[13;18H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H8[13;18H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[13;51H[K[13;17H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H7[13;17H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[13;50H[K[13;16H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H6[13;16H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[13;49H[K[13;15H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H5[13;15H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[13;48H[K[13;14H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H4[13;14H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[13;47H[K[13;13H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H3[13;13H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[13;46H[K[13;12H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H2[13;12H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[13;45H[K[13;11H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H1[13;11H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[13;44H[K[13;10H[46m([m[1m[96mcar[m ls[46m)[m)[52;163H0[13;10H[?25h[?25l[52;163H1[13;11H[?25h[?25l([6C)[52;163H2[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[46m([6C)[m[52;163H7[13;17H[?25h[?25l[13;9H[46m([m([6C)[46m)[m[52;163H8[13;18H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;43H[K[13;9H([46m([6C)[m [52;163H7[13;17H[?25h[?25l[13;10H([6C)[52;163H6[13;16H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H2[13;12H[?25h[?25l[46m([6C)[m[52;163H1[13;11H[?25h[?25l[1m[96m[46mc[m[1m[96mar[m ls)[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;42H[K[13;9H[46m([m[1m[96mcar[m ls[46m)[m [52;163H0[13;10H[?25h[?25l([6C)[52;160H4[14;10H[?25h[52;1H[K[14;9H[?25l[52;149H^[[14;9H[52;149H  [14;10H[52;159H14,9[10CTop[14;9H[?25h[?25l[52;149H:[14;9H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2745B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l+: contract violation
  expected: number?
  given: '(2 1)
  argument position: 1st
  other arguments...:
   0
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2745B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m ([36mcar[m ls) (sum-lengths ([36mcdr[m ls))))
    [34m;;((equal? (car ls) '())[15;6H;;(sum-lengths (cdr ls)))[m
    ([38;5;130melse[m ([36m+[m ([36mcar[m ls) (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H14,9[10CTop[14;9H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m ([1m[96mcar[m ls) (sum-lengths ([1m[96mcdr[m ls))))
    [96m;;((equal? (car ls) '())[15;6H;;(sum-lengths (cdr ls)))[m
    ([93melse[m ([1m[96m+[m ([1m[96mcar[m ls) (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H14,9[10CTop"lab5-sol.scm" 94L, 2745B[14;9H[?25h[?25l[52;149H~@k[14;9H[52;149H   [15;9H[52;160H5[15;9H[?25h[?25l[52;149H~@k[15;9H[52;149H   [14;9H[52;160H4[14;9H[?25h[?25l[52;149H~@k[14;9H[52;149H   [13;9H[46m([6C)[m[52;160H3[13;9H[?25h[?25l[52;149H~@k[13;9H[52;149H   [13;10H([6C)[52;162H10[13;10H[?25h[?25l[52;149Hi[13;10H[52;149H [13;10H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,10[9CTop[13;10H[?25h[?25l([1m[96mcar[m ls) (sum-lengths ([1m[96mcdr[m ls))))[13;10H[46m([6C)[m[52;163H1[13;11H[?25h[?25l([6C)[52;163H2[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[46m([6C)[m[52;163H7[13;17H[?25h[?25l[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;9H[46m([m([6C)[46m)[m[52;163H8[13;18H[?25h[?25l[13;9H([46m([6C)[m)[52;163H7[13;17H[?25h[?25l[13;10H([6C)[52;163H6[13;16H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H2[13;12H[?25h[?25l[46m([6C)[m[52;163H1[13;11H[?25h[?25l[52;163H0[13;10H[?25h[?25l[46ms[m([1m[96mcar[m l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;10Hs[46m([m[5Cs[46m)[m[52;163H1[13;11H[?25h[?25l[46mu[m([1m[96mcar[m l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;11Hu[46m([m[5Cs[46m)[m[52;163H2[13;12H[?25h[?25l[46mm[m([1m[96mcar[m l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;12Hm[46m([m[5Cs[46m)[m[52;163H3[13;13H[?25h[?25l[46m-[m([1m[96mcar[m l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;13H-[46m([m[5Cs[46m)[m[52;163H4[13;14H[?25h[?25l[46ml[m([1m[96mcar[m l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;14Hl[46m([m[5Cs[46m)[m[52;163H5[13;15H[?25h[?25l[46me[m([1m[96mcar[m l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;15He[46m([m[5Cs[46m)[m[52;163H6[13;16H[?25h[?25l[46mn[m([1m[96mcar[m l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;16Hn[46m([m[5Cs[46m)[m[52;163H7[13;17H[?25h[?25l[46mg[m([1m[96mcar[m l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;17Hg[46m([m[5Cs[46m)[m[52;163H8[13;18H[?25h[?25l[46mt[m([1m[96mcar[m l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;18Ht[46m([m[5Cs[46m)[m[52;163H9[13;19H[?25h[?25l[46mh[m([1m[96mcar[m l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;19Hh[46m([m[5Cs[46m)[m[52;162H20[13;20H[?25h[?25l[46ms[m([1m[96mcar[m l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;20Hs[46m([m[5Cs[46m)[m[52;163H1[13;21H[?25h[?25l[46m [m([1m[96mcar[m l[46ms[m)) (sum-lengths ([1m[96mcdr[m ls))))[13;21H [46m([m[5Cs[46m)[m[52;163H2[13;22H[?25h[?25l([6C)[52;160H4[14;22H[?25h[?25l[13;22H[46m([6C)[m[52;160H3[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l([6C)[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l[46m([6C)[m[52;163H9[13;29H[?25h[?25l[13;9H[46m([m[12C([6C)[46m)[m[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l[13;9H([20C) [46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l([20C)[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[52;163H9[13;39H[?25h[?25l[52;162H40[13;40H[?25h[?25l[52;163H1[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l[52;163H4[13;44H[?25h[?25l [46m([6C)[m[52;163H5[13;45H[?25h[?25l[52;163H6[13;46H[?25h[?25l([6C)[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l[52;163H9[13;49H[?25h[?25l[52;162H50[13;50H[?25h[?25l[52;163H1[13;51H[?25h[?25l[46m([6C)[m[52;163H2[13;52H[?25h[?25l[13;32H[46m([m[12C([6C)[46m)[m[52;163H3[13;53H[?25h[?25l     [46m([m[25C([20C)[46m)[m[52;163H4[13;54H[?25h[?25l[12;5H[46m([m[13;6H([47C)[46m)[m[52;163H5[13;55H[?25h[?25l[52;163H6[13;56H[?25h[?25l[12;5H([13;55H)[14;8H[96m[46m([19C)[m[52;160H4,29[14;29H[?25h[?25l[14;7H[96m[46m([m[96m([19C)[m[15;30H[96m[46m)[m[52;160H5,31[15;31H[?25h[?25l[14;7H[96m([m[96m[46m([19C)[m[15;30H[96m)[m[52;160H4,29[14;29H[?25h[?25l[14;7H[96m[46m([m[96m([19C)[m[15;30H[96m[46m)[m[52;160H5,31[15;31H[?25h[?25l[9;1H[46m([m[14;7H[96m([15;30H)[m[16;48H[46m)[m[52;160H6,49[16;49H[?25h[?25l[52;163H8[16;48H[?25h[?25l[9;1H(
  [46m([16;47H)[m)[52;163H7[16;47H[?25h[?25l[10;3H([16;5H[46m([40C)[m)[52;163H6[16;46H[?25h[?25l    ([5C[46m([33C)[m)[52;163H5[16;45H[?25h[?25l[16;11H([11C[46m([20C)[m)[52;163H4[16;44H[?25h[?25l[16;23H([12C[46m([6C)[m)[52;163H3[16;43H[?25h[?25l[16;36H([6C)[52;163H2[16;42H[?25h[?25l[52;163H1[16;41H[?25h[?25l[52;163H0[16;40H[?25h[?25l[52;162H39[16;39H[?25h[?25l[52;163H8[16;38H[?25h[?25l[46m([6C)[m[52;163H7[16;37H[?25h[?25l[52;163H6[16;36H[?25h[?25l([6C)[52;163H5[16;35H[?25h[?25l[52;163H4[16;34H[?25h[?25l[52;163H3[16;33H[?25h[?25l[52;163H2[16;32H[?25h[?25l[52;163H1[16;31H[?25h[?25l[52;163H0[16;30H[?25h[?25l[52;162H29[16;29H[?25h[?25l[52;163H8[16;28H[?25h[?25l[52;163H7[16;27H[?25h[?25l[52;163H6[16;26H[?25h[?25l[52;163H5[16;25H[?25h[?25l[46m([20C)[m[52;163H4[16;24H[?25h[?25l[52;163H3[16;23H[?25h[?25l([20C)[52;160H4,5 [14;5H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[14;6H[52;159H14,6[10CTop[14;6H[96m[48;5;242m;[?25h[?25l[m[52;149H3[14;7H[96m[48;5;242m;[m[96m[46m([15;30H)[m[52;162H7[14;7H[?25h[?25l[52;149H4[14;8H[96m[48;5;242m([m[96m[46m([19C)[m[15;30H[96m)[m[52;162H8[14;8H[?25h[?25l[52;149H6[14;10H[96m[48;5;242m(e[m[18C[96m)[m[52;162H10[14;10H[?25h[?25l[52;149H8[14;12H[96m[48;5;242mqu[m[52;163H2[14;12H[?25h[?25l[52;149H9[14;13H[96m[48;5;242ma[m[52;163H3[14;13H[?25h[?25l[52;149H10[14;14H[96m[48;5;242ml[m[52;163H4[14;14H[?25h[?25l[52;149H2 [15;16H[14;14H[96m[48;5;242m? (car ls) '())[m[48;5;242m 
     [m[96m[48;5;242m;;(sum-len[m[52;160H5,16[15;16H[?25h[?25l[1C[96m[48;5;242mg[m[52;163H7[15;17H[?25h[?25l[1C[96m[48;5;242mt[m[52;163H8[15;18H[?25h[?25l[1C[96m[48;5;242mh[m[52;163H9[15;19H[?25h[?25l[1C[96m[48;5;242ms[m[52;162H20[15;20H[?25h[?25l[1C[96m[48;5;242m [m[96m[46m([6C)[m[52;163H1[15;21H[?25h[?25l[1C[96m[48;5;242m([m[6C[96m)[m[52;163H2[15;22H[?25h[?25l[1C[96m[48;5;242mc[m[52;163H3[15;23H[?25h[?25l[1C[96m[48;5;242md[m[52;163H4[15;24H[?25h[?25l[1C[96m[48;5;242mr[m[52;163H5[15;25H[?25h[?25l[1C[96m[48;5;242m [m[52;163H6[15;26H[?25h[?25l[1C[96m[48;5;242ml[m[52;163H7[15;27H[?25h[?25l[1C[96m[48;5;242ms[m[96m[46m)[m[52;163H8[15;28H[?25h[?25l[1C[96m[48;5;242m)[m[96m[46m)[m[52;163H9[15;29H[?25h[?25l[1C[96m[48;5;242m)[m[96m[46m)[m[52;162H30[15;30H[?25h[?25l[?25h[?25l[52;149Hc[15;30H[52;149H [14;5H[52;4H[1mINSERTt --[m[52;13H[K[52;159H14,5[10CTop[14;51r[51;1H
[1;52r[14;1H    [14;5H[K[15;30H[46mn[m[51;3H([93mlambda[m (ls (v [95m0[m))[52;159H[K[52;159H14,5[10CTop[15;30Hn[14;5H[?25h[?25l[52;162H4[14;4H[?25h[?25l[52;162H3[14;3H[?25h[?25l[52;162H2[14;2H[?25h[?25l[52;162H1[14;1H[?25h[?25l[13;51r[51;1H
[1;52r[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[51;5H([93mif[m ([1m[96mnull?[m ls)[52;159H[K[52;159H13,56[9CTop[12;5H[46m([13;55H)[?25h[?25l[m[12;5H([13;55H)[52;162H25[13;25H[?25h[52;1H[K[13;24H[?25l[52;149H^[[13;24H[52;149H  [13;25H[52;159H13,24[9CTop[13;24H[?25h[?25l[52;149H:[13;24H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2699B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     6
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     9
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2699B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m ([36mcar[m ls) (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,24[9CTop[13;24H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m ([1m[96mcar[m ls) (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,24[9CTop"lab5-sol.scm" 92L, 2699B[13;24H[?25h[?25l[14;23H[46m([20C)[m[52;160H4,23[14;23H[?25h[?25l([20C)[52;160H9,28[19;28H[?25h[?25l[52;160H3,8 [13;8H[?25h[?25l[52;149H~@k[13;8H[52;149H   [13;7H[52;162H7[13;7H[?25h[?25l[52;149Hi[13;7H[52;149H [13;7H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,7[10CTop[13;7H[?25h[?25l[52;162H8[13;8H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;6H[46m([46C)[m[52;162H7[13;7H[?25h[?25lc (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls[3C)     ([46C)[52;162H8[13;8H[?25h[?25lo (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;162H9[13;9H[?25h[?25ln (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;162H10[13;10H[?25h[?25l[1m[96mcons[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;163H1[13;11H[?25h[?25l[52;162H23[13;23H[?25h[52;1H[K[13;22H[?25l[52;149H^[[13;22H[52;149H  [13;23H[52;159H13,22[9CTop[13;22H[?25h[?25l[52;149H:[13;22H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2702B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     '(3 3 . 0)
expected:   4
--------------------
+: contract violation
  expected: number?
  given: '((2 . 0) . 3)
  argument position: 2nd
  other arguments...:
   1
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2702B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36mcons[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m ([36mcar[m ls) (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,22[9CTop[13;22H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96mcons[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m ([1m[96mcar[m ls) (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,22[9CTop"lab5-sol.scm" 92L, 2702B[13;22H[?25h[?25l[52;162H11[13;11H[?25h[?25l[52;149Hi[13;11H[52;149H [13;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,11[9CTop[13;11H[?25h[?25lcon (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;58H[K[52;163H0[13;10H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;57H[K[52;162H9 [13;9H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;56H[K[52;162H8[13;8H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;6H[46m([46C)[m[52;162H7[13;7H[?25h[?25l[1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls[3C)     ([46C)[52;162H8[13;8H[?25h[?25l [46m([20C)[m[52;162H31[13;31H[?25h[?25l[13;9H([20C)[52;163H4[13;34H[?25h[?25l[12;6H[46m([14C)[m[52;160H2,22[12;22H[?25h[?25l[11;5H[46m([12C)[m[12;6H([14C)[52;160H1,19[11;19H[?25h[?25l    ([12C)[12;6H[46m([14C)[m[52;160H2,22[12;22H[?25h[?25l    (([14C)[14;36H[46m([6C)[m[52;160H4,36[14;36H[?25h[?25l([6C)[52;160H3,34[13;34H[?25h[?25l[52;162H28[13;28H[?25h[?25l[14;14H[46m([6C)[m[52;160H4,22[14;22H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[14;48H[K[14;14H([6C [52;163H1[14;21H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[14;47H[K[52;163H0[14;20H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[14;46H[K[52;162H19[14;19H[?25h[?25l(sum-lengths ([1m[96mcdr[m ls)[14;45H[K[52;163H8[14;18H[?25h[?25lca (sum-lengths ([1m[96mcdr[m ls)[14;44H[K[52;163H7[14;17H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[14;43H[K[52;163H6[14;16H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[14;42H[K[14;14H[46m([23C)[m[52;163H5[14;15H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[14;41H[K[14;14H [23C)[52;163H4[14;14H[?25h[?25l[95m1[m (sum-lengths ([1m[96mcdr[m ls))))))[52;163H5[14;15H[?25h[?25l[14C[46m([6C)[m[52;162H29[14;29H[?25h[?25l([6C)[52;160H3,34[13;34H[?25h[52;1H[K[13;33H[?25l[52;149H^[[13;33H[52;149H  [13;34H[52;159H13,33[9CTop[13;33H[?25h[?25l[52;149H:[13;33H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2692B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     5
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2692B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,33[9CTop[13;33H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,33[9CTop"lab5-sol.scm" 92L, 2692B[13;33H[?25h[?25l[14;11H[46m([26C)[m[52;160H4,38[14;38H[?25h[?25l[14;11H([26C)[52;163H3[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H   [14;32H[52;163H2[14;32H[?25h[?25l[52;149H~@k[14;32H[52;149H   [14;33H[52;163H3[14;33H[?25h[?25l[52;149Hi[14;33H[52;149H [14;33H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,33[9CTop[14;33H[?25h[?25l[52;162H15[14;15H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[14;41H[K[52;163H4[14;14H[?25h[?25l[95m0[m (sum-lengths ([1m[96mcdr[m ls))))))[52;163H5[14;15H[?25h[?25l[52;160H3,27[13;27H[?25h[52;1H[K[13;26H[?25l[52;149H^[[13;26H[52;149H  [13;27H[52;159H13,26[9CTop[13;26H[?25h[?25l[52;149H:[13;26H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2692B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2692B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m0[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,26[9CTop[13;26H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m0[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,26[9CTop"lab5-sol.scm" 92L, 2692B[13;26H[?25h[?25l[52;160H4,15[14;15H[?25h[?25l[52;149Hi[14;15H[52;149H [14;15H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H14,15[9CTop[14;15H[?25h[?25l (sum-lengths ([1m[96mcdr[m ls)[14;41H[K[52;163H4[14;14H[?25h[?25l[95m1[m (sum-lengths ([1m[96mcdr[m ls))))))[52;163H5[14;15H[?25h[?25l[52;162H31[14;31H[?25h[?25l[52;160H3,47[13;47H[?25h[?25l[52;162H8 [13;8H[?25h[?25l  (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;162H9[13;9H[?25h[?25l[95m0[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;162H10[13;10H[?25h[?25l[52;162H2[13;20H[?25h[52;1H[K[13;19H[?25l[52;149H^[[13;19H[52;149H  [13;20H[52;159H13,19[9CTop[13;19H[?25h[?25l[52;149H:[13;19H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2694B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     5
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2694B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m0[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,19[9CTop[13;19H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m0[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,19[9CTop"lab5-sol.scm" 92L, 2694B[13;19H[?25h[?25l[13;11H[46m([20C)[m[52;163H1[13;11H[?25h[?25l[52;149H~@k[13;11H[52;149H   [13;10H ([20C)[52;163H0[13;10H[?25h[?25l[52;149H~@k[13;10H[52;149H   [13;9H[52;162H9 [13;9H[?25h[?25l[52;149H~@k[13;9H[52;149H   [13;10H[52;162H10[13;10H[?25h[?25l[52;149H~@k[13;10H[52;149H   [13;11H[46m([20C)[m[52;163H1[13;11H[?25h[?25l[52;149Hi[13;11H[52;149H [13;11H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,11[9CTop[13;11H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;57H[K[13;10H[46m([ms[19C[46m)[m [52;163H0[13;10H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;56H[K[13;9H[46m([ms[19C[46m)[m [52;162H9 [13;9H[?25h[?25l([20C)[52;160H4,33[14;33H[?25h[?25lcd ls)[14;41H[K[52;163H2[14;32H[?25h[?25l ls)[14;40H[K[52;163H1[14;31H[?25h[?25la ls))))))[52;163H2[14;32H[?25h[?25l[1m[96mcar[m ls))))))[52;163H3[14;33H[?25h[?25l[52;160H3,39[13;39H[?25h[?25l[9;1H[46m([14;41H)[m[52;160H4,42[14;42H[?25h[52;1H[K[14;41H[?25l[52;149H^[[14;41H[52;149H  [14;42H[52;159H14,41[9CTop[14;41H[?25h[?25l[52;149H:[14;41H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2692B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2692B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)))))[106m)[m


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,41[9CTop[14;41H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)))))[46m)[m


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,41[9CTop"lab5-sol.scm" 92L, 2692B[14;41H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;1H[K[52;159H14,41[10C7%[11;41H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[51;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[52;159H[K[52;159H14,41[9C14%[8;41H[?25h[?25l[1;51r[1;1H[3M[1;52r[5;41H)[49;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H15,1-8[8C21%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;3H[96m[46m([34C)[m[50;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))[52;159H[K[52;159H18,38[9C29%[6;38H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;3H[96m([34C)[m[49;3H[38;5;224m'()[m)

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[52;159H[K[52;159H21,0-1[8C36%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[5;1H[46m([6;4H)[m[49;1H(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[52;159H[K[52;159H24,4[10C43%[6;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[2;1H([3;4H)


[46m([37C)[m[49;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[52;159H[K[52;159H27,39[9C51%[6;39H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([37C)[49;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[52;159H[K[52;159H30,0-1[8C58%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[51;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[52;159H[K[52;159H33,41[9C65%[6;41H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H36,0-1[8C73%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;1H[46m([33C)[m[50;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))[52;159H[K[52;159H39,35[9C80%[6;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([33C)


[46m([39C)[m[49;3H[38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[52;159H[K[52;159H42,41[9C87%[6;41H[?25h[?25l[52;149H^[[6;41H[52;151H[[6;41H[52;152H<[6;41H[52;153H6[6;41H[52;154H5[6;41H[52;155H;[6;41H[52;156H9[6;41H[52;157H7[6;41H[52;158H;[6;41H[52;149H[[<65;97;3[6;41H[52;149H          [6;41H[1;51r[1;1H[3M[1;52r[3;1H([39C)[49;1H(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)[52;159H[K[52;159H45,0-1[8C95%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)

[94m~                                                                                                                                                                               [m[52;159H[K[52;159H48,31[9CBot[6;31H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;9H[46m([8C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H51,18[9CBot[6;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;5H[46m([m[3C([8C)[6;41H[46m)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H54,34-41      Bot[6;41H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;41H)

[46m([6;35H)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H57,28-35      Bot[6;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[2;1H([3;35H)


[46m([35C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H60,37[9CBot[6;37H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([35C)[6;9H[46m([25C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H63,35[9CBot[6;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;9H([25C)[6;41H[38;5;224m[46m()[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H66,41[9CBot[6;41H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;41H[38;5;224m()[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H69,41[9CBot[6;41H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H72,41[9CBot[6;41H[?25h[?25l[1;51r[1;1H[3M[1;52r[5;1H[46m([6;6H)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H75,6[10CBot[6;6H[?25h[?25l[1;51r[1;1H[3M[1;52r[2;1H([3;6H)

[46m([6;35H)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H78,28-35      Bot[6;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[2;1H([3;35H)


[46m([32C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H81,34[9CBot[6;34H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([32C)[6;9H[46m([22C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H84,32[9CBot[6;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;9H([22C)


[46m([38C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H87,40[9CBot[6;40H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([38C)[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H90,41[9CBot[6;41H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H92,0-1[8CBot[5;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H92,0-1[8CBot[2;1H[?25h[?25l[1;51r[51;1H
[1;52r[51;1H[94m~                                                                                                                                                                               [m[52;159H[K[52;159H92,0-1[8CBot[1;1H[?25h[?25l[?25h[?25l[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)[52;159H[K[52;159H92,0-1[8CBot[4;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)[52;159H[K[52;159H92,0-1[8CBot[7;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)[52;159H[K[52;159H92,0-1[8CBot[10;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H92,0-1[8CBot[13;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[2;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[52;159H[K[52;159H92,0-1[8CBot[16;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[52;159H[K[52;159H92,0-1[8CBot[19;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m[52;159H[K[52;159H92,0-1[8CBot[22;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[52;159H[K[52;159H92,0-1[8CBot[25;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)[52;159H[K[52;159H92,0-1[8CBot[28;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  [38;5;224m'()[m)[52;159H[K[52;159H92,0-1[8CBot[31;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H92,0-1[8CBot[34;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[2;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[52;159H[K[52;159H92,0-1[8CBot[37;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[2;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H92,0-1[8CBot[40;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;3H([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[3;9H[38;5;224m'()[m[52;159H[K[52;159H92,0-1[8CBot[43;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H[K[52;159H92,0-1[8CBot[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;Exercise 2

;;from lab 4:[m[52;159H[K[52;159H92,0-1[8CBot[49;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)[52;159H[K[52;159H86,0-1[8C97%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)[52;159H[K[52;159H83,41[9C90%[46;41H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;3H[95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[45;1H[46m([46;35H)[m[52;159H[K[52;159H80,28-35      82%[46;35H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)[46;27H[38;5;224m[46m([13C)[m

([49;35H)[52;159H[K[52;159H77,41[9C75%[46;41H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)[52;159H[K[52;159H77,41[9C82%[43;41H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)[52;159H[K[52;159H77,41[9C90%[40;41H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;3H[95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[52;159H[K[52;159H77,41[9C82%[43;41H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)[52;159H[K[52;159H77,41[9C75%[46;41H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return[m[46;9H[46m([18C)[m[49;27H[38;5;224m([13C)[m[52;159H[K[52;159H74,28[9C68%[46;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)[49;9H([18C)[52;159H[K[52;159H71,0-1[8C60%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)[46;34H[38;5;224m[46m([6C)[m[52;159H[K[52;159H68,41[9C53%[46;41H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m[49;34H[38;5;224m([6C)[m[52;159H[K[52;159H65,0-1[8C46%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)[52;159H[K[52;159H62,41[9C39%[46;41H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls))))))[45;1H[46m([46;35H)[m[52;159H[K[52;159H59,28-35      31%[46;35H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H(([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[3;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[48;1H([49;35H)[52;159H[K[52;159H56,41[9C24%[46;41H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m[46;15H[46m([12C)[m[52;159H[K[52;159H53,21-28      17%[46;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the[m[46;11H[46m([8C)[m[49;15H([12C)[52;159H[K[52;159H50,20[10C9%[46;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H#lang racket
(require rackunit)[49;11H([8C)[52;159H[K[52;159H47,41[10C2%[46;41H[?25h[?25l[1;51r[1;1H[L[1;52r[1;1H#!/usr/bin/env racket[52;159H[K[52;159H46,13[9CTop[46;13H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[9;1H[46m([14;41H)[m[52;159H14,41[14;41H[?25h[?25l[52;149H:[14;41H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[52;1H[K[52;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2692B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)))))[106m)[m


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,41[9CTop[14;41H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)))))[46m)[m


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,41[9CTop"lab5-sol.scm" 92L, 2692B[14;41H[?25h[?25l[9;1H([14;41H)[52;162H33[14;33H[?25h[?25l[48;5;242m [m[52;1H[1m-- VISUAL --[m[52;13H[K[52;159H14,34[9CTop[14;34H[?25h[?25l[52;149H2[14;34H[?25h[?25l[52;149Hi[14;34H[?25h[?25l[52;150H~@k[14;34H[52;149H2   [14;34H[?25h[?25l[52;149H~@k[14;34H[52;149H1  [14;33H [52;163H3[14;33H[?25h[?25l[52;149H~@k[14;33H[52;149H2  [14;32H[1C[48;5;242m [m[52;163H2[14;32H[?25h[?25l[52;149H [14;36H[14;29H[46m([m[3C ls[46m)[m[52;1H[K[52;159H14,36[9CTop[14;36H[?25h[?25l[14;29H([6C)[52;163H3[14;33H[?25h[?25l[52;149Hi[14;33H[52;149H [14;33H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H14,33[9CTop[14;33H[?25h[?25lca ls)[14;41H[K[52;163H2[14;32H[?25h[?25l ls)[14;40H[K[52;163H1[14;31H[?25h[?25ld ls))))))[52;163H2[14;32H[?25h[?25l[1m[96mcdr[m ls))))))[52;163H3[14;33H[?25h[?25l[9;1H[46m([14;41H)[m[52;162H42[14;42H[?25h[?25l[9;1H([14;41H)[52;160H3,28[13;28H[?25h[?25l[52;162H8 [13;8H[?25h[?25l  (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;162H9[13;9H[?25h[?25l[95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;162H10[13;10H[?25h[?25l[52;160H4,2[14;20H[?25h[?25l[46m([20C)[m[52;162H16[14;16H[?25h[?25l[13;11H[46m([20C)[m[14;16H([20C)[52;160H3,11[13;11H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;57H[K[13;10H[46m([ms[19C[46m)[m [52;163H0[13;10H[?25h[?25l[46m [m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;10H [46m([m[19C)[46m)[m[52;163H1[13;11H[?25h[?25l([20C)[14;16H[46m([20C)[m[52;160H4,16[14;16H[?25h[?25l[13;11H[46m([20C)[m[14;16H([20C)[52;160H3,11[13;11H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;57H[K[13;10H[46m([ms[19C[46m)[m [52;163H0[13;10H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;56H[K[13;9H[46m([ms[19C[46m)[m [52;162H9 [13;9H[?25h[?25l([20C)[52;162H8[13;8H[?25h[?25l (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;6H[46m([46C)[m[52;162H7[13;7H[?25h[?25l[1m[96m-[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls[3C)     ([46C)[52;162H8[13;8H[?25h[?25l  (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;162H9[13;9H[?25h[?25l[95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[52;162H10[13;10H[?25h[?25l[52;163H8[13;18H[?25h[52;1H[K[13;17H[?25l[52;149H^[[13;17H[52;149H  [13;18H[52;159H13,17[9CTop[13;17H[?25h[?25l[52;149H:[13;17H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2694B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     -2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2694B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m-[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,17[9CTop[13;17H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m-[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,17[9CTop"lab5-sol.scm" 92L, 2694B[13;17H[?25h[?25l[52;160H8,2[18;27H[?25h[?25l[19;27H[38;5;224m[46m([3C)[m[52;160H9[19;27H[?25h[?25l[38;5;224m([3C)[m[52;159H20,28[20;28H[?25h[?25l[52;159H13,8 [13;8H[?25h[?25l[52;149H~@k[13;8H[52;149H   [13;9H[52;162H9[13;9H[?25h[?25l[52;149H~@k[13;9H[52;149H   [13;10H[52;162H10[13;10H[?25h[?25l[52;149H~@k[13;10H[52;149H   [13;11H[46m([20C)[m[52;163H1[13;11H[?25h[?25l[52;149H~@k[13;11H[52;149H   [13;10H ([20C)[52;163H0[13;10H[?25h[?25l[52;149H~@k[13;10H[52;149H   [13;9H[52;162H9 [13;9H[?25h[?25l[52;149H~@k[13;9H[52;149H   [13;8H[52;162H8[13;8H[?25h[?25l[52;149H~@k[13;8H[52;149H   [13;9H[52;162H9[13;9H[?25h[?25l[52;149H~@k[13;9H[52;149H   [13;10H[52;162H10[13;10H[?25h[?25l[52;149Hi[13;10H[52;149H [13;10H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,10[9CTop[13;10H[?25h[?25l [46m([20C)[m[52;163H1[13;11H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;57H[K[13;10H[46m([ms[19C[46m)[m [52;163H0[13;10H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;56H[K[13;9H[46m([ms[19C[46m)[m [52;162H9 [13;9H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;8H[46m([ms[19C[46m)[m [52;162H8[13;8H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;54H[K[13;7H[46m([ms[19C[46m)[m [52;162H7[13;7H[?25h[?25l[1m[96m[46m+[m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;7H[1m[96m+[m[46m([m[19C)[46m)[m[52;162H8[13;8H[?25h[?25l[46m [m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;8H [46m([m[19C)[46m)[m[52;162H9[13;9H[?25h[?25l([20C)[52;160H2,17[12;17H[?25h[52;1H[K[12;16H[?25l[52;149H^[[12;16H[52;149H  [12;17H[52;159H12,16[9CTop[12;16H[?25h[?25l[52;149H:[12;16H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2692B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[Kclear
[?2004l[H[2J[3J[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm 
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     5
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [10Pclearvim lab5-sol.scm 
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2692B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[34m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H12,16[9CTop[12;16H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[96m;;(check-eq? (sum-lengths '(() ())) 0)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H12,16[9CTop"lab5-sol.scm" 92L, 2692B[12;16H[?25h[?25l[52;159H20,38[20;38H[?25h[?25l[19;26H[38;5;224m[46m([11C)[m[52;159H19[19;38H[?25h[?25l[18;3H[96m[46m([34C)[m[19;26H[38;5;224m([11C)[m[52;160H8,3 [18;3H[?25h[?25l[52;149Hi[18;3H[52;149H [18;3H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H18,3[10CTop[18;3H[?25h[?25l[96m([m[96m[46mc[m[96mheck-eq? (sum-lengths '(() ())) 0)[m[18;38H[K[18;2H[96m[46m([m[96mc[m[33C[96m[46m)[m[52;162H2[18;2H[?25h[?25l([46mc[mheck-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)[18;37H[K[18;1H[46m([mc[33C[46m)[m[52;162H1[18;1H[?25h[52;1H[K[18;1H[?25l[52;149H^[[18;1H[52;149H  [18;1H[52;159H18,1[10CTop[18;1H[?25h[?25l[52;149H:[18;1H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2690B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:18:0
actual:     2
expected:   0
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     5
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2690B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
[106m([mcheck-eq? (sum-lengths [35m'(() ())[m) [31m0[m[106m)[m
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H18,1[10CTop[18;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
[46m([mcheck-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m[46m)[m
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H18,1[10CTop"lab5-sol.scm" 92L, 2690B[18;1H[?25h[?25l[9;1H[46m([14;41H)[m[18;1H([34C)[52;160H4,41[14;41H[?25h[?25l[9;1H([14;5H[46m([33C)[m))[52;162H39[14;39H[?25h[?25l    ([33C)[52;160H2,17[12;17H[?25h[?25l[52;163H5[12;15H[?25h[?25l    ([46m([14C)[m[52;162H21[12;21H[?25h[?25l    (([14C)[52;160H3,27[13;27H[?25h[?25l[12;5H[46m([13;55H)[m[52;162H55[13;55H[?25h[?25l[52;149Hi[13;55H[52;149H [13;55H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,55[9CTop[13;55H[?25h[?25l[52;163H6[13;56H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,5[10CTop[12;5H([13;55H)
    [?25h[?25l([46m([15;40H)[m[52;162H6[14;6H[?25h[?25l(([46m([m[52;162H7[14;7H[?25h[?25l([15;40H)[52;162H8[14;8H[?25h[?25l[46m([15;40H)[m[52;162H7[14;7H[?25h[?25ln([15;40H)[52;162H8[14;8H[?25h[?25lo[52;162H9[14;9H[?25h[?25l[1m[96mnot[m[52;162H10[14;10H[?25h[?25l[52;163H1[14;11H[?25h[?25l([46m([15;40H)[m[52;163H2[14;12H[?25h[?25lp([15;40H)[52;163H3[14;13H[?25h[?25la[52;163H4[14;14H[?25h[?25lr[52;163H5[14;15H[?25h[?25l[14;14H[K[52;163H4[14;14H[?25h[?25li[52;163H5[14;15H[?25h[?25lr[52;163H6[14;16H[?25h[?25l>[52;163H7[14;17H[?25h[?25l[52;163H8[14;18H[?25h[?25l[52;163H7[14;17H[?25h[?25l[14;16H[K[52;163H6[14;16H[?25h[?25l[1m[96mpair?[m[52;163H7[14;17H[?25h[?25l[52;163H8[14;18H[?25h[?25l([46m([15;40H)[m[52;163H9[14;19H[?25h[?25lc([15;40H)[52;162H20[14;20H[?25h[?25la[52;163H1[14;21H[?25h[?25l[1m[96mcar[m[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25ll[52;163H4[14;24H[?25h[?25ls[52;163H5[14;25H[?25h[?25l)[14;18H[46m([6C)[m[52;163H6[14;26H[?25h[?25l)[14;11H[46m([m[6C([6C)[46m)[m[52;163H7[14;27H[?25h[?25l)    ([46m([m[4C([14C)[46m)[m[52;163H8[14;28H[?25h[?25l[15;51r[15;1H[L[1;52r[52;159H[K[52;159H15,6[10CTop[14;6H([20C)[15;6H[?25h[?25l([46m([16;40H)[m[52;162H7[15;7H[?25h[?25l[95m0[m([16;40H)[52;162H8[15;8H[?25h[?25l0_[52;162H9[15;9H[?25h[?25l[95m0[m[15;8H[K[52;162H8[15;8H[?25h[?25l)[46m([1C)[m[52;162H9[15;9H[?25h[?25l)[14;5H[46m([m[15;6H([1C)[46m)[m[52;162H10[15;10H[?25h[?25l[14;5H([15;9H)[52;160H7,2-9[17;9H[?25h[?25l[22;27H[38;5;224m[46m([9C)[m[52;159H22,27 [22;27H[?25h[?25l[38;5;224m([m[3C[38;5;224m[46m([1C)[m[3C[38;5;224m)[m[52;162H31[22;31H[?25h[?25l[38;5;224m[46m([m[38;5;224m([1C)[m[38;5;224m[46m)[m[52;163H0[22;30H[?25h[?25l[38;5;224m[46m([m[2C[38;5;224m([3C)[m[2C[38;5;224m[46m)[m[52;163H7[22;37H[?25h[?25l[22;27H[38;5;224m([m[2C[38;5;224m[46m([3C)[m[2C[38;5;224m)[m[52;163H0[22;30H[?25h[?25l[52;163H4[22;34H[?25h[?25l[14;6H[46m([20C)[m[22;30H[38;5;224m([3C)[m[52;159H14,28[14;28H[?25h[?25l[13;9H[46m([20C)[m[14;6H([20C)[52;160H3,10[13;10H[?25h[52;1H[K[13;9H[?25l[52;149H^[[13;9H[52;149H  [13;10H[52;159H13,9[10CTop[13;9H[?25h[?25l[52;149H:[13;9H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2728B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...: [none]
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2728B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [106m([msum-lengths ([36mcar[m ls)[106m)[m (sum-lengths ([36mcdr[m ls))))
    (([36mnot[m ([36mpair?[m ([36mcar[m ls)))[15;6H([31m0[m))
    ([38;5;130melse[m ([36m+[m [31m1[m (sum-lengths ([36mcdr[m ls))))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H13,9[10CTop[13;9H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [46m([msum-lengths ([1m[96mcar[m ls)[46m)[m (sum-lengths ([1m[96mcdr[m ls))))
    (([1m[96mnot[m ([1m[96mpair?[m ([1m[96mcar[m ls)))[15;6H([95m0[m))
    ([93melse[m ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcdr[m ls))))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H13,9[10CTop"lab5-sol.scm" 94L, 2728B[13;9H[?25h[?25l([20C)[52;160H4,14[14;14H[?25h[?25l    ([46m([20C)[m[52;162H27[14;27H[?25h[?25l    (([20C)[52;160H3,25[13;25H[?25h[?25l[14;6H[46m([20C)[m[52;160H4,27[14;27H[?25h[?25l    (([4C[46m([14C)[m)[52;162H11[14;11H[?25h[?25l[12;6H[46m([14C)[m[14;11H([14C)[52;160H2,6 [12;6H[?25h[?25l([14C)[14;6H[46m([20C)[m[52;160H4[14;6H[?25h[?25l[52;149H2[14;7H[48;5;242m([m[20C)[52;1H[1m-- VISUAL --[m[52;13H[K[52;149H2[14;7H[52;159H14,7[10CTop[14;7H[?25h[?25l[15;8H[14;7H[1m[96m[48;5;242mnot[m[48;5;242m ([m[1m[96m[48;5;242mpair?[m[48;5;242m ([m[1m[96m[48;5;242mcar[m[48;5;242m ls))) 
     ([m[95m[48;5;242m0[m[46m)[m[52;160H5,8[15;8H[?25h[?25l[2C[48;5;242m))[m[52;162H10[15;10H[?25h[?25l[52;149H3[16;12H[15;10H[48;5;242m 
    ([m[93m[48;5;242melse[m[48;5;242m ([m[52;160H6,12[16;12H[?25h[?25l[2C[1m[96m[48;5;242m+[m[48;5;242m [m[52;163H4[16;14H[?25h[?25l[2C[95m[48;5;242m1[m[48;5;242m [m[46m([20C)[m[52;163H6[16;16H[?25h[?25l[2C[48;5;242m(s[m[19C)[52;163H8[16;18H[?25h[?25lu[48;5;242mu[m[52;163H9[16;19H[?25h[?25lm-[48;5;242mm-[m[52;162H21[16;21H[?25h[?25ll[48;5;242ml[m[52;163H2[16;22H[?25h[?25le[48;5;242me[m[52;163H3[16;23H[?25h[?25ln[48;5;242mn[m[52;163H4[16;24H[?25h[?25lg[48;5;242mg[m[52;163H5[16;25H[?25h[?25lt[48;5;242mt[m[52;163H6[16;26H[?25h[?25lh[48;5;242mh[m[52;163H7[16;27H[?25h[?25ls[48;5;242ms[m[52;163H8[16;28H[?25h[?25l [48;5;242m [m[46m([6C)[m[52;163H9[16;29H[?25h[?25l[1C[48;5;242m([m[6C)[52;162H30[16;30H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mdr[m [52;163H1[16;31H[?25h[?25l[1C[1m[96m[48;5;242md[m[1m[96mr[m [52;163H2[16;32H[?25h[?25l[1C[1m[96m[48;5;242mr[m [52;163H3[16;33H[?25h[?25l [48;5;242m [m[52;163H4[16;34H[?25h[?25ll[48;5;242ml[m[52;163H5[16;35H[?25h[?25ls[48;5;242ms[m[46m)[m[52;163H6[16;36H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H7[16;37H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H8[16;38H[?25h[?25l[1C[48;5;242m)[m[46m)[m[52;163H9[16;39H[?25h[?25l[1C[10;3H[46m([m[16;39H[48;5;242m)[m[46m)[m[52;162H40[16;40H[?25h[?25l[1C[9;1H[46m([m
  ([16;40H[48;5;242m)[m[46m)[m[52;163H1[16;41H[?25h[?25l[?25h[?25l[52;149Hc[16;41H[52;149H [14;6H[52;4H[1mINSERT [m[52;159H[K[52;159H14,6[10CTop[14;51r[14;1H[2M[1;52r[14;1H    ([14;6H[K[50;3H([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H[K[52;159H14,6[10CTop[9;1H([14;6H[?25h[?25l[14;5H[K[52;162H5[14;5H[?25h[?25l[52;162H4[14;4H[?25h[?25l[52;162H3[14;3H[?25h[?25l[52;162H2[14;2H[?25h[?25l[52;162H1[14;1H[?25h[?25l[13;51r[51;1H
[1;52r[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[51;9H[38;5;224m'()[m[52;159H[K[52;159H13,56[9CTop[12;5H[46m([13;55H)[?25h[?25l[m[13;55H[K[12;5H([13;6H[46m([47C)[m[52;163H5[13;55H[?25h[?25l     ([47C)[52;162H8 [13;8H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[13;8H[52;159H13,8[10CTop[13;8H[1m[96m[48;5;242m+[m [?25h[?25l[52;149H3[13;9H[48;5;242m [m[46m([20C)[m[52;162H9[13;9H[?25h[?25l[52;149H4[13;10H[48;5;242m([m[20C)[52;162H10[13;10H[?25h[?25l[52;149H6[13;12H[48;5;242msu[m[52;163H2[13;12H[?25h[?25l[52;149H7[13;13H[48;5;242mm[m[52;163H3[13;13H[?25h[?25l[52;149H9[13;15H[48;5;242m-l[m[52;163H5[13;15H[?25h[?25l[52;149H10[13;16H[48;5;242me[m[52;163H6[13;16H[?25h[?25l[52;150H2[13;18H[48;5;242mng[m[52;163H8[13;18H[?25h[?25l[52;150H3[13;19H[48;5;242mt[m[52;163H9[13;19H[?25h[?25l[52;150H5[13;21H[48;5;242mhs[m[52;162H21[13;21H[?25h[?25l[52;150H7[13;23H[48;5;242m ([m[52;163H3[13;23H[?25h[?25l[52;150H8[13;24H[1m[96m[48;5;242mc[m[1m[96mar[m [52;163H4[13;24H[?25h[?25l[52;149H20[13;26H[1m[96m[48;5;242mar[m [52;163H6[13;26H[?25h[?25l[52;150H1[13;27H[48;5;242m [m[52;163H7[13;27H[?25h[?25l[52;150H2[13;28H[48;5;242ml[m[52;163H8[13;28H[?25h[?25l[52;150H3[13;29H[48;5;242ms[m[46m)[m[52;163H9[13;29H[?25h[?25l[52;150H4[13;30H[48;5;242m)[m[46m)[m[52;162H30[13;30H[?25h[?25l[52;150H5[13;31H[48;5;242m)[m[52;163H1[13;31H[?25h[?25l[52;150H6[13;32H[48;5;242m [m[46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;150H7[13;33H[48;5;242m([m[20C)[52;163H3[13;33H[?25h[?25l[52;150H8[13;34H[48;5;242ms[m[52;163H4[13;34H[?25h[?25l[52;150H9[13;35H[48;5;242mu[m[52;163H5[13;35H[?25h[?25l[52;149H30[13;36H[48;5;242mm[m[52;163H6[13;36H[?25h[?25l[52;150H1[13;37H[48;5;242m-[m[52;163H7[13;37H[?25h[?25l[52;150H2[13;38H[48;5;242ml[m[52;163H8[13;38H[?25h[?25l[52;150H3[13;39H[48;5;242me[m[52;163H9[13;39H[?25h[?25l[52;150H4[13;40H[48;5;242mn[m[52;162H40[13;40H[?25h[?25l[52;150H5[13;41H[48;5;242mg[m[52;163H1[13;41H[?25h[?25l[52;150H6[13;42H[48;5;242mt[m[52;163H2[13;42H[?25h[?25l[52;150H7[13;43H[48;5;242mh[m[52;163H3[13;43H[?25h[?25l[52;150H8[13;44H[48;5;242ms[m[52;163H4[13;44H[?25h[?25l[52;150H9[13;45H[48;5;242m [m[46m([6C)[m[52;163H5[13;45H[?25h[?25l[52;149H40[13;46H[48;5;242m([m[6C)[52;163H6[13;46H[?25h[?25l[52;150H1[13;47H[1m[96m[48;5;242mc[m[1m[96mdr[m [52;163H7[13;47H[?25h[?25l[52;150H2[13;48H[1m[96m[48;5;242md[m[1m[96mr[m [52;163H8[13;48H[?25h[?25l[52;150H3[13;49H[1m[96m[48;5;242mr[m [52;163H9[13;49H[?25h[?25l[52;150H4[13;50H[48;5;242m [m[52;162H50[13;50H[?25h[?25l[52;150H5[13;51H[48;5;242ml[m[52;163H1[13;51H[?25h[?25l[52;150H6[13;52H[48;5;242ms[m[46m)[m[52;163H2[13;52H[?25h[?25l[52;150H7[13;53H[48;5;242m)[m[46m)[m[52;163H3[13;53H[?25h[?25l[52;150H8[13;54H     [46m([m[46C[48;5;242m)[m[46m)[m[52;163H4[13;54H[?25h[?25l[?25h[?25l[52;149Hc [13;54H[52;149H [13;7H[52;4H[1mINSERTt --[m[52;13H[K[52;159H13,7[10CTop[13;7H[K[13;6H([?25h[?25ll[52;162H8[13;8H[?25h[?25le[52;162H9[13;9H[?25h[?25l[93mlet[m[52;162H10[13;10H[?25h[?25l[52;163H1[13;11H[?25h[?25l([52;163H2[13;12H[?25h[?25lp[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l([52;163H5[13;15H[?25h[?25lc[52;163H6[13;16H[?25h[?25la[52;163H7[13;17H[?25h[?25l[1m[96mcar[m[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25ll[52;162H20[13;20H[?25h[?25ls[52;163H1[13;21H[?25h[?25l)[13;14H[46m([6C)[m[52;163H2[13;22H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[13;7H[52;159H13,7[10CTop[13;7H[48;5;242m([m[7C([6C)[13;7H[?25h[?25l[52;149H3[13;8H[93m[48;5;242ml[m[52;162H8[13;8H[?25h[?25l[52;149H4[13;9H[93m[48;5;242me[m[52;162H9[13;9H[?25h[?25l[52;149H5[13;10H[93m[48;5;242mt[m[52;162H10[13;10H[?25h[?25l[52;149H7[13;12H[48;5;242m ([m[52;163H2[13;12H[?25h[?25l[52;149H8[13;13H[48;5;242mp[m[52;163H3[13;13H[?25h[?25l[52;149H9[13;14H[48;5;242m [m[46m([6C)[m[52;163H4[13;14H[?25h[?25l[52;149H10[13;15H[48;5;242m([m[6C)[52;163H5[13;15H[?25h[?25l[52;150H1[13;16H[1m[96m[48;5;242mc[m[1m[96mar[m [52;163H6[13;16H[?25h[?25l[52;150H2[13;17H[1m[96m[48;5;242ma[m[1m[96mr[m [52;163H7[13;17H[?25h[?25l[52;150H3[13;18H[1m[96m[48;5;242mr[m [52;163H8[13;18H[?25h[?25l[52;150H4[13;19H[48;5;242m [m[52;163H9[13;19H[?25h[?25l[52;150H5[13;20H[48;5;242ml[m[52;162H20[13;20H[?25h[?25l[52;150H6[13;21H[48;5;242ms[m[46m)[m[52;163H1[13;21H[?25h[?25l[?25h[?25l[52;149Hc [13;21H[52;149H [13;6H[52;4H[1mINSERTt --[m[52;13H[K[52;159H13,6[10CTop[13;6H[K[13;6H[?25h[?25l([52;162H7[13;7H[?25h[?25l[1m[96m+[m[52;162H8[13;8H[?25h[?25l[52;162H9[13;9H[?25h[?25l([52;162H10[13;10H[?25h[?25ls[52;163H1[13;11H[?25h[?25lu[52;163H2[13;12H[?25h[?25lm[52;163H3[13;13H[?25h[?25l-[52;163H4[13;14H[?25h[?25ll[52;163H5[13;15H[?25h[?25le[52;163H6[13;16H[?25h[?25ln[52;163H7[13;17H[?25h[?25lg[52;163H8[13;18H[?25h[?25lt[52;163H9[13;19H[?25h[?25lh[52;162H20[13;20H[?25h[?25ls[52;163H1[13;21H[?25h[?25l[52;163H2[13;22H[?25h[?25l([52;163H3[13;23H[?25h[?25lc[52;163H4[13;24H[?25h[?25la[52;163H5[13;25H[?25h[?25l[1m[96mcar[m[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25ll[52;163H8[13;28H[?25h[?25ls[52;163H9[13;29H[?25h[?25l)[13;22H[46m([6C)[m[52;162H30[13;30H[?25h[?25l[52;162H29[13;29H[?25h[?25l)[13;29H[K[13;28H[46m)[m[52;163H8[13;28H[?25h[?25l)[13;28H[K[13;27H[46m)[m[52;163H7[13;27H[?25h[?25l[46m([m)[13;22H([5C[46m)[m[52;163H8[13;28H[?25h[?25l[1C)[13;22H[46m([m[4C()[46m)[m[52;163H9[13;29H[?25h[?25l[13;22H([4C[46m()[m)[52;163H8[13;28H[?25h[?25l[46ms[m))s[46m)[m[52;163H9[13;29H[?25h[?25l[46mu[m))u[46m)[m[52;162H30[13;30H[?25h[?25l[46mm[m))m[46m)[m[52;163H1[13;31H[?25h[?25l[46m-[m))-[46m)[m[52;163H2[13;32H[?25h[?25l[46ml[m))l[46m)[m[52;163H3[13;33H[?25h[?25l[46me[m))e[46m)[m[52;163H4[13;34H[?25h[?25l[46mn[m))n[46m)[m[52;163H5[13;35H[?25h[?25l[46mg[m))g[46m)[m[52;163H6[13;36H[?25h[?25l[46mt[m))t[46m)[m[52;163H7[13;37H[?25h[?25l[46mh[m))h[46m)[m[52;163H8[13;38H[?25h[?25l[46ms[m))s[46m)[m[52;163H9[13;39H[?25h[?25l[46m [m)) [46m)[m[52;162H40[13;40H[?25h[?25l[46mc[m))c[46m)[m[52;163H1[13;41H[?25h[?25l[46ma[m))a[46m)[m[52;163H2[13;42H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m))[1m[96mr[m[46m)[m[52;163H3[13;43H[?25h[?25l[46m([m))[13;27H([16C[46m)[m[52;163H4[13;44H[?25h[?25l[46m)[m[13;45H[K[13;27H[46m([m[16C)[52;163H3[13;43H[?25h[?25lca)[46m)[m[13;44H[K[13;42H[46m)[m)[52;163H2[13;42H[?25h[?25l)[13;43H[K[13;41H[46m)[m)[52;163H1[13;41H[?25h[?25l)[13;42H[K[13;40H[46m)[m)[52;163H0[13;40H[?25h[?25l[46m([m))[13;27H([13C[46m)[m[52;163H1[13;41H[?25h[?25l[46ml[m))l[46m)[m[52;163H2[13;42H[?25h[?25l)[13;43H[K[13;41H[46m)[m)[52;163H1[13;41H[?25h[?25l[46mc[m))c[46m)[m[52;163H2[13;42H[?25h[?25l[46ma[m))a[46m)[m[52;163H3[13;43H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m))[1m[96mr[m[46m)[m[52;163H4[13;44H[?25h[?25l[46m [m)) [46m)[m[52;163H5[13;45H[?25h[?25l[46ml[m))l[46m)[m[52;163H6[13;46H[?25h[?25l[46ms[m))s[46m)[m[52;163H7[13;47H[?25h[?25l[13;27H[46m([m[12C([6C)[46m)[m[52;163H8[13;48H[?25h[?25l[52;163H9[13;49H[?25h[?25l)[13;22H[46m([m[4C([20C)[46m)[m[52;162H50[13;50H[?25h[?25l)[13;9H[46m([m[12C([26C)[46m)[m[52;163H1[13;51H[?25h[?25l[13;9H([40C)[52;163H2[13;52H[?25h[?25l([52;163H3[13;53H[?25h[?25ls[52;163H4[13;54H[?25h[?25lu[52;163H5[13;55H[?25h[?25lm[52;163H6[13;56H[?25h[?25l-[52;163H7[13;57H[?25h[?25ll[52;163H8[13;58H[?25h[?25le[52;163H9[13;59H[?25h[?25ln[52;162H60[13;60H[?25h[?25lg[52;163H1[13;61H[?25h[?25lt[52;163H2[13;62H[?25h[?25lh[52;163H3[13;63H[?25h[?25ls[52;163H4[13;64H[?25h[?25l[52;163H5[13;65H[?25h[?25l([52;163H6[13;66H[?25h[?25ld[52;163H7[13;67H[?25h[?25l[13;66H[K[52;163H6[13;66H[?25h[?25lc[52;163H7[13;67H[?25h[?25ld[52;163H8[13;68H[?25h[?25l[1m[96mcdr[m[52;163H9[13;69H[?25h[?25l)[46m([3C)[m[52;162H70[13;70H[?25h[?25l)[13;52H[46m([m[12C([3C)[46m)[m[52;163H1[13;71H[?25h[?25l)     [46m([m[45C([17C)[46m)[m[52;163H2[13;72H[?25h[?25l)[12;5H[46m([m[13;6H([64C)[46m)[m[52;163H3[13;73H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,5[10CTop[12;5H([13;72H)
    [?25h[?25l([52;162H6[14;6H[?25h[?25le[52;162H7[14;7H[?25h[?25ll[52;162H8[14;8H[?25h[?25ls[52;162H9[14;9H[?25h[?25l[93melse[m[52;162H10[14;10H[?25h[?25l[52;163H1[14;11H[?25h[?25ls[52;163H2[14;12H[?25h[?25lu[52;163H3[14;13H[?25h[?25lm[52;163H4[14;14H[?25h[?25l[14;13H[K[52;163H3[14;13H[?25h[?25l[14;12H[K[52;163H2[14;12H[?25h[?25l[14;11H[K[52;163H1[14;11H[?25h[?25l([52;163H2[14;12H[?25h[?25ls[52;163H3[14;13H[?25h[?25lu[52;163H4[14;14H[?25h[?25lm[52;163H5[14;15H[?25h[?25l-[52;163H6[14;16H[?25h[?25ll[52;163H7[14;17H[?25h[?25le[52;163H8[14;18H[?25h[?25ln[52;163H9[14;19H[?25h[?25lg[52;162H20[14;20H[?25h[?25lt[52;163H1[14;21H[?25h[?25lh[52;163H2[14;22H[?25h[?25ls[52;163H3[14;23H[?25h[?25l[52;163H4[14;24H[?25h[?25l([52;163H5[14;25H[?25h[?25lc[52;163H6[14;26H[?25h[?25ld[52;163H7[14;27H[?25h[?25l[1m[96mcdr[m[52;163H8[14;28H[?25h[?25l[52;163H9[14;29H[?25h[?25ll[52;162H30[14;30H[?25h[?25ls[52;163H1[14;31H[?25h[?25l)[14;24H[46m([6C)[m[52;163H2[14;32H[?25h[?25l)[14;11H[46m([m[12C([6C)[46m)[m[52;163H3[14;33H[?25h[?25l)    [46m([m[5C([20C)[46m)[m[52;163H4[14;34H[?25h[?25l)[10;3H[46m([m[14;5H([27C)[46m)[m[52;163H5[14;35H[?25h[?25l)[9;1H[46m([m
  ([14;34H)[46m)[m[52;163H6[14;36H[?25h[?25l[9;1H([14;35H)[52;160H5,1 [15;1H[?25h[?25l[52;160H3,39[13;39H[?25h[52;1H[K[13;38H[?25l[52;149H^[[13;38H[52;149H  [13;39H[52;159H13,38[9CTop[13;38H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H13,38[10C7%[10;38H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[51;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[52;159H[K[52;159H13,38[9C14%[7;38H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H15,1-8[8C21%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;1H[46m([34C)[m[50;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))[52;159H[K[52;159H18,36[9C29%[6;36H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([34C)[49;3H[38;5;224m'()[m)

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[52;159H[K[52;159H21,0-1[8C36%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[5;1H[46m([6;4H)[m[49;1H(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[52;159H[K[52;159H24,4[10C43%[6;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[2;1H([3;4H)[49;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[52;159H[K[52;159H27,38[9C51%[6;38H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[52;159H[K[52;159H30,0-1[8C58%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[51;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[52;159H[K[52;159H33,38[9C65%[6;38H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H36,0-1[8C73%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;1H[46m([33C)[m[50;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))[52;159H[K[52;159H39,35[9C80%[6;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([33C)[49;3H[38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[52;159H[K[52;159H42,38[9C87%[6;38H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)[52;159H[K[52;159H45,0-1[8C95%[6;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)[52;159H[K[52;159H45,0-1[8C87%[9;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H([93mdefine[m (poly-eval x coeffs)
  [95m0[m)[52;159H[K[52;159H45,0-1[8C80%[12;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m[52;159H[K[52;159H45,0-1[8C73%[15;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)[52;159H[K[52;159H45,0-1[8C65%[18;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)[52;159H[K[52;159H45,0-1[8C58%[21;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)[52;159H[K[52;159H45,0-1[8C51%[24;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)[52;159H[K[52;159H45,0-1[8C43%[27;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)[52;159H[K[52;159H45,0-1[8C36%[30;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m (sum-lengths ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))[52;159H[K[52;159H45,0-1[8C29%[33;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;3H([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[52;159H[K[52;159H45,0-1[8C21%[36;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)[52;159H[K[52;159H45,0-1[8C14%[39;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(require rackunit)

[96m;;Exercise 1[m[52;159H[K[52;159H45,0-1[9C7%[42;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H#!/usr/bin/env racket

#lang racket[52;159H[K[52;159H45,0-1[8CTop[45;1H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[52;159H13,51 [13;51H[?25h[?25l[14C[46m([3C)[m[52;162H69[13;69H[?25h[?25l[52;149Hi[13;69H[52;149H [13;69H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H13,69[9CTop[13;69H[?25h[?25l[46m [m)))) [46m)[m[52;162H70[13;70H[?25h[?25l[46ml[m))))l[46m)[m[52;163H1[13;71H[?25h[?25l[46ms[m))))s[46m)[m[52;163H2[13;72H[?25h[?25l[12;5H[46m([m[13;65H([6C)))[46m)[m[52;163H6[13;76H[?25h[?25l[12;5H([13;65H[46m([6C)[m)))[52;163H2[13;72H[?25h[?25l[52;162H66[13;66H[?25h[?25l([6C)[52;162H4[13;46H[?25h[?25l[46m([6C)[m[52;163H0[13;40H[?25h[?25l([6C)[52;162H25[13;25H[?25h[?25l[52;162H42[13;42H[?25h[?25l[52;162H35[13;35H[?25h[?25l[52;162H24[13;24H[?25h[52;1H[K[13;23H[?25l[52;149H^[[13;23H[52;149H  [13;24H[52;159H13,23[9CTop[13;23H[?25h[?25l[52;149H:[13;23H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2704B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 0
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2704B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m (sum-lengths ([36mcar[m ls)))) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,23[9CTop[13;23H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m (sum-lengths ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,23[9CTop"lab5-sol.scm" 92L, 2704B[13;23H[?25h[?25l[46m([26C)[m[52;162H49[13;49H[?25h[?25l[13;22H([26C)) [46m([20C)[m[52;162H52[13;52H[?25h[?25l([20C)[52;162H41[13;41H[?25h[?25l[13;22H[46m([26C)[m[52;162H22[13;22H[?25h[?25l[52;149Hi[13;22H[52;149H [13;22H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,22[9CTop[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l([26C)[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l  (sum-lengths ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))[52;163H7[13;27H[?25h[?25ll (sum-lengths ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))[52;163H8[13;28H[?25h[?25ls (sum-lengths ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))[52;163H9[13;29H[?25h[?25l) (sum-lengths ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))[13;22H[46m([6C)[m[52;162H30[13;30H[?25h[?25l) (sum-lengths ([1m[96mcar[m ls)))) (sum-lengths ([1m[96mcdr[m ls))))[13;9H[46m([m[12C([6C)[46m)[m[52;163H1[13;31H[?25h[?25l[13;9H([20C) [46m([20C)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l([20C)[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[52;163H9[13;39H[?25h[?25l[52;162H40[13;40H[?25h[?25l[52;163H1[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l[52;163H4[13;44H[?25h[?25l [46m([6C)[m[52;163H5[13;45H[?25h[?25l[52;163H6[13;46H[?25h[?25l([6C)[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l[52;163H9[13;49H[?25h[?25l[52;162H50[13;50H[?25h[?25l[52;163H1[13;51H[?25h[?25l[46m([6C)[m[52;163H2[13;52H[?25h[?25l[13;32H[46m([m[12C([6C)[46m)[m[52;163H3[13;53H[?25h[?25l     [46m([m[25C([20C)[46m)[m[52;163H4[13;54H[?25h[?25l[1C (sum-lengths ([1m[96mcdr[m ls)[13;80H[K[13;6H([25C[46m([20C)[m)[52;163H3[13;53H[?25h[?25l     [46m([m[25C([20C)[46m)[m[52;163H4[13;54H[?25h[?25l[52;163H5[13;55H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;79H[K[13;6H([25C[46m([20C)[m [52;163H4[13;54H[?25h[?25l[52;163H3[13;53H[?25h[?25l[13;32H([12C[46m([6C)[m)[52;163H2[13;52H[?25h[?25l[13;45H([6C)[52;163H1[13;51H[?25h[?25l[52;163H0[13;50H[?25h[?25l[52;162H49[13;49H[?25h[?25l[52;163H8[13;48H[?25h[?25l[52;163H7[13;47H[?25h[?25l[46m([6C)[m[52;163H6[13;46H[?25h[?25l[52;163H5[13;45H[?25h[52;1H[K[13;44H[?25l[52;149H^[[13;44H[52;149H  [13;45H([6C)[52;159H13,44[9CTop[13;44H[?25h[?25l[52;149H:[13;44H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2707B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2707B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,44[9CTop[13;44H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,44[9CTop"lab5-sol.scm" 92L, 2707B[13;44H[?25h[?25l[52;163H0[13;40H[?25h[?25l[52;160H8,34[18;34H[?25h[?25l[52;160H9[19;34H[?25h[?25l[52;159H21,0-1[21;1H[?25h[?25l[52;159H19,34 [19;34H[?25h[?25l[52;159H20,35[20;35H[?25h[?25l[19;33H[38;5;224m[46m([3C)[m[52;159H19,37[19;37H[?25h[?25l[38;5;224m([3C)[m[52;160H3,35[13;35H[?25h[?25l[13;9H[46m([20C)[m[52;163H0[13;30H[?25h[?25l[13;9H([20C)[52;163H7[13;37H[?25h[?25l[46m([20C)[m[52;162H53[13;53H[?25h[?25l[13;32H([20C)[52;163H4[13;54H[?25h[?25l[52;162H47[13;47H[?25h[?25l[52;163H9[13;49H[?25h[?25l[13;32H[46m([20C)[m[52;162H53[13;53H[?25h[?25l[13;9H[46m([20C)[m ([20C)[52;162H9 [13;9H[?25h[?25l[52;149Hi[13;9H[52;149H [13;9H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,9[10CTop[13;9H[?25h[?25l[1C(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[13;9H([46m([m[19C)[46m)[m[52;162H10[13;10H[?25h[?25l([20C) [46m([20C)[m[52;162H55[13;55H[?25h[?25l[13;10H[46m([20C)[m ([20C)[52;162H10[13;10H[?25h[?25l[46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;79H[K[13;9H[46m([ms[19C[46m)[m [52;162H9 [13;9H[?25h[?25l[95m[46m1[m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[13;9H[95m1[m[46m([m[19C)[46m)[m[52;162H10[13;10H[?25h[?25l[46m [m(sum-lengths ([1m[96mcar[m ls[1C) (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[13;10H [46m([m[19C)[46m)[m[52;163H1[13;11H[?25h[?25l([20C)[52;160H4,2[14;21H[?25h[?25l[52;160H3,36[13;36H[?25h[?25l[9;1H[46m([14;35H)[m[52;160H4[14;36H[?25h[?25l[9;1H([13;34H[46m([20C)[m[14;35H)[52;160H3,35[13;35H[?25h[?25l[12;6H[46m([14C)[m[13;34H([20C)[52;160H2,22[12;22H[?25h[?25l    (([14C)[52;160H3,44[13;44H[?25h[?25l[9;1H[46m([14;35H)[m[52;160H4,36[14;36H[?25h[?25l[9;1H([13;57H[46m([20C)[m[14;35H)[52;160H3,57[13;57H[?25h[?25l[13;34H[46m([20C)[m ([20C)[52;163H6[13;56H[?25h[?25l[52;163H5[13;55H[?25h[?25l[13;34H([12C[46m([6C)[m)[52;163H4[13;54H[?25h[?25l[13;47H([6C)[52;163H3[13;53H[?25h[?25l[52;163H2[13;52H[?25h[?25l[52;163H1[13;51H[?25h[?25l[52;163H0[13;50H[?25h[?25l[52;162H49[13;49H[?25h[?25l[46m([6C)[m[52;163H8[13;48H[?25h[?25l[52;163H7[13;47H[?25h[?25l([6C)[52;163H6[13;46H[?25h[?25l[52;163H5[13;45H[?25h[?25l[52;163H4[13;44H[?25h[?25l[52;163H3[13;43H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H1[13;41H[?25h[?25l[52;163H0[13;40H[?25h[?25l[52;162H39[13;39H[?25h[?25l[52;163H8[13;38H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H6[13;36H[?25h[?25l[46m([20C)[m[52;163H5[13;35H[?25h[?25l([20C)[52;163H6[13;36H[?25h[?25l[46m([20C)[m[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l[13;11H[46m([20C)[m ([20C)[52;163H3[13;33H[?25h[?25l[52;163H2[13;32H[?25h[52;1H[K[13;31H[?25l[52;149H^[[13;31H[52;149H  [13;32H[13;11H([12C[46m([6C)[m)[52;159H13,31[9CTop[13;31H[?25h[?25l[52;149HL[13;31H[52;149H [46;1H[13;24H([6C)[52;159H46,1 [46;1H[?25h[?25l[52;149H^[[46;1H[52;149H  [46;1H[52;149H^[[46;1H[52;149H  [46;1H[?25h[?25l[52;149H:[46;1H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2709B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     2
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     10
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2709B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H46,1[10CTop[46;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H46,1[10CTop"lab5-sol.scm" 92L, 2709B[46;1H[?25h[?25l[52;159H13,43[13;43H[?25h[?25l[9;1H[46m([14;35H)[m[52;160H4,35[14;35H[?25h[?25l[9;1H([14;35H)[52;160H3,50[13;50H[?25h[?25l[13;24H[46m([6C)[m[52;162H31[13;31H[?25h[?25l[52;149Hi[13;31H[52;149H [13;31H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,31[9CTop[13;31H[?25h[?25l)[1C (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;80H[K[13;30H[46m)[m)[52;163H0[13;30H[?25h[?25l)[1C (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;79H[K[13;29H[46m)[m)[52;162H29[13;29H[?25h[?25l[46m([m)) (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[13;24H([5C[46m)[m[52;162H30[13;30H[?25h[?25l[2C) (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[13;24H[46m([m[4C()[46m)[m[52;163H1[13;31H[?25h[?25l[13;11H[46m([m[12C([6C)[46m)[m[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[13;11H([20C) [46m([20C)[m[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H4[13;34H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;80H[K[13;33H[46m([ms[19C[46m)[m [52;163H3[13;33H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;79H[K[13;32H[46m([ms[19C[46m)[m [52;163H2[13;32H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;78H[K[13;31H[46m([ms[19C[46m)[m [52;163H1[13;31H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;77H[K[13;30H[46m([ms[19C[46m)[m [52;163H0[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l[52;163H0[13;30H[?25h[?25l[46ms[mum-lengths ([1m[96mcar[m ls))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;76H[K[13;29H[46m([ms[19C[46m)[m [52;162H29[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l([20C)[52;163H1[13;31H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[52;163H9[13;39H[?25h[?25l[52;162H40[13;40H[?25h[?25l[52;163H1[13;41H[?25h[?25l [46m([6C)[m[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l([6C)[52;163H4[13;44H[?25h[?25l[52;163H5[13;45H[?25h[?25l[52;163H6[13;46H[?25h[?25l[52;163H7[13;47H[?25h[?25l[52;163H8[13;48H[?25h[?25l[46m([6C)[m[52;163H9[13;49H[?25h[?25l[13;29H[46m([m[12C([6C)[46m)[m[52;162H50[13;50H[?25h[?25l[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;24H[46m([m[4C([20C)[46m)[m[52;163H1[13;51H[?25h[?25l[1C) (sum-lengths ([1m[96mcdr[m ls))))[13;11H[46m([m[12C([26C)[46m)[m[52;163H2[13;52H[?25h[52;1H[K[13;51H[?25l[52;149H^[[13;51H[52;149H  [13;52H[13;11H([12C[46m([26C)[m)[52;159H13,51[9CTop[13;51H[?25h[?25l[52;149H:[13;51H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2706B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 0
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2706B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths [106m([m[36mcar[m (sum-lengths ([36mcar[m ls))[106m)[m) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,51[9CTop[13;51H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths [46m([m[1m[96mcar[m (sum-lengths ([1m[96mcar[m ls))[46m)[m) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,51[9CTop"lab5-sol.scm" 92L, 2706B[13;51H[?25h[?25l[13;24H([4C[46m([20C)[m)[52;162H29[13;29H[?25h[?25l[52;149Hi[13;29H[52;149H [13;29H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,29[9CTop[13;29H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[3C (sum-lengths ([1m[96mcdr[m ls)[13;77H[K[13;28H[46m([ms[19C[46m)[m)[52;163H8[13;28H[?25h[?25lca([46ms[mum-lengths ([1m[96mcar[m ls)[3C (sum-lengths ([1m[96mcdr[m ls)[13;76H[K[13;27H[46m([ms[19C[46m)[m)[52;163H7[13;27H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[3C (sum-lengths ([1m[96mcdr[m ls)[13;75H[K[13;26H[46m([ms[19C[46m)[m)[52;163H6[13;26H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[3C (sum-lengths ([1m[96mcdr[m ls)[13;74H[K[13;25H[46m([ms[19C[46m)[m)[52;163H5[13;25H[?25h[?25l[46ms[mum-lengths ([1m[96mcar[m ls)[3C (sum-lengths ([1m[96mcdr[m ls)[13;73H[K[13;24H[46m([ms[19C[46m)[m)[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l([20C)[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[52;163H1[13;31H[?25h[?25l[52;163H2[13;32H[?25h[?25l[52;163H3[13;33H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l [46m([6C)[m[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l([6C)[52;163H9[13;39H[?25h[?25l[52;162H40[13;40H[?25h[?25l[52;163H1[13;41H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l[46m([6C)[m[52;163H4[13;44H[?25h[?25l[13;24H[46m([m[12C([6C)[46m)[m[52;163H5[13;45H[?25h[?25l[13;11H[46m([m[12C([20C)[46m)[m[52;163H6[13;46H[?25h[?25l     [46m([m[4C([34C)[46m)[m[52;163H7[13;47H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;72H[K[13;6H([4C[46m([34C)[m [52;163H6[13;46H[?25h[?25l[13;11H([12C[46m([20C)[m)[52;163H5[13;45H[?25h[?25l[13;24H([12C[46m([6C)[m)[52;163H4[13;44H[?25h[?25l[13;37H([6C)[52;163H3[13;43H[?25h[?25l[52;163H2[13;42H[?25h[?25l[52;163H3[13;43H[?25h[?25l[46m([6C)[m[52;163H4[13;44H[?25h[?25l[13;24H[46m([m[12C([6C)[46m)[m[52;163H5[13;45H[?25h[?25l[13;11H[46m([m[12C([20C)[46m)[m[52;163H6[13;46H[?25h[52;1H[K[13;45H[?25l[52;149H^[[13;45H[52;149H  [13;46H[13;11H([12C[46m([20C)[m)[52;159H13,45[9CTop[13;45H[?25h[?25l[52;149H:[13;45H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2700B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 0
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2700B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths [106m([msum-lengths ([36mcar[m ls)[106m)[m) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,45[9CTop[13;45H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths [46m([msum-lengths ([1m[96mcar[m ls)[46m)[m) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,45[9CTop"lab5-sol.scm" 92L, 2700B[13;45H[?25h[?25l[10;3H[46m([m[13;24H([20C)[14;34H[46m)[m[52;160H4,34[14;34H[?25h[?25l[9;1H[46m([m
  ([14;34H)[46m)[m[52;163H5[14;35H[?25h[?25l[9;1H([14;35H)[52;162H26[14;26H[?25h[?25l[52;160H3,33[13;33H[?25h[?25l[52;149H:[13;33H[52;1H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[52;1H[K[52;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2700B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m [31m1[m (sum-lengths (sum-lengths ([36mcar[m ls))) (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H13,33[9CTop[13;33H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m [95m1[m (sum-lengths (sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H13,33[9CTop"lab5-sol.scm" 92L, 2700B[13;33H[?25h[?25l[52;160H4,25[14;25H[?25h[?25l[52;160H3,23[13;23H[?25h[?25l[52;162H32[13;32H[?25h[?25l[52;162H4[13;42H[?25h[?25l[52;162H50[13;50H[?25h[?25l[46m([20C)[m[52;162H69[13;69H[?25h[?25l[12;5H[46m([m[13;48H([20C))[46m)[m[52;162H71[13;71H[?25h[?25l[12;5H([13;11H[46m([34C)[m[24C)[52;162H46[13;46H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9H[38;5;224m'()[m[50;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[51;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;1H[K[52;159H13,46[10C7%[10;46H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[51;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[52;159H[K[52;159H13,46[9C14%[7;46H[?25h[?25l[1;51r[1;1H[3M[1;52r[4;11H([34C)[49;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H15,1-8[8C21%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;1H[46m([34C)[m[50;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))[52;159H[K[52;159H18,36[9C29%[6;36H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([34C)[49;3H[38;5;224m'()[m)

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[52;159H[K[52;159H21,0-1[8C36%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[5;1H[46m([6;4H)[m[49;1H(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[52;159H[K[52;159H24,4[10C43%[6;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[2;1H([3;4H)


[46m([37C)[m[49;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[52;159H[K[52;159H27,39[9C51%[6;39H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([37C)[49;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[52;159H[K[52;159H30,0-1[8C58%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[51;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[52;159H[K[52;159H33,41[9C65%[6;41H[?25h[?25l[52;149H^[[6;41H[52;151H[[6;41H[52;149H   [6;41H[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H36,0-1[8C73%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;1H[46m([33C)[m[50;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))[52;159H[K[52;159H39,35[9C80%[6;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([33C)


[46m([39C)[m[49;3H[38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[52;159H[K[52;159H42,41[9C87%[6;41H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([39C)[49;1H(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)[52;159H[K[52;159H45,0-1[8C95%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)

[94m~                                                                                                                                                                               [m[52;159H[K[52;159H48,31[9CBot[6;31H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;9H[46m([8C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H51,18[9CBot[6;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[1;1H[46m([m[3;9H([8C)[6;43H[46m)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H54,36-43      Bot[6;43H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;43H)

[46m([6;35H)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H57,28-35      Bot[6;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[2;1H([3;35H)


[46m([35C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H60,37[9CBot[6;37H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([35C)[6;9H[46m([25C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H63,35[9CBot[6;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;9H([25C)


[46m([41C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H66,43[9CBot[6;43H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([41C)[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H69,46[9CBot[6;46H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H72,46[9CBot[6;46H[?25h[?25l[1;51r[1;1H[3M[1;52r[5;1H[46m([6;6H)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H75,6[10CBot[6;6H[?25h[?25l[1;51r[1;1H[3M[1;52r[2;1H([3;6H)

[46m([6;35H)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H78,28-35      Bot[6;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[2;1H([3;35H)


[46m([32C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H81,34[9CBot[6;34H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([32C)[6;9H[46m([22C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H84,32[9CBot[6;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;9H([22C)


[46m([38C)[m[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H87,40[9CBot[6;40H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;1H([38C)[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H90,46[9CBot[6;46H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H92,0-1[8CBot[5;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H92,0-1[8CBot[2;1H[?25h[?25l[1;51r[51;1H
[1;52r[51;1H[94m~                                                                                                                                                                               [m[52;159H[K[52;159H92,0-1[8CBot[1;1H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)[52;159H[K[52;159H92,0-1[8CBot[4;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)[52;159H[K[52;159H92,0-1[8CBot[7;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)[52;159H[K[52;159H92,0-1[8CBot[10;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H92,0-1[8CBot[13;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[2;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[52;159H[K[52;159H92,0-1[8CBot[16;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[52;159H[K[52;159H92,0-1[8CBot[19;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m[52;159H[K[52;159H92,0-1[8CBot[22;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[52;159H[K[52;159H92,0-1[8CBot[25;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)[52;159H[K[52;159H92,0-1[8CBot[28;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  [38;5;224m'()[m)[52;159H[K[52;159H92,0-1[8CBot[31;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[52;159H[K[52;159H92,0-1[8CBot[34;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[2;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[52;159H[K[52;159H92,0-1[8CBot[37;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[2;15H(greater-than ([1m[96mcdr[m ls) v)))))[52;159H[K[52;159H92,0-1[8CBot[40;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;3H([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[3;9H[38;5;224m'()[m[52;159H[K[52;159H92,0-1[8CBot[43;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H[K[52;159H92,0-1[8CBot[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;Exercise 2

;;from lab 4:[m[52;159H[K[52;159H92,0-1[8CBot[49;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)[52;159H[K[52;159H86,0-1[8C97%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)[52;159H[K[52;159H83,46[9C90%[46;46H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;3H[95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[45;1H[46m([46;35H)[m[52;159H[K[52;159H80,28-35      82%[46;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)[52;159H[K[52;159H80,28-35      90%[43;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)[52;159H[K[52;159H80,28-35      97%[40;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H[94m~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H80,28-35      Bot[37;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H80,28-35      Bot[34;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H80,28-35      Bot[31;35H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                                                                                               [50;1H~                                                                                                                                                                               [51;1H~                                                                                                                                                                               [m[52;159H[K[52;159H80,28-35      Bot[28;35H[?25h[?25l[27;1H([28;35H)[52;159H71,0-1  [19;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;3H([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[3;9H[38;5;224m'()[m[52;159H[K[52;159H71,0-1[8CBot[22;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H[K[52;159H71,0-1[8CBot[25;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;Exercise 2

;;from lab 4:[m[52;159H[K[52;159H71,0-1[8CBot[28;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)[52;159H[K[52;159H71,0-1[8C97%[31;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)[52;159H[K[52;159H71,0-1[8C90%[34;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;3H[95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[52;159H[K[52;159H71,0-1[8C82%[37;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)[52;159H[K[52;159H71,0-1[8C75%[40;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return[m[52;159H[K[52;159H71,0-1[8C68%[43;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)[52;159H[K[52;159H71,0-1[8C60%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)[52;159H[K[52;159H68,47[9C53%[46;47H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m[52;159H[K[52;159H65,0-1[8C46%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)[52;159H[K[52;159H62,47[9C39%[46;47H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))[45;1H[46m([46;35H)[m[52;159H[K[52;159H59,28-35      31%[46;35H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H(([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[3;6H([1m[96m+[m [95m1[m (sum-lengths (sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[46;15H[46m([31C)[m

([49;35H)[52;159H[K[52;159H56,47[9C24%[46;47H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[96m;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m[46;15H[46m([12C)[m[49;15H([31C)[52;159H[K[52;159H53,21-28      17%[46;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the[m[46;11H[46m([8C)[m[49;15H([12C)[52;159H[K[52;159H50,20[10C9%[46;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H#lang racket
(require rackunit)[49;11H([8C)[52;159H[K[52;159H47,47[10C2%[46;47H[?25h[?25l[1;51r[1;1H[L[1;52r[1;1H#!/usr/bin/env racket[52;159H[K[52;159H46,13[9CTop[46;13H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[52;159H13,2[13;23H[?25h[?25l     [46m([63C)[m[52;162H6 [13;6H[?25h[?25l[52;149H2[13;7H[48;5;242m([m[63C)[52;1H[1m-- VISUAL --[m[52;149H[K[52;149H2[13;7H[52;159H13,7[10CTop[13;7H[?25h[?25l[52;149H3[13;8H[1m[96m[48;5;242m+[m [52;162H8[13;8H[?25h[?25l[52;149H4[13;9H[48;5;242m [m[52;162H9[13;9H[?25h[?25l[52;149H5[13;10H[95m[48;5;242m1[m[52;162H10[13;10H[?25h[?25l[52;149H6[13;11H[48;5;242m [m[46m([34C)[m[52;163H1[13;11H[?25h[?25l[52;149H7[13;12H[48;5;242m([m[34C)[52;163H2[13;12H[?25h[?25l[52;149H8[13;13H[48;5;242ms[m[52;163H3[13;13H[?25h[?25l[52;149H9[13;14H[48;5;242mu[m[52;163H4[13;14H[?25h[?25l[52;149H10[13;15H[48;5;242mm[m[52;163H5[13;15H[?25h[?25l[?25h[?25l[52;149H  [13;21H     ([1m[96m+[m [95m1[m (sum[52;1H[K[52;159H13,21[9CTop[13;21H[?25h[?25l[52;163H3[13;23H[?25h[?25l[52;162H3[13;33H[?25h[?25l[13;11H[46m([34C)[m[52;162H11[13;11H[?25h[?25l[52;149Hi[13;11H[52;149H [13;11H[52;1H[1m-- INSERT --[m[52;159H[K[52;159H13,11[9CTop[13;11H[?25h[?25l([46ms[mum-lengths (sum-lengths ([1m[96mcar[m ls)))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;71H[K[13;10H[46m([ms[33C[46m)[m [52;163H0[13;10H[?25h[?25l([46ms[mum-lengths (sum-lengths ([1m[96mcar[m ls)))[46m [m(sum-lengths ([1m[96mcdr[m ls)[13;70H[K[13;9H[46m([ms[33C[46m)[m [52;162H9 [13;9H[?25h[?25l([34C)[52;162H21[13;21H[?25h[?25l  (sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[52;163H2[13;22H[?25h[?25l( (sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;22H[46m([23C)[m[52;163H3[13;23H[?25h[?25l[95m0[m (sum-lengths ([1m[96mcar[m ls[2C) (sum-lengths ([1m[96mcdr[m ls))))[13;22H([23C)[52;163H4[13;24H[?25h[?25l (sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls)[13;72H[K[13;22H[46m([23C)[m[52;163H3[13;23H[?25h[?25l) (sum-lengths ([1m[96mcar[m ls[2C) (sum-lengths ([1m[96mcdr[m ls))))[13;23H[46m)[m[22C)[52;163H4[13;24H[?25h[?25l[52;163H3[13;23H[?25h[?25l[46mc[m) (sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;23Hc[46m)[m[52;163H4[13;24H[?25h[?25l[46ma[m) (sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;24Ha[46m)[m[52;163H5[13;25H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m) (sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;25H[1m[96mr[m[46m)[m[52;163H6[13;26H[?25h[?25l[46m [m) (sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;26H [46m)[m[52;163H7[13;27H[?25h[?25l[46ml[m) (sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;27Hl[46m)[m[52;163H8[13;28H[?25h[?25l[46ms[m) (sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;28Hs[46m)[m[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l  (sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;22H([6C)[52;163H1[13;31H[?25h[?25l [46m([20C)[m[52;163H2[13;32H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;79H[K[13;31H[46m([ms[19C[46m)[m)[52;163H1[13;31H[?25h[?25l[1C(sum-lengths ([1m[96mcar[m ls[2C) (sum-lengths ([1m[96mcdr[m ls))))[13;31H([46m([m[19C)[46m)[m[52;163H2[13;32H[?25h[?25l[46m)[m(sum-lengths ([1m[96mcar[m ls[2C) (sum-lengths ([1m[96mcdr[m ls))))[13;32H)[46m([m[19C)[46m)[m[52;163H3[13;33H[?25h[?25l[46m()[m([20C)[52;163H2[13;32H[?25h[?25l[46ml[m)(sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;32Hl[46m)[m[52;163H3[13;33H[?25h[?25l[46ms[m)(sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;33Hs[46m)[m[52;163H4[13;34H[?25h[?25l)[46m([msum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls)[13;82H[K[13;33H[46m)[m([52;163H3[13;33H[?25h[?25l)[46m([msum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls)[13;81H[K[13;32H[46m)[m([52;163H2[13;32H[?25h[?25l[1m[96m[46m+[m)(sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;32H[1m[96m+[m[46m)[m[52;163H3[13;33H[?25h[?25l[46m [m)(sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;33H [46m)[m[52;163H4[13;34H[?25h[?25l[95m[46m1[m)(sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;34H[95m1[m[46m)[m[52;163H5[13;35H[?25h[?25l[46m [m)(sum-lengths ([1m[96mcar[m ls))) (sum-lengths ([1m[96mcdr[m ls))))[13;35H [46m)[m[52;163H6[13;36H[?25h[?25l([4C)[46m([20C)[m[52;163H7[13;37H[?25h[?25l[46m([4C)[m([20C)[52;163H6[13;36H[?25h[?25l([4C)[46m([20C)[m[52;163H7[13;37H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;84H[K[13;36H[46m([ms[19C[46m)[m)[52;163H6[13;36H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;83H[K[13;35H[46m([ms[19C[46m)[m)[52;163H5[13;35H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;82H[K[13;34H[46m([ms[19C[46m)[m)[52;163H4[13;34H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;81H[K[13;33H[46m([ms[19C[46m)[m)[52;163H3[13;33H[?25h[?25l([46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;80H[K[13;32H[46m([ms[19C[46m)[m)[52;163H2[13;32H[?25h[?25l[46ms[mum-lengths ([1m[96mcar[m ls)[2C (sum-lengths ([1m[96mcdr[m ls)[13;79H[K[13;31H[46m([ms[19C[46m)[m)[52;163H1[13;31H[?25h[?25l([20C)[14;24H[46m([6C)[m[52;160H4[14;31H[?25h[?25l[14;24H([6C)[52;163H0[14;30H[?25h[?25l[52;162H29[14;29H[?25h[?25l[52;163H8[14;28H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H6[14;26H[?25h[?25l[46m([6C)[m[52;163H5[14;25H[?25h[?25l[52;163H4[14;24H[?25h[?25l([6C)[52;163H3[14;23H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H0[14;20H[?25h[?25l[52;162H19[14;19H[?25h[?25l[52;163H8[14;18H[?25h[?25l[52;163H7[14;17H[?25h[?25l[52;163H6[14;16H[?25h[?25l[52;163H5[14;15H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H3[14;13H[?25h[?25l[46m([20C)[m[52;163H2[14;12H[?25h[?25l([20C)[52;160H3[13;12H[?25h[?25l[52;163H3[13;13H[?25h[?25l[52;163H4[13;14H[?25h[?25l[52;163H5[13;15H[?25h[?25l[52;163H6[13;16H[?25h[?25l[52;163H7[13;17H[?25h[?25l[52;163H8[13;18H[?25h[?25l[52;163H9[13;19H[?25h[?25l[52;162H20[13;20H[?25h[?25l[52;163H1[13;21H[?25h[?25l [46m([6C)[m[52;163H2[13;22H[?25h[?25l[52;163H3[13;23H[?25h[?25l([6C)[52;163H4[13;24H[?25h[?25l[52;163H5[13;25H[?25h[?25l[52;163H6[13;26H[?25h[?25l[52;163H7[13;27H[?25h[?25l[52;163H8[13;28H[?25h[?25l[46m([6C)[m[52;163H9[13;29H[?25h[?25l[52;162H30[13;30H[?25h[?25l[13;22H([6C) [46m([20C)[m[52;163H1[13;31H[?25h[?25l[52;163H2[13;32H[?25h[?25l([20C)[52;163H3[13;33H[?25h[?25l[52;163H4[13;34H[?25h[?25l[52;163H5[13;35H[?25h[?25l[52;163H6[13;36H[?25h[?25l[52;163H7[13;37H[?25h[?25l[52;163H8[13;38H[?25h[?25l[52;163H9[13;39H[?25h[?25l[52;163H8[13;38H[?25h[?25l[13;22H[46m([6C)[m[52;163H0[13;30H[?25h[?25l[13;22H([6C)[52;162H4[13;40H[?25h[?25l[52;4H[1m(insert)- VISUAL --[m[52;159H[K[52;149H2[13;32H[52;159H13,32[9CTop[13;32H[48;5;242m([?25h[?25l[m[52;149H3[13;33H[48;5;242ms[m[52;163H3[13;33H[?25h[?25l[52;149H5[13;35H[48;5;242mum[m[52;163H5[13;35H[?25h[?25l[52;149H7[13;37H[48;5;242m-l[m[52;163H7[13;37H[?25h[?25l[52;149H9[13;39H[48;5;242men[m[52;163H9[13;39H[?25h[?25l[52;149H11[13;41H[48;5;242mgt[m[52;162H41[13;41H[?25h[?25l[52;150H2[13;42H[48;5;242mh[m[52;163H2[13;42H[?25h[?25l[52;150H3[13;43H[48;5;242ms[m[52;163H3[13;43H[?25h[?25l[52;150H4[13;44H[48;5;242m [m[46m([6C)[m[52;163H4[13;44H[?25h[?25l[52;150H5[13;45H[48;5;242m([m[6C)[52;163H5[13;45H[?25h[?25l[52;150H6[13;46H[1m[96m[48;5;242mc[m[1m[96mar[m [52;163H6[13;46H[?25h[?25l[52;150H7[13;47H[1m[96m[48;5;242ma[m[1m[96mr[m [52;163H7[13;47H[?25h[?25l[52;150H8[13;48H[1m[96m[48;5;242mr[m [52;163H8[13;48H[?25h[?25l[52;150H9[13;49H[48;5;242m [m[52;163H9[13;49H[?25h[?25l[52;149H20[13;50H[48;5;242ml[m[52;162H50[13;50H[?25h[?25l[52;150H1[13;51H[48;5;242ms[m[46m)[m[52;163H1[13;51H[?25h[?25l[52;150H2[13;52H[48;5;242m)[m[46m)[m[52;163H2[13;52H[?25h[?25l[52;150H3[13;53H[13;9H[46m([m[42C[48;5;242m)[m[46m)[m[52;163H3[13;53H[?25h[?25l[?25h[?25l[52;149Hc [13;53H[52;149H [13;31H[52;4H[1mINSERTt --[m[52;13H[K[52;159H13,31[9CTop[13;31H (sum-lengths ([1m[96mcdr[m ls)[1C))[13;56H[K[13;9H([43C)[13;31H[?25h[?25l[13;22H[46m([6C)[m[52;163H0[13;30H[?25h[?25l)  (sum-lengths ([1m[96mcdr[m ls))))[13;9H[46m([m[12C([6C)[46m)[m[52;163H1[13;31H[?25h[?25l[12;5H[46m([m[13;9H([20C)[25C[46m)[m[52;162H57[13;57H[?25h[?25l[9;1H[46m([m[12;5H([13;56H)[14;35H[46m)[m[52;160H4,36[14;36H[?25h[52;1H[K[14;35H[?25l[52;149H^[[14;35H[52;149H  [14;36H[52;159H14,35[9CTop[14;35H[?25h[?25l[52;149H:[14;35H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 92L, 2685B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:19:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:20:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:28:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:29:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:68:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:89:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 92L, 2685B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls))  (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls))))[106m)[m


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[52;159H14,35[9CTop[14;35H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls))  (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls))))[46m)[m


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[52;159H14,35[9CTop"lab5-sol.scm" 92L, 2685B[14;35H[?25h[?25l[9;1H(
  [46m([14;34H)[m)[52;163H4[14;34H[?25h[?25l[10;3H([14;34H)[52;160H3,31[13;31H[?25h[?25l  [46m([20C)[m[52;163H3[13;33H[?25h[?25l[52;149Hi[13;33H[52;149H [13;33H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H13,33[9CTop[13;33H[?25h[?25l([46ms[mum-lengths ([1m[96mcdr[m ls)[13;56H[K[13;32H[46m([ms[19C[46m)[m)[52;163H2[13;32H[?25h[?25l[9;1H[46m([m[13;32H([20C)[14;35H[46m)[m[52;160H4,36[14;36H[?25h[?25l[9;1H([14;35H)[52;160H3,8 [13;8H[?25h[?25l[12;6H[46m([14C)[m[52;160H2,22[12;22H[?25h[?25l    [46m([m([14C)[13;55H[46m)[m[52;160H3,56[13;56H[?25h[?25li[12;5H([13;55H)[52;163H7[13;57H[?25h[?25l[13;56H[K[12;5H[46m([13;55H)[m[52;163H6[13;56H[?25h[?25l[14;51r[14;1H[L[1;52r[52;159H[K[52;159H14,5[10CTop[12;5H([13;55H)
    [?25h[?25l([46m([15;34H)[m[52;162H6[14;6H[?25h[?25l)[46m)[m[15;34H)[52;162H7[14;7H[?25h[?25l[52;162H6[14;6H[?25h[?25l[46mn[m)n[46m)[m[52;162H7[14;7H[?25h[?25l[46mo[m)o[46m)[m[52;162H8[14;8H[?25h[?25l[1m[96mno[m[1m[96m[46mt[m)[1m[96mt[m[46m)[m[52;162H9[14;9H[?25h[?25l[46m [m) [46m)[m[52;162H10[14;10H[?25h[?25l[46m([m)    ([5C[46m)[m[52;163H1[14;11H[?25h[?25l[1C)    [46m([m[4C()[46m)[m[52;163H2[14;12H[?25h[?25l    ([4C[46m()[m)[52;163H1[14;11H[?25h[?25l[46mp[m))p[46m)[m[52;163H2[14;12H[?25h[?25l[46ma[m))a[46m)[m[52;163H3[14;13H[?25h[?25l[46mi[m))i[46m)[m[52;163H4[14;14H[?25h[?25l[46mr[m))r[46m)[m[52;163H5[14;15H[?25h[?25l[1m[96mpair[m[1m[96m[46m?[m))[1m[96m?[m[46m)[m[52;163H6[14;16H[?25h[?25l[46m [m)) [46m)[m[52;163H7[14;17H[?25h[?25l[46mc[m))c[46m)[m[52;163H8[14;18H[?25h[?25l[46ma[m))a[46m)[m[52;163H9[14;19H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m))[1m[96mr[m[46m)[m[52;162H20[14;20H[?25h[?25l[46m [m)) [46m)[m[52;163H1[14;21H[?25h[?25l[46ml[m))l[46m)[m[52;163H2[14;22H[?25h[?25l[46ms[m))s[46m)[m[52;163H3[14;23H[?25h[?25l)[14;24H[K[14;22H[46m)[m)[52;163H2[14;22H[?25h[?25l)[14;23H[K[14;21H[46m)[m)[52;163H1[14;21H[?25h[?25l)[14;22H[K[14;20H[46m)[m)[52;163H0[14;20H[?25h[?25lca)[46m)[m[14;21H[K[14;19H[46m)[m)[52;162H19[14;19H[?25h[?25l)[14;20H[K[14;18H[46m)[m)[52;163H8[14;18H[?25h[?25l)[14;19H[K[14;17H[46m)[m)[52;163H7[14;17H[?25h[?25l[46m([m))[14;10H([7C[46m)[m[52;163H8[14;18H[?25h[?25l[46mc[m))c[46m)[m[52;163H9[14;19H[?25h[?25l[46ma[m))a[46m)[m[52;162H20[14;20H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m))[1m[96mr[m[46m)[m[52;163H1[14;21H[?25h[?25l[46m [m)) [46m)[m[52;163H2[14;22H[?25h[?25l[46ml[m))l[46m)[m[52;163H3[14;23H[?25h[?25l[46ms[m))s[46m)[m[52;163H4[14;24H[?25h[?25l[14;17H([6C)[52;163H3[14;23H[?25h[?25l[52;163H2[14;22H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H0[14;20H[?25h[?25l[52;162H19[14;19H[?25h[?25l[46m([6C)[m[52;163H8[14;18H[?25h[?25l[52;163H7[14;17H[?25h[?25l([6C)[52;163H6[14;16H[?25h[?25l[52;163H5[14;15H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H3[14;13H[?25h[?25l[52;163H2[14;12H[?25h[?25l[46m([14C)[m[52;163H1[14;11H[?25h[?25l[52;163H0[14;10H[?25h[?25l([14C)[52;162H9 [14;9H[?25h[?25l[52;162H8[14;8H[?25h[?25l[52;162H7[14;7H[?25h[?25l[46m([15;34H)[m[52;162H6[14;6H[?25h[?25l([1m[96mnot[m ([1m[96mpair?[m ([1m[96mcar[m ls))    ([46m([m[52;162H7[14;7H[?25h[?25l[52;162H6[14;6H[?25h[?25l[46ma[m([1m[96mnot[m ([1m[96mpair?[m ([1m[96mcar[m ls))    (a[46m([m[52;162H7[14;7H[?25h[?25l[46mn[m([1m[96mnot[m ([1m[96mpair?[m ([1m[96mcar[m ls))[14;7Hn[46m([m[52;162H8[14;8H[?25h[?25l[93man[m[93m[46md[m([1m[96mnot[m ([1m[96mpair?[m ([1m[96mcar[m ls))[14;8H[93md[m[46m([m[52;162H9[14;9H[?25h[?25l[46m [m([1m[96mnot[m ([1m[96mpair?[m ([1m[96mcar[m ls))[14;9H [46m([m[52;162H10[14;10H[?25h[?25l[52;163H1[14;11H[?25h[?25l([15;34H)[52;163H2[14;12H[?25h[?25l[52;163H3[14;13H[?25h[?25l[52;163H4[14;14H[?25h[?25l [46m([14C)[m[52;163H5[14;15H[?25h[?25l[52;163H6[14;16H[?25h[?25l([14C)[52;163H7[14;17H[?25h[?25l[52;163H8[14;18H[?25h[?25l[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l [46m([6C)[m[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25l([6C)[52;163H4[14;24H[?25h[?25l[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H8[14;28H[?25h[?25l[46m([6C)[m[52;163H9[14;29H[?25h[?25l[14;15H[46m([m[6C([6C)[46m)[m[52;162H30[14;30H[?25h[?25l[52;163H1[14;31H[?25h[?25l)[14;10H[46m([m[4C([14C)[46m)[m[52;163H2[14;32H[?25h[?25l[14;10H([20C)[52;163H3[14;33H[?25h[?25l([46m([15;34H)[m[52;163H4[14;34H[?25h[?25l)[46m)[m[15;34H)[52;163H5[14;35H[?25h[?25l[52;163H4[14;34H[?25h[?25l[46mn[m)n[46m)[m[52;163H5[14;35H[?25h[?25l[46mo[m)o[46m)[m[52;163H6[14;36H[?25h[?25l[1m[96mno[m[1m[96m[46mt[m)[1m[96mt[m[46m)[m[52;163H7[14;37H[?25h[?25l[46m [m) [46m)[m[52;163H8[14;38H[?25h[?25l[46m([m)[14;33H([5C[46m)[m[52;163H9[14;39H[?25h[?25l[1C)[14;33H[46m([m[4C()[46m)[m[52;162H40[14;40H[?25h[?25l[14;33H([4C[46m()[m)[52;162H39[14;39H[?25h[?25l[46mq[m))q[46m)[m[52;162H40[14;40H[?25h[?25l)[14;41H[K[14;39H[46m)[m)[52;162H39[14;39H[?25h[?25l[46me[m))e[46m)[m[52;162H40[14;40H[?25h[?25l[46mq[m))q[46m)[m[52;163H1[14;41H[?25h[?25l[46mu[m))u[46m)[m[52;163H2[14;42H[?25h[?25l[46ma[m))a[46m)[m[52;163H3[14;43H[?25h[?25l[46ml[m))l[46m)[m[52;163H4[14;44H[?25h[?25l[1m[96mequal[m[1m[96m[46m?[m))[1m[96m?[m[46m)[m[52;163H5[14;45H[?25h[?25l[46m [m)) [46m)[m[52;163H6[14;46H[?25h[?25l[38;5;224m[46m`[m))[38;5;224m`[m[46m)[m[52;163H7[14;47H[?25h[?25l)[14;48H[K[14;46H[46m)[m)[52;163H6[14;46H[?25h[?25l)[14;47H[K[14;45H[46m)[m)[52;163H5[14;45H[?25h[?25lequal)[46m)[m[14;46H[K[14;44H[46m)[m)[52;163H4[14;44H[?25h[?25l)[14;45H[K[14;43H[46m)[m)[52;163H3[14;43H[?25h[?25l)[14;44H[K[14;42H[46m)[m)[52;163H2[14;42H[?25h[?25l)[14;43H[K[14;41H[46m)[m)[52;163H1[14;41H[?25h[?25l)[14;42H[K[14;40H[46m)[m)[52;163H0[14;40H[?25h[?25l)[14;41H[K[14;39H[46m)[m)[52;162H39[14;39H[?25h[?25l[46m)[m[14;40H[K[14;33H[46m([m[5C)[52;163H8[14;38H[?25h[?25l[46mn[m))n[46m)[m[52;163H9[14;39H[?25h[?25l[46mu[m))u[46m)[m[52;162H40[14;40H[?25h[?25l[46ml[m))l[46m)[m[52;163H1[14;41H[?25h[?25l)[14;42H[K[14;40H[46m)[m)[52;163H0[14;40H[?25h[?25l)[14;41H[K[14;39H[46m)[m)[52;162H39[14;39H[?25h[?25l)[14;40H[K[14;38H[46m)[m)[52;163H8[14;38H[?25h[?25l[46m([m))[14;33H([5C[46m)[m[52;163H9[14;39H[?25h[?25l[2C)[14;33H[46m([m[4C()[46m)[m[52;162H40[14;40H[?25h[?25l[14;33H([4C[46m()[m)[52;162H39[14;39H[?25h[?25l[46mm[m)))m[46m)[m[52;162H40[14;40H[?25h[?25l)[14;42H[K[14;39H[46m)[m)[52;162H39[14;39H[?25h[?25l[46mn[m)))n[46m)[m[52;162H40[14;40H[?25h[?25l[46mu[m)))u[46m)[m[52;163H1[14;41H[?25h[?25l[46ml[m)))l[46m)[m[52;163H2[14;42H[?25h[?25l[46ml[m)))l[46m)[m[52;163H3[14;43H[?25h[?25l[1m[96mnull[m[1m[96m[46m?[m)))[1m[96m?[m[46m)[m[52;163H4[14;44H[?25h[?25l[14;33H[46m([m[4C([5C)[46m)[m[52;163H5[14;45H[?25h[?25l[14;33H([4C[46m([5C)[m)[52;163H4[14;44H[?25h[?25l[46m [m))) [46m)[m[52;163H5[14;45H[?25h[?25l[46ml[m)))l[46m)[m[52;163H6[14;46H[?25h[?25l[46ms[m)))s[46m)[m[52;163H7[14;47H[?25h[?25l[14;38H([8C)[52;163H6[14;46H[?25h[?25l[52;163H5[14;45H[?25h[?25l[52;163H4[14;44H[?25h[?25l[52;163H3[14;43H[?25h[?25l[52;163H2[14;42H[?25h[?25l[52;163H1[14;41H[?25h[?25l[52;163H0[14;40H[?25h[?25l[46m([8C)[m[52;162H39[14;39H[?25h[?25l[52;163H8[14;38H[?25h[?25l([8C)[52;163H7[14;37H[?25h[?25l[52;163H6[14;36H[?25h[?25l[52;163H5[14;35H[?25h[?25l[46m([14C)[m[52;163H4[14;34H[?25h[?25l[52;163H3[14;33H[?25h[?25l[14;10H[46m([20C)[m ([14C)[52;163H2[14;32H[?25h[?25l[52;163H1[14;31H[?25h[?25l[14;10H([4C[46m([14C)[m)[52;163H0[14;30H[?25h[?25l[14;15H([6C[46m([6C)[m)[52;162H29[14;29H[?25h[?25l[14;22H([6C)[52;163H8[14;28H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H5[14;25H[?25h[?25l[52;163H4[14;24H[?25h[?25l[46m([6C)[m[52;163H3[14;23H[?25h[?25l[52;163H2[14;22H[?25h[?25l([6C)[52;163H1[14;21H[?25h[?25l[52;163H0[14;20H[?25h[?25l[52;162H19[14;19H[?25h[?25l[52;163H8[14;18H[?25h[?25l[52;163H7[14;17H[?25h[?25l[46m([14C)[m[52;163H6[14;16H[?25h[?25l[52;163H5[14;15H[?25h[?25l([14C)[52;163H4[14;14H[?25h[?25l[52;163H3[14;13H[?25h[?25l[52;163H2[14;12H[?25h[?25l[52;163H3[14;13H[?25h[?25l[52;163H4[14;14H[?25h[?25l [46m([14C)[m[52;163H5[14;15H[?25h[?25l[52;163H6[14;16H[?25h[?25l([14C)[52;163H7[14;17H[?25h[?25l[52;163H8[14;18H[?25h[?25l[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l [46m([6C)[m[52;163H2[14;22H[?25h[?25l[52;163H3[14;23H[?25h[?25l([6C)[52;163H4[14;24H[?25h[?25l[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H8[14;28H[?25h[?25l[46m([6C)[m[52;163H9[14;29H[?25h[?25l[14;15H[46m([m[6C([6C)[46m)[m[52;162H30[14;30H[?25h[?25l[14;10H[46m([m[4C([14C)[46m)[m[52;163H1[14;31H[?25h[?25l[52;163H2[14;32H[?25h[?25l[14;10H([20C) [46m([14C)[m[52;163H3[14;33H[?25h[?25l[52;163H4[14;34H[?25h[?25l([14C)[52;163H5[14;35H[?25h[?25l[52;163H6[14;36H[?25h[?25l[52;163H7[14;37H[?25h[?25l [46m([8C)[m[52;163H8[14;38H[?25h[?25l[52;163H9[14;39H[?25h[?25l([8C)[52;162H40[14;40H[?25h[?25l[52;163H1[14;41H[?25h[?25l[52;163H2[14;42H[?25h[?25l[52;163H3[14;43H[?25h[?25l[52;163H4[14;44H[?25h[?25l[52;163H5[14;45H[?25h[?25l[52;163H6[14;46H[?25h[?25l[14;38H[46m([8C)[m[52;163H7[14;47H[?25h[?25l[14;33H[46m([m[4C([8C)[46m)[m[52;163H8[14;48H[?25h[?25l    [46m([m[27C([14C)[46m)[m[52;163H9[14;49H[?25h[?25l[52;162H50[14;50H[?25h[?25l[14;49H[K[14;5H([27C[46m([14C)[m[52;162H49[14;49H[?25h[?25l[52;163H8[14;48H[?25h[?25l[14;33H([4C[46m([8C)[m)[52;163H7[14;47H[?25h[?25l[14;38H([8C)[52;163H6[14;46H[?25h[?25l[52;163H5[14;45H[?25h[?25l[52;163H4[14;44H[?25h[?25l[52;163H3[14;43H[?25h[?25l[52;163H2[14;42H[?25h[?25l[52;163H1[14;41H[?25h[?25l[52;163H0[14;40H[?25h[?25l[46m([8C)[m[52;162H39[14;39H[?25h[?25l[52;163H8[14;38H[?25h[?25l([8C)[52;163H7[14;37H[?25h[?25l[52;163H6[14;36H[?25h[?25l[52;163H5[14;35H[?25h[?25l[46m([14C)[m[52;163H4[14;34H[?25h[?25l[52;163H3[14;33H[?25h[?25l[14;10H[46m([20C)[m ([14C)[52;163H2[14;32H[?25h[?25l[52;163H1[14;31H[?25h[?25l[14;10H([4C[46m([14C)[m)[52;163H0[14;30H[?25h[?25l[14;15H([6C[46m([6C)[m)[52;162H29[14;29H[?25h[?25l[14;22H([6C)[52;163H8[14;28H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H5[14;25H[?25h[?25l[52;163H4[14;24H[?25h[?25l[46m([6C)[m[52;163H2[14;22H[?25h[?25l([6C)[52;163H1[14;21H[?25h[?25l[52;163H0[14;20H[?25h[?25l[52;162H19[14;19H[?25h[?25l[52;163H8[14;18H[?25h[?25l[52;163H7[14;17H[?25h[?25l[46m([14C)[m[52;163H6[14;16H[?25h[?25l[52;163H5[14;15H[?25h[?25l([14C)[52;163H4[14;14H[?25h[?25l[52;163H3[14;13H[?25h[?25l[52;163H2[14;12H[?25h[?25l[46m([20C)[m[52;163H1[14;11H[?25h[?25l[52;163H0[14;10H[?25h[?25l([20C)[52;162H9 [14;9H[?25h[?25l[52;162H8[14;8H[?25h[?25l[52;162H7[14;7H[?25h[?25l[46m([15;34H)[m[52;162H6[14;6H[?25h[?25l([93mand[m ([1m[96mnot[m ([1m[96mpair?[m ([1m[96mcar[m ls))) ([1m[96mnot[m ([1m[96mnull?[m ls))    ([46m([m[52;162H7[14;7H[?25h[?25l([15;34H)[52;162H8[14;8H[?25h[?25l[52;162H9[14;9H[?25h[?25l[52;162H10[14;10H[?25h[?25l [46m([20C)[m[52;163H1[14;11H[?25h[?25l[52;163H2[14;12H[?25h[?25l([20C)[52;163H3[14;13H[?25h[?25l[52;163H4[14;14H[?25h[?25l[52;163H5[14;15H[?25h[?25l [46m([14C)[m[52;163H6[14;16H[?25h[?25l[52;163H7[14;17H[?25h[?25l([14C)[52;163H8[14;18H[?25h[?25l[52;163H9[14;19H[?25h[?25l[52;162H20[14;20H[?25h[?25l[52;163H1[14;21H[?25h[?25l[52;163H2[14;22H[?25h[?25l [46m([6C)[m[52;163H3[14;23H[?25h[?25l[52;163H4[14;24H[?25h[?25l([6C)[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H8[14;28H[?25h[?25l[52;163H9[14;29H[?25h[?25l[46m([6C)[m[52;162H30[14;30H[?25h[?25l[14;16H[46m([m[6C([6C)[46m)[m[52;163H1[14;31H[?25h[?25l[14;11H[46m([m[4C([14C)[46m)[m[52;163H2[14;32H[?25h[?25l[52;163H3[14;33H[?25h[?25l[14;11H([20C) [46m([14C)[m[52;163H4[14;34H[?25h[?25l[52;163H5[14;35H[?25h[?25l([14C)[52;163H6[14;36H[?25h[?25l[52;163H7[14;37H[?25h[?25l[52;163H8[14;38H[?25h[?25l [46m([8C)[m[52;163H9[14;39H[?25h[?25l[52;162H40[14;40H[?25h[?25l([8C)[52;163H1[14;41H[?25h[?25l[52;163H2[14;42H[?25h[?25l[52;163H3[14;43H[?25h[?25l[52;163H4[14;44H[?25h[?25l[52;163H5[14;45H[?25h[?25l[52;163H6[14;46H[?25h[?25l[52;163H7[14;47H[?25h[?25l[14;39H[46m([8C)[m[52;163H8[14;48H[?25h[?25l[14;34H[46m([m[4C([8C)[46m)[m[52;163H9[14;49H[?25h[?25l[52;162H50[14;50H[?25h[?25l)    ([46m([m[27C([14C)[46m)[m[52;163H1[14;51H[?25h[?25l[15;51r[15;1H[L[1;52r[52;159H[K[52;159H15,6[10CTop[14;6H([43C)[15;6H[?25h[?25l([46m([16;34H)[m[52;162H7[15;7H[?25h[?25l[95m1[m([16;34H)[52;162H8[15;8H[?25h[?25l[52;162H9[15;9H[?25h[?25l[1m[96m+[m[52;162H10[15;10H[?25h[?25l[52;163H1[15;11H[?25h[?25ls[52;163H2[15;12H[?25h[?25lu[52;163H3[15;13H[?25h[?25lm[52;163H4[15;14H[?25h[?25ll[52;163H5[15;15H[?25h[?25l[15;14H[K[52;163H4[15;14H[?25h[?25l[15;13H[K[52;163H3[15;13H[?25h[?25l[15;12H[K[52;163H2[15;12H[?25h[?25l[15;11H[K[52;163H1[15;11H[?25h[?25l([46m([16;34H)[m[52;163H2[15;12H[?25h[?25ls([16;34H)[52;163H3[15;13H[?25h[?25li[52;163H4[15;14H[?25h[?25l[15;13H[K[52;163H3[15;13H[?25h[?25lu[52;163H4[15;14H[?25h[?25lm[52;163H5[15;15H[?25h[?25l-[52;163H6[15;16H[?25h[?25ll[52;163H7[15;17H[?25h[?25le[52;163H8[15;18H[?25h[?25ln[52;163H9[15;19H[?25h[?25lg[52;162H20[15;20H[?25h[?25lh[52;163H1[15;21H[?25h[?25lt[52;163H2[15;22H[?25h[?25ls[52;163H3[15;23H[?25h[?25l[52;163H4[15;24H[?25h[?25l([46m([16;34H)[m[52;163H5[15;25H[?25h[?25lc([16;34H)[52;163H6[15;26H[?25h[?25la[52;163H7[15;27H[?25h[?25l[1m[96mcar[m[52;163H8[15;28H[?25h[?25l[52;163H9[15;29H[?25h[?25ll[52;162H30[15;30H[?25h[?25ls[52;163H1[15;31H[?25h[?25l)[15;24H[46m([6C)[m[52;163H2[15;32H[?25h[?25l[52;163H1[15;31H[?25h[?25l[15;24H([6C)[52;163H0[15;30H[?25h[?25l[52;162H29[15;29H[?25h[?25l[52;163H8[15;28H[?25h[?25l[52;163H7[15;27H[?25h[?25l[52;163H8[15;28H[?25h[?25lca ls)[15;31H[K[52;163H7[15;27H[?25h[?25l ls)[15;30H[K[52;163H6[15;26H[?25h[?25l ls)[15;29H[K[15;24H[46m([m ls[46m)[m[52;163H5[15;25H[?25h[?25lc l[46ms[m)(c ls[52;163H6[15;26H[?25h[?25ld ls)[52;163H7[15;27H[?25h[?25l[1m[96mcdr[m ls)[52;163H8[15;28H[?25h[?25l[52;163H9[15;29H[?25h[?25l[52;162H30[15;30H[?25h[?25l[46m([6C)[m[52;163H1[15;31H[?25h[?25l[52;163H2[15;32H[?25h[?25l)[15;11H[46m([m[12C([6C)[46m)[m[52;163H3[15;33H[?25h[?25l)     [46m([m[4C([20C)[46m)[m[52;163H4[15;34H[?25h[?25l)[14;5H[46m([m[15;6H([26C)[46m)[m[52;163H5[15;35H[?25h[?25l[52;163H4[15;34H[?25h[?25l[14;5H([15;6H[46m([26C)[m)[52;163H3[15;33H[?25h[?25l     ([4C[46m([20C)[m)[52;163H2[15;32H[?25h[?25l[15;11H([12C[46m([6C)[m)[52;163H1[15;31H[?25h[?25l[15;11H[46m([m[12C([6C)[46m)[m[52;163H2[15;32H[?25h[?25l     [46m([m[4C([20C)[46m)[m[52;163H3[15;33H[?25h[?25l[14;5H[46m([m[15;6H([26C)[46m)[m[52;163H4[15;34H[?25h[?25l[52;163H5[15;35H[?25h[?25l[9;1H[46m([m[14;5H([15;34H)[16;35H[46m)[m[52;160H6[16;35H[?25h[?25l[9;1H(
  [46m([16;34H)[m)[52;163H4[16;34H[?25h[?25l[10;3H([16;5H[46m([27C)[m)[52;163H3[16;33H[?25h[?25l    ([5C[46m([20C)[m)[52;163H2[16;32H[?25h[?25l[16;11H([12C[46m([6C)[m)[52;163H1[16;31H[?25h[?25l[16;24H([6C)[52;163H0[16;30H[?25h[?25l[52;162H29[16;29H[?25h[?25l[52;162H30[16;30H[?25h[?25l[46m([6C)[m[52;163H1[16;31H[?25h[?25l[15;24H[46m([6C)[m[16;24H([6C)[52;160H5[15;31H[?25h[?25l[14;16H[46m([14C)[m[15;24H([6C)[52;160H4[14;31H[?25h[?25l[13;9H[46m([20C)[m[14;16H([14C)[52;160H3[13;31H[?25h[?25l[13;9H([20C)[14;16H[46m([14C)[m[52;160H4[14;31H[?25h[?25l[14;16H([6C[46m([6C)[m)[52;163H0[14;30H[?25h[?25l[14;23H([6C)[52;162H29[14;29H[?25h[?25l[52;163H8[14;28H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H5[14;25H[?25h[?25l[46m([6C)[m[52;163H4[14;24H[?25h[?25l([6C)[52;163H5[14;25H[?25h[?25l[52;163H6[14;26H[?25h[?25l[52;163H7[14;27H[?25h[?25l[52;163H8[14;28H[?25h[?25l[52;163H9[14;29H[?25h[?25l[46m([6C)[m[52;162H30[14;30H[?25h[?25l[14;16H[46m([m[6C([6C)[46m)[m[52;163H1[14;31H[?25h[?25l[14;11H[46m([m[4C([14C)[46m)[m[52;163H2[14;32H[?25h[?25l[52;163H3[14;33H[?25h[?25l[14;11H([20C) [46m([14C)[m[52;163H4[14;34H[?25h[?25l[52;163H5[14;35H[?25h[?25l([14C)[52;163H6[14;36H[?25h[?25l[46m([14C)[m[52;163H5[14;35H[?25h[?25l[52;163H4[14;34H[?25h[?25l[52;163H5[14;35H[?25h[?25l([14C)[52;163H6[14;36H[?25h[?25l[52;163H7[14;37H[?25h[?25l[52;163H8[14;38H[?25h[?25l [46m([8C)[m[52;163H9[14;39H[?25h[?25l[52;162H40[14;40H[?25h[?25l[52;162H39[14;39H[?25h[?25l([8C)[52;163H8[14;38H[?25h[?25l[52;163H7[14;37H[?25h[?25l[52;163H6[14;36H[?25h[?25l[46m([14C)[m[52;163H5[14;35H[?25h[?25l[52;163H4[14;34H[?25h[?25l[14;11H[46m([20C)[m ([14C)[52;163H3[14;33H[?25h[?25l[52;163H2[14;32H[?25h[?25l[52;163H3[14;33H[?25h[?25l[14;11H([20C) [46m([14C)[m[52;163H4[14;34H[?25h[?25l[52;163H5[14;35H[?25h[?25l([14C)[52;163H6[14;36H[?25h[?25l[52;163H7[14;37H[?25h[?25l[52;163H8[14;38H[?25h[?25l [46m([8C)[m[52;163H9[14;39H[?25h[?25l[52;162H40[14;40H[?25h[?25l([8C)[52;163H1[14;41H[?25h[?25l[52;163H2[14;42H[?25h[?25l[52;163H3[14;43H[?25h[?25l[52;163H4[14;44H[?25h[?25l[52;163H5[14;45H[?25h[?25l[52;163H6[14;46H[?25h[?25l[52;163H7[14;47H[?25h[?25l[14;39H[46m([8C)[m[52;163H8[14;48H[?25h[?25l[14;34H[46m([m[4C([8C)[46m)[m[52;163H9[14;49H[?25h[?25l    ([46m([m[27C([14C)[46m)[m[52;162H50[14;50H[?25h[?25l    [46m([m([43C)[15;34H[46m)[m[52;160H5,35[15;35H[?25h[?25l[52;163H4[15;34H[?25h[?25l[14;5H([15;6H[46m([26C)[m)[52;163H3[15;33H[?25h[?25l     ([4C[46m([20C)[m)[52;163H2[15;32H[?25h[?25l[15;11H([12C[46m([6C)[m)[52;163H1[15;31H[?25h[?25l[15;24H([6C)[16;24H[46m([6C)[m[52;160H6[16;31H[?25h[?25l[16;24H([6C)[52;160H7,2-9[17;9H[?25h[?25l[16;24H[46m([6C)[m[52;160H6,31 [16;31H[?25h[?25l[16;24H([6C)[52;160H7,2-9[17;9H[?25h[?25l[16;24H[46m([6C)[m[52;160H6,31 [16;31H[?25h[?25l[15;24H[46m([6C)[m[16;24H([6C)[52;160H5[15;31H[?25h[52;1H[K[15;30H[?25l[52;149H^[[15;30H[52;149H  [15;31H[15;24H([6C)[52;159H15,30[9CTop[15;30H[?25h[?25l[52;149H:[15;30H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2770B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:15:11: sum-lenghts: unbound identifier
  in: sum-lenghts
  location...:
   lab5-sol.scm:15:11
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2770B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    (([38;5;130mand[m ([36mnot[m ([36mpair?[m ([36mcar[m ls))) ([36mnot[m ([36mnull?[m ls)))[15;6H([31m1[m [36m+[m (sum-lenghts ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H15,30[9CTop[15;30H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    (([93mand[m ([1m[96mnot[m ([1m[96mpair?[m ([1m[96mcar[m ls))) ([1m[96mnot[m ([1m[96mnull?[m ls)))[15;6H([95m1[m [1m[96m+[m (sum-lenghts ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H15,30[9CTop"lab5-sol.scm" 94L, 2770B[15;30H[?25h[?25l[52;160H6,28[16;28H[?25h[?25l[52;162H19[16;19H[?25h[?25l[52;162H23[16;23H[?25h[?25l[52;163H2[16;22H[?25h[?25l[52;149Hi[16;22H[52;149H [16;22H[52;1H[1m-- INSERT --[m[52;13H[K[52;159H16,22[9CTop[16;22H[?25h[?25l[52;160H5[15;22H[?25h[?25l[52;163H1[15;21H[?25h[?25lts ([1m[96mcdr[m ls)[15;34H[K[52;163H0[15;20H[?25h[?25l[52;163H1[15;21H[?25h[?25lhs ([1m[96mcdr[m ls))))[52;163H2[15;22H[?25h[?25l[52;160H4[14;22H[?25h[52;1H[K[14;21H[?25l[52;149H^[[14;21H[52;149H  [14;22H[52;159H14,21[9CTop[14;21H[?25h[?25l[52;149H:[14;21H[52;149H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2770B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 1
  arguments...:
   #<procedure:+>
   0
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"lab5-sol.scm" 94L, 2770B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    (([38;5;130mand[m ([36mnot[m ([36mpair?[m ([36mcar[m ls))) ([36mnot[m ([36mnull?[m ls)))[15;6H([31m1[m [36m+[m (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[52;159H14,21[9CTop[14;21H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    (([93mand[m ([1m[96mnot[m ([1m[96mpair?[m ([1m[96mcar[m ls))) ([1m[96mnot[m ([1m[96mnull?[m ls)))[15;6H([95m1[m [1m[96m+[m (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[52;159H14,21[9CTop"lab5-sol.scm" 94L, 2770B[14;21H[?25h[?25l[9;1H[46m([16;35H)[m[52;160H6,35[16;35H[?25h[?25l[9;1H([16;35H)[52;160H5,27[15;27H[?25h[?25l[52;160H1,12[11;12H[?25h[?25l    [46m([12C)[m[52;163H8[11;18H[?25h[?25l    ([12C)[52;159H23,0-1[23;1H[?25h[?25l[52;149H^[[23;1H[52;149H  [23;1H[52;149H^[[23;1H[52;149H  [23;1H[?25h[?25l[52;149H:[23;1H[52;1H[K[52;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[52;1H[K[52;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote06:~/i471a/submit/lab5$ [?2004l
exit

Script done on 2022-03-03 14:33:53-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-03-03 14:51:49-05:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="126" LINES="35"]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ exitscript -a lab5.LOGcd i471a/submit/lab5/[4Pvim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"lab5-sol.scm" 94L, 2770B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    (([36mpair?[m ([36mcar[m ls))[13;6H([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))
    (([38;5;130mand[m ([36mnot[m ([36mpair?[m ([36mcar[m ls))) ([36mnot[m ([36mnull?[m ls)))[15;6H([31m1[m [36m+[m (sum-lengths ([36mcdr[m ls))))
    ([38;5;130melse[m (sum-lengths ([36mcdr[m ls)))))


(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...[m[35;109H23,0-1[8CTop[23;1H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    (([1m[96mpair?[m ([1m[96mcar[m ls))[13;6H([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
    (([93mand[m ([1m[96mnot[m ([1m[96mpair?[m ([1m[96mcar[m ls))) ([1m[96mnot[m ([1m[96mnull?[m ls)))[15;6H([95m1[m [1m[96m+[m (sum-lengths ([1m[96mcdr[m ls))))
    ([93melse[m (sum-lengths ([1m[96mcdr[m ls)))))


(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...[m[35;109H23,0-1[8CTop"lab5-sol.scm" 94L, 2770B[23;1H[?25h[?25l[35;109H13,7  [13;7H[?25h[?25l[12;5H[46m([13;55H)[m[35;110H2,5[12;5H[?25h[?25l[35;99H2[12;6H[48;5;242m([m[46m([14C)[m[13;55H)[35;1H[1m-- VISUAL --[m[35;13H[K[35;99H2[12;6H[35;109H12,6[10CTop[12;6H[?25h[?25l[35;99H3[12;7H[48;5;242m([m[14C)[35;112H7[12;7H[?25h[?25l[35;99H4[12;8H[1m[96m[48;5;242mp[m[1m[96mair?[m [35;112H8[12;8H[?25h[?25l[35;99H5[12;9H[1m[96m[48;5;242ma[m[1m[96mir?[m [35;112H9[12;9H[?25h[?25l[35;99H2[13;9H[12;9H[1m[96m[48;5;242mir?[m[48;5;242m ([m[1m[96m[48;5;242mcar[m[48;5;242m ls)) 
     ([m[1m[96m[48;5;242m+[m[48;5;242m [m[46m([20C)[m[35;110H3[13;9H[?25h[?25l[1C[48;5;242m([m[20C)[35;112H10[13;10H[?25h[?25ls[48;5;242ms[m[35;113H1[13;11H[?25h[?25lu[48;5;242mu[m[35;113H2[13;12H[?25h[?25lm[48;5;242mm[m[35;113H3[13;13H[?25h[?25l-[48;5;242m-[m[35;113H4[13;14H[?25h[?25ll[48;5;242ml[m[35;113H5[13;15H[?25h[?25le[48;5;242me[m[35;113H6[13;16H[?25h[?25ln[48;5;242mn[m[35;113H7[13;17H[?25h[?25lg[48;5;242mg[m[35;113H8[13;18H[?25h[?25lt[48;5;242mt[m[35;113H9[13;19H[?25h[?25lh[48;5;242mh[m[35;112H20[13;20H[?25h[?25ls[48;5;242ms[m[35;113H1[13;21H[?25h[?25l [48;5;242m [m[46m([6C)[m[35;113H2[13;22H[?25h[?25l[1C[48;5;242m([m[6C)[35;113H3[13;23H[?25h[?25l[35;99H3[14;23H[13;23H[1m[96m[48;5;242mcar[m[48;5;242m ls)) (sum-lengths ([m[1m[96m[48;5;242mcdr[m[48;5;242m ls)))) 
    (([m[93m[48;5;242mand[m[48;5;242m ([m[1m[96m[48;5;242mnot[m[48;5;242m ([m[1m[96m[48;5;242mpair?[m[48;5;242m [m[46m([6C)[m[35;110H4[14;23H[?25h[?25l[1C[48;5;242m([m[6C)[35;113H4[14;24H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mar[m [35;113H5[14;25H[?25h[?25l[1C[1m[96m[48;5;242ma[m[1m[96mr[m [35;113H6[14;26H[?25h[?25l[1C[1m[96m[48;5;242mr[m [35;113H7[14;27H[?25h[?25l [48;5;242m [m[35;113H8[14;28H[?25h[?25ll[48;5;242ml[m[35;113H9[14;29H[?25h[?25ls[48;5;242ms[m[46m)[m[35;112H30[14;30H[?25h[?25l[1C[48;5;242m)[m[46m)[m[35;113H1[14;31H[?25h[?25l[1C[48;5;242m)[m[46m)[m[35;113H2[14;32H[?25h[?25l[1C[48;5;242m)[m[35;113H3[14;33H[?25h[?25l[35;99H4[15;33H[14;33H[48;5;242m ([m[1m[96m[48;5;242mnot[m[48;5;242m ([m[1m[96m[48;5;242mnull?[m[48;5;242m ls))) 
     ([m[95m[48;5;242m1[m[48;5;242m [m[1m[96m[48;5;242m+[m[48;5;242m (sum-lengths ([m[1m[96m[48;5;242mcdr[m[48;5;242m ls))[m[46m)[m[35;110H5[15;33H[?25h[?25l[1C[48;5;242m)[m[46m)[m[35;113H4[15;34H[?25h[?25l[?25h[?25l[35;99H [13;31H[12;5H(([1m[96mpair?[m ([1m[96mcar[m ls))[12;22H[K[13;1H     ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[13;56H[K[14;1H    (([93mand[m ([1m[96mnot[m ([1m[96mpair?[m ([1m[96mcar[m ls))) ([1m[96mnot[m ([1m[96mnull?[m ls)))[14;51H[K[15;1H     ([95m1[m [1m[96m+[m (sum-lengths ([1m[96mcdr[m ls))))[35;1H[K[35;109H13,31[9CTop[13;31H[?25h[?25l[12;5H[46m([13;55H)[m[35;110H2,5 [12;5H[?25h[?25l[35;99H2[12;6H[48;5;242m([m[46m([14C)[m[13;55H)[35;1H[1m-- VISUAL --[m[35;99H[K[35;99H2[12;6H[35;109H12,6[10CTop[12;6H[?25h[?25l[35;99H3[12;7H[48;5;242m([m[14C)[35;112H7[12;7H[?25h[?25l[35;99H4[12;8H[1m[96m[48;5;242mp[m[1m[96mair?[m [35;112H8[12;8H[?25h[?25l[35;99H5[12;9H[1m[96m[48;5;242ma[m[1m[96mir?[m [35;112H9[12;9H[?25h[?25l[35;99H6[12;10H[1m[96m[48;5;242mi[m[1m[96mr?[m [35;112H10[12;10H[?25h[?25l[35;99H7[12;11H[1m[96m[48;5;242mr[m[1m[96m?[m [35;113H1[12;11H[?25h[?25l[35;99H8[12;12H[1m[96m[48;5;242m?[m [35;113H2[12;12H[?25h[?25l[35;99H9[12;13H[48;5;242m [m[46m([6C)[m[35;113H3[12;13H[?25h[?25l[35;99H10[12;14H[48;5;242m([m[6C)[35;113H4[12;14H[?25h[?25l[35;100H1[12;15H[1m[96m[48;5;242mc[m[1m[96mar[m [35;113H5[12;15H[?25h[?25l[35;100H2[12;16H[1m[96m[48;5;242ma[m[1m[96mr[m [35;113H6[12;16H[?25h[?25l[35;100H3[12;17H[1m[96m[48;5;242mr[m [35;113H7[12;17H[?25h[?25l[35;100H4[12;18H[48;5;242m [m[35;113H8[12;18H[?25h[?25l[35;100H5[12;19H[48;5;242ml[m[35;113H9[12;19H[?25h[?25l[35;100H6[12;20H[48;5;242ms[m[46m)[m[35;112H20[12;20H[?25h[?25l[35;100H7[12;21H[48;5;242m)[m[46m)[m[35;113H1[12;21H[?25h[?25l[?25h[?25l[35;99Hc [12;21H[35;99H [12;5H[35;4H[1mINSERT [m[35;109H[K[35;109H12,5[10CTop[12;5H[K[12;5H[?25h[?25l([46m([13;55H)[m[35;112H6[12;6H[?25h[?25le([13;55H)[35;112H7[12;7H[?25h[?25ll[35;112H8[12;8H[?25h[?25ls[35;112H9[12;9H[?25h[?25l[93melse[m[35;112H10[12;10H[?25h[?25l[35;113H1[12;11H[?25h[?25l[13;6H[46m([47C)[m[35;110H3,6 [13;6H[?25h[?25l[1m[96m[46m=[m([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls[3C)     [1m[96m=[m[46m([m[46C)[46m)[m[35;112H7[13;7H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;56H[K[13;6H[46m([m[1m[96m+[m [45C[46m)[m)[35;112H6[13;6H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;55H[K[13;5H[46m([m[1m[96m+[m [45C[46m)[m)[35;112H5[13;5H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;54H[K[13;4H[46m([m[1m[96m+[m [45C[46m)[m)[35;112H4[13;4H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;53H[K[13;3H[46m([m[1m[96m+[m [45C[46m)[m)[35;112H3[13;3H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;52H[K[13;2H[46m([m[1m[96m+[m [45C[46m)[m)[35;112H2[13;2H[?25h[?25l([1m[96m[46m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)[13;51H[K[13;1H[46m([m[1m[96m+[m [45C[46m)[m)[35;112H1[13;1H[?25h[?25l[12;34r[34;1H
[1;35r[12;1H    ([93melse[m ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))
[46m [47C)[m[34;1H[96m;; all recursion should be tail-recursive[m[35;109H[K[35;109H12,11[9CTop[12;11H[46m([47C)[m
 [47C)[12;11H[?25h[?25l([47C)
    [46m([14;34H)[m[35;110H3,5 [13;5H[?25h[?25l[35;4H[1m(insert)- VISUAL --[m[35;109H[K[35;99H2[13;6H[35;109H13,6[10CTop[13;6H[48;5;242m([m[46m([43C)[m[14;34H)[13;6H[?25h[?25l[35;99H3[13;7H[48;5;242m([m[43C)[35;112H7[13;7H[?25h[?25l[35;99H4[13;8H[93m[48;5;242ma[m[35;112H8[13;8H[?25h[?25l[35;99H6[13;10H[93m[48;5;242mnd[m[35;112H10[13;10H[?25h[?25l[35;99H7[13;11H[48;5;242m [m[46m([20C)[m[35;113H1[13;11H[?25h[?25l[35;99H2[14;13H[13;11H[48;5;242m([m[1m[96m[48;5;242mnot[m[48;5;242m ([m[1m[96m[48;5;242mpair?[m[48;5;242m ([m[1m[96m[48;5;242mcar[m[48;5;242m ls))) ([m[1m[96m[48;5;242mnot[m[48;5;242m ([m[1m[96m[48;5;242mnull?[m[48;5;242m ls))) 
     ([m[95m[48;5;242m1[m[48;5;242m [m[1m[96m[48;5;242m+[m[48;5;242m (s[m[35;110H4,13[14;13H[?25h[?25lu[48;5;242mu[m[35;113H4[14;14H[?25h[?25lm-[48;5;242mm-[m[35;113H6[14;16H[?25h[?25ll[48;5;242ml[m[35;113H7[14;17H[?25h[?25le[48;5;242me[m[35;113H8[14;18H[?25h[?25ln[48;5;242mn[m[35;113H9[14;19H[?25h[?25lg[48;5;242mg[m[35;112H20[14;20H[?25h[?25lt[48;5;242mt[m[35;113H1[14;21H[?25h[?25lh[48;5;242mh[m[35;113H2[14;22H[?25h[?25ls[48;5;242ms[m[35;113H3[14;23H[?25h[?25l [48;5;242m [m[46m([6C)[m[35;113H4[14;24H[?25h[?25l[1C[48;5;242m([m[6C)[35;113H5[14;25H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mdr[m [35;113H6[14;26H[?25h[?25l[1C[1m[96m[48;5;242md[m[1m[96mr[m [35;113H7[14;27H[?25h[?25l[1C[1m[96m[48;5;242mr[m [35;113H8[14;28H[?25h[?25l[35;99H3[15;28H[14;28H[48;5;242m ls)))) 
    ([m[93m[48;5;242melse[m[48;5;242m (sum-lengths ([m[1m[96m[48;5;242mcdr[m [35;110H5[15;28H[?25h[?25l [48;5;242m [m[35;113H9[15;29H[?25h[?25ll[48;5;242ml[m[35;112H30[15;30H[?25h[?25ls[48;5;242ms[m[46m)[m[35;113H1[15;31H[?25h[?25l[1C[48;5;242m)[m[46m)[m[35;113H2[15;32H[?25h[?25l[1C[48;5;242m)[m[46m)[m[35;113H3[15;33H[?25h[?25l[1C[10;3H[46m([m[15;33H[48;5;242m)[m[46m)[m[35;113H4[15;34H[?25h[?25l[1C[9;1H[46m([m
  ([15;34H[48;5;242m)[m[46m)[m[35;113H5[15;35H[?25h[?25l[?25h[?25l[35;99Hc[15;35H[35;99H [13;5H[35;4H[1mINSERTt --[m[35;13H[K[35;109H13,5[10CTop[13;34r[13;1H[2M[1;35r[13;1H    [13;5H[K[33;1H([93mdefine[m (poly-eval x coeffs)
  [95m0[m)[35;109H[K[35;109H13,5[10CTop[9;1H([13;5H[?25h[?25l[35;110H4,1[14;1H[?25h[?25l[13;34r[34;1H
[1;35r[35;109H[K[35;109H13,5[10CTop[13;5H[?25h[?25l[35;112H4[13;4H[?25h[?25l[35;112H3[13;3H[?25h[?25l[35;112H2[13;2H[?25h[?25l[35;112H1[13;1H[?25h[?25l[12;34r[34;1H
[1;35r[12;5H([93melse[m ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[34;1H(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[35;109H[K[35;109H12,61[9CTop[12;5H[46m([54C)[?25h[?25l[m)[10;3H[46m([m[12;5H([54C)[46m)[m[35;113H2[12;62H[?25h[?25l)[9;1H[46m([m
  ([12;61H)[46m)[m[35;113H3[12;63H[?25h[?25l[9;1H([12;62H)[35;112H42[12;42H[?25h[?25l[35;112H23[12;23H[?25h[?25l[35;112H41[12;41H[?25h[35;1H[K[12;40H[?25l[35;99H^[[12;40H[35;99H  [12;41H[35;109H12,40[9CTop[12;40H[?25h[?25l[35;99H:[12;40H[35;99H[K[35;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2632B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm exit[Kscript -a lab5.LOGcd i471a/submit/lab5/[4Pvim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"lab5-sol.scm" 89L, 2632B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    ([38;5;130melse[m ([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)[35;109H12,40[9CTop[12;40H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    ([93melse[m ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[35;109H12,40[9CTop"lab5-sol.scm" 89L, 2632B[12;40H[?25h[?25l[11;5H[46m([12C)[m[35;110H1,18[11;18H[?25h[?25l    ([12C)[35;110H2,2[12;28H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[35;110H1,13[11;13H[?25h[?25l    [46m([12C)[m[35;113H8[11;18H[?25h[?25l    ([12C)[35;110H2,24[12;24H[?25h[?25l[12;14H[46m([20C)[m[35;112H35[12;35H[?25h[?25l[12;14H([20C)[35;112H56[12;56H[?25h[?25l    [46m([54C)[m[35;112H60[12;60H[?25h[?25l    ([54C)[35;113H3-64[12;64H[?25h[?25l[35;99H:[12;64H[35;1H[K[35;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[35;1H[K[35;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ clear
[?2004l[H[2J[3J[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ clearvim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [10Pclearvim lab5-sol.scm 
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"lab5-sol.scm" 89L, 2632B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mcond[m
    (([36mnull?[m ls) [31m0[m)
    ([38;5;130melse[m ([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)[35;109H12,63-64      Top[12;64H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mcond[m
    (([1m[96mnull?[m ls) [95m0[m)
    ([93melse[m ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[35;109H12,63-64      Top"lab5-sol.scm" 89L, 2632B[12;64H[?25h[?25l[11;5H[46m([12C)[m[35;110H1,18   [11;18H[?25h[?25l    ([12C)[35;113H6[11;16H[?25h[?25l[35;110H0,4 [10;4H[?25h[?25l[35;99H2[10;5H[93m[48;5;242mc[m[35;1H[1m-- VISUAL --[m[35;13H[K[35;99H2[10;5H[35;109H10,5[10CTop[10;5H[?25h[?25l[35;99H3[10;6H[93m[48;5;242mo[m[35;112H6[10;6H[?25h[?25l[35;99H4[10;7H[93m[48;5;242mn[m[35;112H7[10;7H[?25h[?25l[35;99H5[10;8H[93m[48;5;242md[m[35;112H8[10;8H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[35;99H2[11;14H[10;8H[48;5;242m 
    (([m[1m[96m[48;5;242mnull?[m[48;5;242m l[m[35;110H1,14[11;14H[?25h[?25ls[48;5;242ms[m[46m)[m[35;113H5[11;15H[?25h[?25l[1C[48;5;242m)[m[35;113H6[11;16H[?25h[?25l [48;5;242m [m[35;113H7[11;17H[?25h[?25l[1C[95m[48;5;242m0[m[46m)[m[35;113H8[11;18H[?25h[?25l[?25h[?25l[35;99H [12;14H[10;4H[93mcond[m[10;8H[K[11;1H    (([1m[96mnull?[m ls) [95m0[m)[12;14H[46m([20C)[m[35;1H[K[35;109H12,14[9CTop[12;14H[?25h[?25l([20C)[35;112H6 [12;6H[?25h[?25l[11;5H[46m([12C)[m[35;110H1,18[11;18H[?25h[?25l    ([12C)[35;110H2,13[12;13H[?25h[?25l[35;113H5[12;15H[?25h[?25l[35;112H39[12;39H[?25h[?25l[46m([20C)[m[35;113H7[12;37H[?25h[?25l[10;3H[46m([m[12;37H([20C)))[46m)[m[35;110H0,3 [10;3H[?25h[?25l[35;99H2[10;4H[48;5;242m([m[12;61H)[35;1H[1m-- VISUAL --[m[35;99H[K[35;99H2[10;4H[35;109H10,4[10CTop[10;4H[?25h[?25l[35;99H3[10;5H[93m[48;5;242mc[m[35;112H5[10;5H[?25h[?25l[35;99H4[10;6H[93m[48;5;242mo[m[35;112H6[10;6H[?25h[?25l[35;99H5[10;7H[93m[48;5;242mn[m[35;112H7[10;7H[?25h[?25l[35;99H6[10;8H[93m[48;5;242md[m[35;112H8[10;8H[?25h[?25l[?25h[?25l[?25h[?25l[35;99H2[11;11H[10;8H[48;5;242m 
    (([m[1m[96m[48;5;242mnull[m[1m[96m?[m [35;110H1,11[11;11H[?25h[?25l[1C[1m[96m[48;5;242m?[m [35;113H2[11;12H[?25h[?25l [48;5;242m [m[35;113H3[11;13H[?25h[?25ll[48;5;242ml[m[35;113H4[11;14H[?25h[?25ls[48;5;242ms[m[46m)[m[35;113H5[11;15H[?25h[?25l[1C[48;5;242m)[m[35;113H6[11;16H[?25h[?25l [48;5;242m [m[35;113H7[11;17H[?25h[?25l[1C[95m[48;5;242m0[m[46m)[m[35;113H8[11;18H[?25h[?25l[1C[48;5;242m)[m[35;113H9[11;19H[?25h[?25l[?25h[?25l[?25h[?25l[35;99H3[12;21H[11;19H[48;5;242m 
    ([m[93m[48;5;242melse[m[48;5;242m ([m[1m[96m[48;5;242m+[m[48;5;242m (sum-le[m[35;110H2,21[12;21H[?25h[?25ln[48;5;242mn[m[35;113H2[12;22H[?25h[?25lg[48;5;242mg[m[35;113H3[12;23H[?25h[?25lt[48;5;242mt[m[35;113H4[12;24H[?25h[?25lh[48;5;242mh[m[35;113H5[12;25H[?25h[?25ls[48;5;242ms[m[35;113H6[12;26H[?25h[?25l [48;5;242m [m[46m([6C)[m[35;113H7[12;27H[?25h[?25l[1C[48;5;242m([m[6C)[35;113H8[12;28H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mar[m [35;113H9[12;29H[?25h[?25l[1C[1m[96m[48;5;242ma[m[1m[96mr[m [35;112H30[12;30H[?25h[?25l[1C[1m[96m[48;5;242mr[m [35;113H1[12;31H[?25h[?25l [48;5;242m [m[35;113H2[12;32H[?25h[?25ll[48;5;242ml[m[35;113H3[12;33H[?25h[?25ls[48;5;242ms[m[46m)[m[35;113H4[12;34H[?25h[?25l[1C[48;5;242m)[m[46m)[m[35;113H5[12;35H[?25h[?25l[1C[48;5;242m)[m[35;113H6[12;36H[?25h[?25l [48;5;242m [m[46m([20C)[m[35;113H7[12;37H[?25h[?25l[1C[48;5;242m([m[20C)[35;113H8[12;38H[?25h[?25ls[48;5;242ms[m[35;113H9[12;39H[?25h[?25lu[48;5;242mu[m[35;112H40[12;40H[?25h[?25lm[48;5;242mm[m[35;113H1[12;41H[?25h[?25l-[48;5;242m-[m[35;113H2[12;42H[?25h[?25ll[48;5;242ml[m[35;113H3[12;43H[?25h[?25le[48;5;242me[m[35;113H4[12;44H[?25h[?25ln[48;5;242mn[m[35;113H5[12;45H[?25h[?25lg[48;5;242mg[m[35;113H6[12;46H[?25h[?25lt[48;5;242mt[m[35;113H7[12;47H[?25h[?25lh[48;5;242mh[m[35;113H8[12;48H[?25h[?25ls[48;5;242ms[m[35;113H9[12;49H[?25h[?25l [48;5;242m [m[46m([6C)[m[35;112H50[12;50H[?25h[?25l[1C[48;5;242m([m[6C)[35;113H1[12;51H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mdr[m [35;113H2[12;52H[?25h[?25l[1C[1m[96m[48;5;242md[m[1m[96mr[m [35;113H3[12;53H[?25h[?25l[1C[1m[96m[48;5;242mr[m [35;113H4[12;54H[?25h[?25l [48;5;242m [m[35;113H5[12;55H[?25h[?25ll[48;5;242ml[m[35;113H6[12;56H[?25h[?25ls[48;5;242ms[m[46m)[m[35;113H7[12;57H[?25h[?25l[1C[48;5;242m)[m[46m)[m[35;113H8[12;58H[?25h[?25l[1C[48;5;242m)[m[46m)[m[35;113H9[12;59H[?25h[?25l[1C[48;5;242m)[m[46m)[m[35;112H60[12;60H[?25h[?25l[1C[48;5;242m)[m[46m)[m[35;113H1[12;61H[?25h[?25l[1C[9;1H[46m([m[12;61H[48;5;242m)[m[46m)[m[35;113H2[12;62H[?25h[?25l[?25h[?25l[35;99Hc[12;62H[35;99H [10;3H[35;4H[1mINSERT [m[35;109H[K[35;109H10,3[10CTop[10;34r[10;1H[2M[1;35r[10;1H        [10;9H[K[33;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)[35;109H[K[35;109H10,3[10CTop[9;1H(
  [?25h[?25l[1;34r[1;1H[3M[1;35r[32;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)[35;109H[K[35;109H10,3[11C5%[7;3H[?25h[?25l[1;34r[1;1H[3M[1;35r[33;1H[96m;;Exercise 2[m[35;109H[K[35;109H12,3[10C11%[6;3H[?25h[?25l[1;34r[1;1H[12M[1;35r[23;1H[96m;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[29;9H[38;5;224m'()[m[30;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[31;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[34;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[35;109H[K[35;109H24,3[10C33%[6;3H[?25h[?25l[1;34r[1;1H[12M[1;35r[23;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[24;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  [38;5;224m'()[m)

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[35;109H[K[35;109H36,3[10C56%[6;3H[?25h[?25l[1;34r[1;1H[3M[1;35r[32;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[35;109H[K[35;109H39,3[10C62%[6;3H[?25h[?25l[1;34r[1;1H[3M[1;35r[32;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[35;109H[K[35;109H42,3[10C67%[6;3H[?25h[?25l[1;34r[1;1H[3M[1;35r[33;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[34;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[35;109H[K[35;109H45,3[10C73%[6;3H[46m([10;42H)[6;3H[?25h[?25l[1;34r[m[1;1H[3M[1;35r[32;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[33;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[35;109H[K[35;109H48,1[10C79%[3;3H([7;42H)[6;1H[?25h[?25l[1;34r[1;1H[6M[1;35r[30;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[35;109H[K[35;109H54,1[10C90%[6;1H[?25h[?25l[1;34r[1;1H[3M[1;35r[32;1H(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)[35;109H[K[35;109H57,3[10C96%[6;3H[?25h[?25l[1;34r[1;1H[3M[1;35r[32;1H(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)

[94m~                                                                                                                             [m[35;109H[K[35;109H60,1[10CBot[6;1H[?25h[?25l[1;34r[1;1H[9M[1;35r[26;1H[94m~                                                                                                                             [27;1H~                                                                                                                             [28;1H~                                                                                                                             [29;1H~                                                                                                                             [30;1H~                                                                                                                             [31;1H~                                                                                                                             [32;1H~                                                                                                                             [33;1H~                                                                                                                             [34;1H~                                                                                                                             [m[35;109H[K[35;109H69,3[10CBot[6;3H[?25h[?25l[1;34r[1;1H[3M[1;35r[32;1H[94m~                                                                                                                             [33;1H~                                                                                                                             [34;1H~                                                                                                                             [m[35;109H[K[35;109H72,3[10CBot[6;3H[?25h[?25l[1;34r[1;1H[15M[1;35r[20;1H[94m~                                                                                                                             [21;1H~                                                                                                                             [22;1H~                                                                                                                             [23;1H~                                                                                                                             [24;1H~                                                                                                                             [25;1H~                                                                                                                             [26;1H~                                                                                                                             [27;1H~                                                                                                                             [28;1H~                                                                                                                             [29;1H~                                                                                                                             [30;1H~                                                                                                                             [31;1H~                                                                                                                             [32;1H~                                                                                                                             [33;1H~                                                                                                                             [34;1H~                                                                                                                             [m[35;109H[K[35;109H87,1[10CBot[6;1H1[35;99H^[[6;1H[35;101H[[6;1H[35;102H<[6;1H[35;103H6[6;1H[35;104H5[6;1H[35;105H;[6;1H[35;106H4[6;1H[35;107H7[6;1H[35;108H;[6;1H[35;99H[[<65;47;1[6;1H[35;99H          [6;1H [1;34r[1;1H[3M[1;35r[32;1H[94m~                                                                                                                             [33;1H~                                                                                                                             [34;1H~                                                                                                                             [m[35;109H[K[35;109H87,1[10CBot[3;1H[?25h[?25l[1;34r[1;1H[2M[1;35r[33;1H[94m~                                                                                                                             [34;1H~                                                                                                                             [m[35;109H[K[35;109H87,1[10CBot[1;1H[?25h[?25l[35;109H[K[35;109H87,1[10CBot[1;1H<[35;99H^[[1;1H[35;101H[[1;1H[35;102H<[1;1H[35;99H    [1;1H [35;109H[K[35;109H87,1[10CBot[1;1H[?25h[?25l[35;109H[K[35;109H87,1[10CBot[1;1H[?25h[?25l[1;34r[1;1H[3L[1;35r[1;1H(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)[35;109H[K[35;109H87,1[10CBot[4;1H[?25h[?25l[1;34r[1;1H[3L[1;35r[2;1H(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)[35;109H[K[35;109H87,1[10CBot[7;1H[?25h[?25l[1;34r[1;1H[9L[1;35r[1;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[2;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[4;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)[35;109H[K[35;109H87,1[10CBot[16;1H[?25h[?25l[1;34r[1;1H[12L[1;35r[2;1H(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[35;109H[K[35;109H87,1[10CBot[28;1H[?25h[?25l[1;34r[1;1H[3L[1;35r[1;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  [38;5;224m'()[m)[35;109H[K[35;109H87,1[10CBot[31;1H[?25h[?25l[1;34r[1;1H[3L[1;35r[1;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[35;109H[K[35;109H87,1[10CBot[34;1H[?25h[?25l[1;34r[1;1H[6L[1;35r[1;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[2;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[5;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[35;109H[K[35;109H76,3[10C88%[29;3H[?25h[?25l[1;34r[1;1H[3L[1;35r[1;3H([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[3;9H[38;5;224m'()[m[35;109H[K[35;109H73,1[10C83%[29;1H[?25h[?25l[1;34r[1;1H[12L[1;35r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[35;109H[K[35;109H61,3[10C60%[29;3H[1;34r[1;1H[3L[1;35r[1;3H[95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[35;109H[K[35;109H58,3[10C54%[29;3H[?25h[?25l[1;34r[1;1H[15L[1;35r[1;1H(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)[35;109H[K[35;109H43,3[10C26%[29;3H4[35;99H^[[29;3H[35;101H[[29;3H[35;102H<[29;3H[35;103H6[29;3H[35;104H4[29;3H[35;105H;[29;3H[35;106H4[29;3H[35;99H        [29;3H[96mt[1;34r[m[1;1H[3L[1;35r[1;1H(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)[35;109H[K[35;109H40,1[10C20%[29;1H[?25h[?25l[1;34r[1;1H[11L[1;35r[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)[35;109H[K[35;109H29,3[10CTop[29;3H;[35;99H^[[29;3H[35;101H[[29;3H[35;102H<[29;3H[35;103H6[29;3H[35;104H4[29;3H[35;105H;[29;3H[35;99H       [29;3H[93me[m[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H4[35;99H[[29;3H[35;100H<[29;3H[35;101H6[29;3H[35;102H4[29;3H[35;103H;[29;3H[35;104H4[29;3H[35;105H7[29;3H[35;106H;[29;3H[35;107H1[29;3H[35;108H4[29;3H[35;99H          [29;3H[93me[m[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H[K[35;109H29,3[10CTop[29;3H[?25h[?25l[35;109H10[10;3H[?25h[?25l[35;112H2[10;2H[?25h[?25l[35;112H1[10;1H[?25h[?25l[9;34r[34;1H
[1;35r[9;1H([93mdefine[m (sum-lengths ls)[34;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)[35;109H[K[35;109H9,25[10CTop[9;9H[46m([14C)[?25h[?25l[10;34r[m[10;1H[L[1;35r[35;109H[K[35;109H10,3[10CTop[9;9H([14C)
  [?25h[?25l([35;112H4[10;4H[?25h[?25li[35;112H5[10;5H[?25h[?25l[93mif[m[35;112H6[10;6H[?25h[?25li[10;5H[K[35;112H5[10;5H[?25h[?25l[93mif[m[35;112H6[10;6H[?25h[?25l[35;112H7[10;7H[?25h[?25l([35;112H8[10;8H[?25h[?25ln[35;112H9[10;9H[?25h[?25lu[35;112H10[10;10H[?25h[?25ll[35;113H1[10;11H[?25h[?25ll[35;113H2[10;12H[?25h[?25l[1m[96mnull?[m[35;113H3[10;13H[?25h[?25l[35;113H4[10;14H[?25h[?25lls[35;113H6[10;16H[?25h[?25l)[10;7H[46m([8C)[m[35;113H7[10;17H[?25h[?25l[11;34r[11;1H[L[1;35r[35;109H[K[35;109H11,5[10CTop[10;7H([8C)
    [?25h[?25l[95m0[m[35;112H6[11;6H[?25h[?25l[12;34r[12;1H[L[1;35r[35;109H[K[35;109H12,5[10CTop[12;5H[?25h[?25l([35;112H6[12;6H[?25h[?25l[1m[96m+[m[35;112H7[12;7H[?25h[?25l[35;112H8[12;8H[?25h[?25l([35;112H9[12;9H[?25h[?25ls[35;112H10[12;10H[?25h[?25lu[35;113H1[12;11H[?25h[?25lm[35;113H2[12;12H[?25h[?25ls[35;113H3[12;13H[?25h[?25l-[35;113H4[12;14H[?25h[?25l[12;13H[K[35;113H3[12;13H[?25h[?25l[12;12H[K[35;113H2[12;12H[?25h[?25l-[35;113H3[12;13H[?25h[?25ll[35;113H4[12;14H[?25h[?25le[35;113H5[12;15H[?25h[?25ln[35;113H6[12;16H[?25h[?25lg[35;113H7[12;17H[?25h[?25lt[35;113H8[12;18H[?25h[?25lh[35;113H9[12;19H[?25h[?25ls[35;112H20[12;20H[?25h[?25l[35;113H1[12;21H[?25h[?25l([35;113H2[12;22H[?25h[?25lc[35;113H3[12;23H[?25h[?25la[35;113H4[12;24H[?25h[?25l[1m[96mcar[m[35;113H5[12;25H[?25h[?25l[35;113H6[12;26H[?25h[?25ll[35;113H7[12;27H[?25h[?25ls[35;113H8[12;28H[?25h[?25l([35;113H9[12;29H[?25h[?25l[12;28H[K[35;113H8[12;28H[?25h[?25l)[12;21H[46m([6C)[m[35;113H9[12;29H[?25h[?25l)[12;8H[46m([m[12C([6C)[46m)[m[35;112H30[12;30H[?25h[?25l[12;8H([20C)[35;113H1[12;31H[?25h[?25l([35;113H2[12;32H[?25h[?25ls[35;113H3[12;33H[?25h[?25lu[35;113H4[12;34H[?25h[?25lm[35;113H5[12;35H[?25h[?25l-[35;113H6[12;36H[?25h[?25ll[35;113H7[12;37H[?25h[?25le[35;113H8[12;38H[?25h[?25ln[35;113H9[12;39H[?25h[?25lg[35;112H40[12;40H[?25h[?25lt[35;113H1[12;41H[?25h[?25lh[35;113H2[12;42H[?25h[?25ls[35;113H3[12;43H[?25h[?25l[35;113H4[12;44H[?25h[?25l([35;113H5[12;45H[?25h[?25lc[35;113H6[12;46H[?25h[?25ld[35;113H7[12;47H[?25h[?25l[1m[96mcdr[m[35;113H8[12;48H[?25h[?25l[35;113H9[12;49H[?25h[?25ll[35;112H50[12;50H[?25h[?25ls[35;113H1[12;51H[?25h[?25l)[12;44H[46m([6C)[m[35;113H2[12;52H[?25h[?25l)[12;31H[46m([m[12C([6C)[46m)[m[35;113H3[12;53H[?25h[?25l)    [46m([m[25C([20C)[46m)[m[35;113H4[12;54H[?25h[?25l)[10;3H[46m([m[12;5H([47C)[46m)[m[35;113H5[12;55H[?25h[?25l)[9;1H[46m([m
  ([12;54H)[46m)[m[35;113H6[12;56H[?25h[35;1H[K[12;55H[?25l[35;99H^[[12;55H[35;99H  [12;56H[35;109H12,55[9CTop[12;55H[?25h[?25l[35;99H:[12;55H[35;99H[K[35;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2620B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"lab5-sol.scm" 89L, 2620B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[106m([m[38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls))))[106m)[m

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)[35;109H12,55[9CTop[12;55H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
[46m([m[93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls))))[46m)[m

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[35;109H12,55[9CTop"lab5-sol.scm" 89L, 2620B[12;55H[?25h[?25l[35;99H~@k[12;55H[35;99H   [13;1H[9;1H([12;55H)[35;110H3,0-1[13;1H[?25h[?25l[35;99H~@k[13;1H[35;99H   [12;1H[35;110H2,1  [12;1H[?25h[?25l[35;99H~@k[12;1H[35;99H   [12;2H[35;112H2[12;2H[?25h[?25l[35;99H~@k[12;2H[35;99H   [12;3H[35;112H3[12;3H[?25h[?25l[35;99H~@k[12;3H[35;99H   [12;4H[35;112H4[12;4H[?25h[?25l[35;99H~@k[12;4H[35;99H   [12;5H[46m([47C)[m[35;112H5[12;5H[?25h[?25l[35;99H~@k[12;5H[35;99H   [12;6H([47C)[35;112H6[12;6H[?25h[?25l[35;99H~@k[12;6H[35;99H   [12;7H[35;112H7[12;7H[?25h[?25l[35;99H~@k[12;7H[35;99H   [12;8H[46m([20C)[m[35;112H8[12;8H[?25h[?25l[35;99H~@k[12;8H[35;99H   [12;9H([20C)[35;112H9[12;9H[?25h[?25l[35;99H~@k[12;9H[35;99H   [12;10H[35;112H10[12;10H[?25h[?25l[35;99H~@k[12;10H[35;99H   [12;11H[35;113H1[12;11H[?25h[?25l[35;99H~@k[12;11H[35;99H   [12;12H[35;113H2[12;12H[?25h[?25l[35;99H~@k[12;12H[35;99H   [12;13H[35;113H3[12;13H[?25h[?25l[35;99H~@k[12;13H[35;99H   [12;14H[35;113H4[12;14H[?25h[?25l[35;99H~@k[12;14H[35;99H   [12;15H[35;113H5[12;15H[?25h[?25l[35;99H~@k[12;15H[35;99H   [12;16H[35;113H6[12;16H[?25h[?25l[35;99H~@k[12;16H[35;99H   [12;17H[35;113H7[12;17H[?25h[?25l[35;99H~@k[12;17H[35;99H   [12;18H[35;113H8[12;18H[?25h[?25l[35;99H~@k[12;18H[35;99H   [12;19H[35;113H9[12;19H[?25h[?25l[35;99H~@k[12;19H[35;99H   [12;20H[35;112H20[12;20H[?25h[?25l[35;99H~@k[12;20H[35;99H   [12;21H[46m([6C)[m[35;113H1[12;21H[?25h[?25l[35;99H~@k[12;21H[35;99H   [12;22H([6C)[35;113H2[12;22H[?25h[?25l[35;99H~@k[12;22H[35;99H   [12;23H[35;113H3[12;23H[?25h[?25l[35;99H~@k[12;23H[35;99H   [12;24H[35;113H4[12;24H[?25h[?25l[35;99H~@k[12;24H[35;99H   [12;25H[35;113H5[12;25H[?25h[?25l[35;99H~@k[12;25H[35;99H   [12;26H[35;113H6[12;26H[?25h[?25l[35;99H~@k[12;26H[35;99H   [12;27H[35;113H7[12;27H[?25h[?25l[35;99H~@k[12;27H[35;99H   [12;28H[12;21H[46m([6C)[m[35;113H8[12;28H[?25h[?25l[35;99H~@k[12;28H[35;99H   [12;27H([6C)[35;113H7[12;27H[?25h[?25l[35;99H~@k[12;27H[35;99H   [12;26H[35;113H6[12;26H[?25h[?25l[35;99H:[12;26H[35;1H[K[35;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[35;1H[K[35;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"lab5-sol.scm" 89L, 2620B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)[35;109H12,26[9CTop[12;26H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[35;109H12,26[9CTop"lab5-sol.scm" 89L, 2620B[12;26H[?25h[?25l[35;110H4,20[14;20H[?25h[?25l[35;110H0,15[10;15H[?25h[?25l[35;112H8 [10;8H[?25h[?25l[35;110H2,7[12;7H[?25h[?25l[35;99H<20>[12;7H[35;99H    [12;8H[46m([20C)[m[35;112H8[12;8H[?25h[?25l([20C)[35;112H7[12;7H[?25h[?25l[35;99Hi[12;7H[35;99H [12;7H[35;1H[1m-- INSERT --[m[35;13H[K[35;109H12,7[10CTop[12;7H[?25h[?25l  (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[35;112H8[12;8H[?25h[?25l[95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[35;112H9[12;9H[?25h[?25l[14C[46m([6C)[m[35;112H23[12;23H[?25h[?25l[12;10H[46m([m[12C([6C)[46m)[m[35;112H31[12;31H[?25h[?25l[12;10H([20C)[35;112H49[12;49H[?25h[?25l[35;112H20[12;20H[?25h[?25l[35;112H51[12;51H[?25h[35;1H[K[12;50H[?25l[35;99H^[[12;50H[35;99H  [12;51H[35;109H12,50[9CTop[12;50H[?25h[?25l[35;99H:[12;50H[35;99H[K[35;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2622B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git status
[?2004lOn branch lab5
Your branch is up to date with 'origin/lab5'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   lab5-sol.scm[m
	[31mmodified:   lab5.LOG[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git statusvim lab5-sol.scm 
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"lab5-sol.scm" 89L, 2622B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)[35;109H12,50[9CTop[12;50H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[35;109H12,50[9CTop"lab5-sol.scm" 89L, 2622B[12;50H[?25h[?25l[35;112H8 [12;8H[?25h[?25l[35;112H14[12;14H[?25h[?25l[35;112H3[12;34H[?25h[?25l[12;10H[46m([20C)[m[35;113H1[12;31H[?25h[?25l[12;10H([20C)[35;110H1,5 [11;5H[?25h[?25l[10;7H[46m([8C)[m[35;110H0,7[10;7H[?25h[?25l([8C)[35;112H4[10;4H[?25h[?25l[3C[46m([8C)[m[35;112H16[10;16H[?25h[?25l[10;7H([8C)[12;23H[46m([6C)[m[35;110H2,23[12;23H[?25h[?25l[35;99Hi[12;23H[35;99H [12;23H[35;1H[1m-- INSERT --[m[35;13H[K[35;109H12,23[9CTop[12;23H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;57H[K[12;22H[46m([m[1m[96mcar[m ls[46m)[m)[35;113H2[12;22H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;56H[K[12;21H[46m([m[1m[96mcar[m ls[46m)[m)[35;113H1[12;21H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;55H[K[12;20H[46m([m[1m[96mcar[m ls[46m)[m)[35;113H0[12;20H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;54H[K[12;19H[46m([m[1m[96mcar[m ls[46m)[m)[35;112H19[12;19H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;53H[K[12;18H[46m([m[1m[96mcar[m ls[46m)[m)[35;113H8[12;18H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;52H[K[12;17H[46m([m[1m[96mcar[m ls[46m)[m)[35;113H7[12;17H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;51H[K[12;16H[46m([m[1m[96mcar[m ls[46m)[m)[35;113H6[12;16H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;50H[K[12;15H[46m([m[1m[96mcar[m ls[46m)[m)[35;113H5[12;15H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;49H[K[12;14H[46m([m[1m[96mcar[m ls[46m)[m)[35;113H4[12;14H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;48H[K[12;13H[46m([m[1m[96mcar[m ls[46m)[m)[35;113H3[12;13H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;47H[K[12;12H[46m([m[1m[96mcar[m ls[46m)[m)[35;113H2[12;12H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;46H[K[12;11H[46m([m[1m[96mcar[m ls[46m)[m)[35;113H1[12;11H[?25h[?25l[1m[96m[46mc[m[1m[96mar[m ls)[1C (sum-lengths ([1m[96mcdr[m ls)[12;45H[K[12;10H[46m([m[1m[96mcar[m ls[46m)[m)[35;113H0[12;10H[?25h[?25l[35;113H1[12;11H[?25h[?25l([6C)[35;113H2[12;12H[?25h[?25l[35;113H3[12;13H[?25h[?25l[35;113H4[12;14H[?25h[?25l[35;113H5[12;15H[?25h[?25l[35;113H6[12;16H[?25h[?25l[46m([6C)[m[35;113H7[12;17H[?25h[?25l    [46m([m[4C([6C)[46m)[m[35;113H8[12;18H[?25h[?25l[35;113H9[12;19H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[12;44H[K[12;5H([4C[46m([6C)[m [35;113H8[12;18H[?25h[?25l[12;10H([6C)[35;112H29[12;29H[?25h[35;1H[K[12;28H[?25l[35;99H^[[12;28H[35;99H  [12;29H[35;109H12,28[9CTop[12;28H[?25h[?25l[35;99H:[12;28H[35;99H[K[35;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2608B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [7Pgit statusvim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l+: contract violation
  expected: number?
  given: '()
  argument position: 2nd
  other arguments...:
   1
   0
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"lab5-sol.scm" 89L, 2608B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m [31m1[m ([36mcar[m ls) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)[35;109H12,28[9CTop[12;28H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m [95m1[m ([1m[96mcar[m ls) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[35;109H12,28[9CTop"lab5-sol.scm" 89L, 2608B[12;28H[?25h[?25l[35;112H15[12;15H[?25h[?25l[46m([6C)[m[35;113H0[12;10H[?25h[?25l[35;99Hi[12;10H[35;99H [12;10H[35;1H[1m-- INSERT --[m[35;13H[K[35;109H12,10[9CTop[12;10H[?25h[?25l[1C([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;10H([46m([m[5Cs[46m)[m[35;113H1[12;11H[?25h[?25l[46ms[m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;11Hs[46m([m[5Cs[46m)[m[35;113H2[12;12H[?25h[?25l[46mu[m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;12Hu[46m([m[5Cs[46m)[m[35;113H3[12;13H[?25h[?25l[46mn[m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;13Hn[46m([m[5Cs[46m)[m[35;113H4[12;14H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[46m [m(sum-lengths ([1m[96mcdr[m ls)[12;47H[K[12;13H[46m([m[1m[96mcar[m ls[46m)[m [35;113H3[12;13H[?25h[?25l[46mm[m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;13Hm[46m([m[5Cs[46m)[m[35;113H4[12;14H[?25h[?25l[46m-[m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;14H-[46m([m[5Cs[46m)[m[35;113H5[12;15H[?25h[?25l[46ml[m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;15Hl[46m([m[5Cs[46m)[m[35;113H6[12;16H[?25h[?25l[46me[m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;16He[46m([m[5Cs[46m)[m[35;113H7[12;17H[?25h[?25l[46mn[m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;17Hn[46m([m[5Cs[46m)[m[35;113H8[12;18H[?25h[?25l[46mg[m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;18Hg[46m([m[5Cs[46m)[m[35;113H9[12;19H[?25h[?25l[46mt[m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;19Ht[46m([m[5Cs[46m)[m[35;112H20[12;20H[?25h[?25l[46mh[m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;20Hh[46m([m[5Cs[46m)[m[35;113H1[12;21H[?25h[?25l[46ms[m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;21Hs[46m([m[5Cs[46m)[m[35;113H2[12;22H[?25h[?25l[46m [m([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;22H [46m([m[5Cs[46m)[m[35;113H3[12;23H[?25h[?25l[1C([1m[96mcar[m l[46ms[m) (sum-lengths ([1m[96mcdr[m ls)))))[12;23H([46m([m[5Cs[46m)[m[35;113H4[12;24H[?25h[?25l[35;113H5[12;25H[?25h[?25l([6C)[35;113H6[12;26H[?25h[?25l[46m([6C)[m[35;113H5[12;25H[?25h[?25l[35;113H4[12;24H[?25h[?25l[1m[96m[46mc[m[1m[96mar[m ls)[46m [m(sum-lengths ([1m[96mcdr[m ls)[12;57H[K[12;23H[46m([m[1m[96mcar[m ls[46m)[m [35;113H3[12;23H[?25h[?25l[35;113H4[12;24H[?25h[?25l([6C)[35;113H5[12;25H[?25h[?25l[35;113H6[12;26H[?25h[?25l[35;113H7[12;27H[?25h[?25l[35;113H8[12;28H[?25h[?25l[35;113H9[12;29H[?25h[?25l[46m([6C)[m[35;112H30[12;30H[?25h[?25l[35;113H1[12;31H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls)))))[12;10H[46m([m[12C([6C)[46m)[m[35;113H2[12;32H[?25h[?25l[12;10H([20C) [46m([20C)[m[35;113H3[12;33H[?25h[?25l[35;113H4[12;34H[?25h[?25l([20C)[35;113H5[12;35H[?25h[?25l[35;113H6[12;36H[?25h[?25l[35;113H7[12;37H[?25h[?25l[35;113H8[12;38H[?25h[?25l[35;113H9[12;39H[?25h[?25l[35;112H40[12;40H[?25h[?25l[35;113H1[12;41H[?25h[?25l[35;113H2[12;42H[?25h[?25l[35;113H3[12;43H[?25h[?25l[35;113H4[12;44H[?25h[?25l[35;113H5[12;45H[?25h[?25l [46m([6C)[m[35;113H6[12;46H[?25h[?25l[35;113H7[12;47H[?25h[?25l([6C)[35;113H8[12;48H[?25h[?25l[35;113H9[12;49H[?25h[?25l[35;112H50[12;50H[?25h[?25l[35;113H1[12;51H[?25h[?25l[35;113H2[12;52H[?25h[?25l[46m([6C)[m[35;113H3[12;53H[?25h[?25l[12;33H[46m([m[12C([6C)[46m)[m[35;113H4[12;54H[?25h[?25l    [46m([m[27C([20C)[46m)[m[35;113H5[12;55H[?25h[?25l[10;3H[46m([m[12;5H([49C)[46m)[m[35;113H6[12;56H[?25h[?25l[9;1H[46m([m
  ([12;56H)[46m)[m[35;113H7[12;57H[?25h[35;1H[K[12;56H[?25l[35;99H^[[12;56H[35;99H  [12;57H[9;1H(
  [46m([12;56H)[m)[35;109H12,56[9CTop[12;56H[?25h[?25l[35;99H:[12;56H[35;99H[K[35;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2622B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:15:0
actual:     2
expected:   0
--------------------
car: contract violation
  expected: pair?
  given: 1
  context...:
   /home/dwalcot1/i471a/submit/lab5/lab5-sol.scm:9:0: sum-lengths
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"lab5-sol.scm" 89L, 2622B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  [106m([m[38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m [31m1[m (sum-lengths ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))[106m)[m)

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)[35;109H12,56[9CTop[12;56H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  [46m([m[93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m [95m1[m (sum-lengths ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))[46m)[m)

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)[35;109H12,56[9CTop"lab5-sol.scm" 89L, 2622B[12;56H[?25h[?25l[10;3H([12;56H)[35;109H22,0-1[22;1H[?25h[?25l[35;109H12,21 [12;21H[?25h[?25l[12;10H[46m([20C)[m[35;112H10[12;10H[?25h[?25l([20C)[35;112H8 [12;8H[?25h[?25l[35;99H2[12;9H[95m[48;5;242m1[m[35;1H[1m-- VISUAL --[m[35;13H[K[35;99H2[12;9H[35;109H12,9[10CTop[12;9H[?25h[?25l[35;99H3[12;10H[48;5;242m [m[46m([20C)[m[35;112H10[12;10H[?25h[?25l[35;99H4[12;11H[48;5;242m([m[20C)[35;113H1[12;11H[?25h[?25l[35;99H5[12;12H[48;5;242ms[m[35;113H2[12;12H[?25h[?25l[35;99H6[12;13H[48;5;242mu[m[35;113H3[12;13H[?25h[?25l[35;99H8[12;15H[48;5;242mm-[m[35;113H5[12;15H[?25h[?25l[35;99H9[12;16H[48;5;242ml[m[35;113H6[12;16H[?25h[?25l[35;99H10[12;17H[48;5;242me[m[35;113H7[12;17H[?25h[?25l[35;100H1[12;18H[48;5;242mn[m[35;113H8[12;18H[?25h[?25l[35;100H2[12;19H[48;5;242mg[m[35;113H9[12;19H[?25h[?25l[35;100H3[12;20H[48;5;242mt[m[35;112H20[12;20H[?25h[?25l[35;100H4[12;21H[48;5;242mh[m[35;113H1[12;21H[?25h[?25l[?25h[?25l[35;99Hc [12;21H[35;99H [12;8H[35;4H[1mINSERT [m[35;109H[K[35;109H12,8[10CTop[12;8H ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[12;44H[K[12;8H[?25h[?25l [46m([6C)[m[35;112H9[12;9H[?25h[?25l([6C)[35;112H8[12;8H[?25h[?25ll ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[35;112H9[12;9H[?25h[?25le ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[35;112H10[12;10H[?25h[?25ln ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[35;113H1[12;11H[?25h[?25lg ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[35;113H2[12;12H[?25h[?25lt ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[35;113H3[12;13H[?25h[?25l[1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[35;113H4[12;14H[?25h[?25l [46m([6C)[m[35;113H5[12;15H[?25h[?25l[35;113H6[12;16H[?25h[?25l([6C)[35;113H7[12;17H[?25h[?25l[35;113H8[12;18H[?25h[?25l[35;113H9[12;19H[?25h[?25l[35;112H20[12;20H[?25h[?25l[35;113H1[12;21H[?25h[?25l[46m([6C)[m[35;113H2[12;22H[?25h[?25l    [46m([m[9C([6C)[46m)[m[35;113H3[12;23H[?25h[?25l[35;113H4[12;24H[?25h[?25l[46m [m(sum-lengths ([1m[96mcdr[m ls)[12;49H[K[12;5H([9C[46m([6C)[m [35;113H3[12;23H[?25h[?25l[35;113H2[12;22H[?25h[?25l[12;15H([6C)[35;113H1[12;21H[?25h[?25l[35;113H0[12;20H[?25h[?25l[35;112H19[12;19H[?25h[?25l[35;113H8[12;18H[?25h[?25l[35;113H7[12;17H[?25h[?25l[46m([6C)[m[35;113H6[12;16H[?25h[?25l[35;113H5[12;15H[?25h[?25l([6C)[35;113H4[12;14H[?25h[?25l[35;113H3[12;13H[?25h[?25l[35;113H2[12;12H[?25h[?25l[35;113H1[12;11H[?25h[?25l[35;113H0[12;10H[?25h[?25l[35;112H9 [12;9H[?25h[?25l[35;112H8[12;8H[?25h[?25l[35;112H7[12;7H[?25h[?25l[35;112H8[12;8H[?25h[?25l([1m[96mlength[m ([1m[96mcar[m ls) (sum-lengths ([1m[96mcdr[m ls)))))[12;8H[46m([38C)[m[35;112H9[12;9H[?25h[?25l([38C)[35;112H10[12;10H[?25h[?25l[35;113H1[12;11H[?25h[?25l[35;113H2[12;12H[?25h[?25l[35;113H3[12;13H[?25h[?25l[35;113H4[12;14H[?25h[?25l[35;113H5[12;15H[?25h[?25l [46m([6C)[m[35;113H6[12;16H[?25h[?25l[35;113H7[12;17H[?25h[?25l([6C)[35;113H8[12;18H[?25h[?25l[35;113H9[12;19H[?25h[?25l[35;112H20[12;20H[?25h[?25l[35;113H1[12;21H[?25h[?25l[35;113H2[12;22H[?25h[?25l[46m([6C)[m[35;113H3[12;23H[?25h[?25l[35;113H4[12;24H[?25h[?25l) (sum-lengths ([1m[96mcdr[m ls)))))[12;8H[46m([m[7C([6C)[46m)[m[35;113H5[12;25H[?25h[35;1H[K[12;24H[?25l[35;99H^[[12;24H[35;99H  [12;25H[35;109H12,24[9CTop[12;24H[?25h[?25l[35;99H:[12;24H[35;99H[K[35;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 89L, 2615B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:25:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:26:0
actual:     0
expected:   4
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:35:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:36:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:37:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:38:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:39:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:64:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:65:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:66:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:67:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:74:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:85:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:86:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:87:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ [Kdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;47r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[47;1H"lab5-sol.scm" 89L, 2615B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m [106m([m[36mlength[m ([36mcar[m ls)[106m)[m (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[47;126H12,24[9CTop[12;24H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m [46m([m[1m[96mlength[m ([1m[96mcar[m ls)[46m)[m (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[47;126H12,24[9CTop"lab5-sol.scm" 89L, 2615B[12;24H[?25h[?25l[12;8H([15C)[47;127H1,5 [11;5H[?25h[?25l[10;3H[46m([12;49H)[m[47;127H2,49[12;49H[?25h[?25l[10;3H([12;49H)[47;127H0,10[10;10H[?25h[?25l[47;127H1,5 [11;5H[?25h[?25l[47;116H:[11;5H[47;1H[K[47;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[47;1H[K[47;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;47r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[47;1H"lab5-sol.scm" 89L, 2615B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[47;126H11,5[10CTop[11;5H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[47;126H11,5[10CTop"lab5-sol.scm" 89L, 2615B[11;5H[?25h[?25l[47;127H0,9[10;9H[?25h[?25l[47;116H2[9;9H[46m([m[48;5;242msum-lengths ls) 
  ([m[93m[48;5;242mif[m[48;5;242m ([m[1m[96m[48;5;242mnu[m[1m[96mll?[m [47;1H[1m-- VISUAL --[m[47;13H[K[47;116H2[9;9H[47;126H9,9[11CTop[9;9H[?25h[?25l[?25h[?25l[47;116H [11;5H[9;9H(sum-lengths ls)[9;25H[K[10;1H  ([93mif[m ([1m[96mnull?[m [47;1H[K[47;126H11,5[10CTop[11;5H[?25h[?25l[12;16H[46m([6C)[m[47;127H2,16[12;16H[?25h[?25l([6C)[47;129H32[12;32H[?25h[?25l[9;1H[46m([12;50H)[m[47;129H50[12;50H[?25h[?25l[9;1H([12;50H)[47;127H6,29[16;29H[?25h[?25l[1;46r[1;1H[3M[1;47r[44;3H([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[46;9H[38;5;224m'()[m[47;126H[K[47;126H16,29[10C6%[13;29H[?25h[?25l[1;46r[1;1H[3M[1;47r[44;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[45;15H(greater-than ([1m[96mcdr[m ls) v)))))[47;126H[K[47;126H16,29[9C13%[10;29H[?25h[?25l[1;46r[1;1H[3M[1;47r[44;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[45;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[47;126H[K[47;126H16,29[9C20%[7;29H[?25h[?25l[1;46r[1;1H[3L[1;47r[1;1H[96m;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)[47;126H[K[47;126H16,29[9C13%[10;29H[?25h[?25l[47;126H22,0-1[16;1H[?25h[?25l[14;1H[46m([15;4H)[m[47;127H1,4  [15;4H[?25h[?25l[47;116Hi[15;4H[47;116H [15;4H[47;1H[1m-- INSERT --[m[47;126H[K[47;126H21,4[10C13%[15;4H[?25h[47;1H[K[15;3H[?25l[47;116H^[[15;3H[47;116H  [15;4H[14;1H([15;4H)[47;126H21,3[10C13%[15;3H[?25h[?25l[47;116H:[15;3H[47;116H[K[47;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[47;1H[K[47;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;47r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[47;1H"lab5-sol.scm" 89L, 2615B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[47;126H21,3[10CTop[21;3H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[47;126H21,3[10CTop"lab5-sol.scm" 89L, 2615B[21;3H[?25h[?25l[20;1H[46m([21;4H)[m[47;129H4[21;4H[?25h[?25l[20;1H([21;4H)[31;9H[46m([18C)[m[47;126H31,28[31;28H[?25h[?25l[47;116H:[31;28H[47;1H[K[47;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[47;1H[K[47;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm 
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;47r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[47;1H"lab5-sol.scm" 89L, 2615B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [31m0[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m [106m([mpoly-eval x coeffs[106m)[m
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[47;126H31,28[9CTop[31;28H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [95m0[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m [46m([mpoly-eval x coeffs[46m)[m
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[47;126H31,28[9CTop"lab5-sol.scm" 89L, 2615B[31;28H[?25h[?25l[31;9H([18C)[47;126H23,22[23;22H[?25h[?25l[47;127H5,20[25;20H[?25h[?25l[1;46r[1;1H[3M[1;47r[44;3H([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[46;9H[38;5;224m'()[m[47;1H[K[47;126H25,20[10C6%[22;20H[?25h[?25l[1;46r[1;1H[3M[1;47r[44;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[45;15H(greater-than ([1m[96mcdr[m ls) v)))))[47;126H[K[47;126H25,20[9C13%[19;20H[?25h[?25l[1;46r[1;1H[3M[1;47r[44;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[45;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[47;126H[K[47;126H25,20[9C20%[16;20H[?25h[?25l[22;1H[46m([23;4H)[m[47;126H32,4 [23;4H[?25h[?25l[47;116Hi[23;4H[47;116H [23;4H[47;1H[1m-- INSERT --[m[47;126H[K[47;126H32,4[10C20%[23;4H[?25h[?25l)[23;4H[K[23;3H[46m)[m[47;129H3[23;3H[?25h[?25l[46mi[m)i[46m)[m[47;129H4[23;4H[?25h[?25l)[23;4H[K[23;3H[46m)[m[47;129H3[23;3H[?25h[?25l[46m([m)[22;1H([23;4H[46m)[m[47;129H4[23;4H[?25h[?25l[1C)[22;1H[46m([m
  ()[46m)[m[47;129H5[23;5H[?25h[?25l[22;1H(
  [46m()[m)[47;129H4[23;4H[?25h[?25l[46ml[m))l[46m)[m[47;129H5[23;5H[?25h[?25l[46ma[m))a[46m)[m[47;129H6[23;6H[?25h[?25l[46mm[m))m[46m)[m[47;129H7[23;7H[?25h[?25l[46mb[m))b[46m)[m[47;129H8[23;8H[?25h[?25l)[23;9H[K[23;7H[46m)[m)[47;129H7[23;7H[?25h[?25l[46mn[m))n[46m)[m[47;129H8[23;8H[?25h[?25l[46md[m))d[46m)[m[47;129H9[23;9H[?25h[?25l[46ma[m))a[46m)[m[47;129H10[23;10H[?25h[?25l)[23;11H[K[23;9H[46m)[m)[47;129H9 [23;9H[?25h[?25l)[23;10H[K[23;8H[46m)[m)[47;129H8[23;8H[?25h[?25l)[23;9H[K[23;7H[46m)[m)[47;129H7[23;7H[?25h[?25l[46md[m))d[46m)[m[47;129H8[23;8H[?25h[?25l[46ma[m))a[46m)[m[47;129H9[23;9H[?25h[?25l)[23;10H[K[23;8H[46m)[m)[47;129H8[23;8H[?25h[?25l)[23;9H[K[23;7H[46m)[m)[47;129H7[23;7H[?25h[?25l[46mb[m))b[46m)[m[47;129H8[23;8H[?25h[?25l[46md[m))d[46m)[m[47;129H9[23;9H[?25h[?25l[23;4H[93mlambd[m[93m[46ma[m))[93ma[m[46m)[m[47;129H10[23;10H[?25h[?25l[22;1H[46m([m
  ([6C)[46m)[m[47;130H1[23;11H[?25h[?25l[46mi[m)i[46m)[m[47;130H2[23;12H[?25h[?25l)[23;12H[K[23;11H[46m)[m[47;130H1[23;11H[?25h[?25l[23;11H[K[22;1H(
  [46m([6C)[m[47;130H0[23;10H[?25h[?25l[23;4Hlambd)[23;10H[K[23;9H[46m)[m[47;129H9 [23;9H[?25h[?25l)[23;9H[K[23;8H[46m)[m[47;129H8[23;8H[?25h[?25l)[23;8H[K[23;7H[46m)[m[47;129H7[23;7H[?25h[?25l)[23;7H[K[23;6H[46m)[m[47;129H6[23;6H[?25h[?25l)[23;6H[K[23;5H[46m)[m[47;129H5[23;5H[?25h[?25l)[23;5H[K[23;4H[46m)[m[47;129H4[23;4H[?25h[?25l[46m)[m[23;4H[K[22;1H[46m([m[47;129H3[23;3H[?25h[?25l[95m[46m0[m)[95m0[m[46m)[m[47;129H4[23;4H[?25h[?25l[22;1H([23;4H)[47;127H0,19[21;19H[?25h[?25l[11;1H[46m([12;4H)[m[47;126H21,4 [12;4H[?25h[?25l)[12;4H[K[12;3H[46m)[m[47;129H3[12;3H[?25h[?25l[46ml[m)l[46m)[m[47;129H4[12;4H[?25h[?25l[46me[m)e[46m)[m[47;129H5[12;5H[?25h[?25l[93mle[m[93m[46mt[m)[93mt[m[46m)[m[47;129H6[12;6H[?25h[?25llet[46mr[m)r[46m)[m[47;129H7[12;7H[?25h[?25l[46me[m)e[46m)[m[47;129H8[12;8H[?25h[?25l  [93mletre[m[93m[46mc[m)[93mc[m[46m)[m[47;129H9[12;9H[?25h[?25l[46m([m)[11;1H([12;10H[46m)[m[47;129H10[12;10H[?25h[?25l[1C)[11;1H[46m([m[12;9H()[46m)[m[47;130H1[12;11H[?25h[?25l[11;1H([12;9H[46m()[m)[47;130H0[12;10H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [93mletrec[m[46m()[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[41;9H[38;5;224m'()[m[42;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[43;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[46;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)
[1m-- INSERT --[m[113C21,10[9C20%[13;10H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [93mletrec[m[46m()[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[41;9H[38;5;224m'()[m[42;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[43;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[46;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)
[1m-- INSERT --[m[146C21,9[10C20%[13;9H[?25h[?25l[46m ([m)) [1C[46m)[m[50;162H10[13;10H[?25h[?25l[50;163H1[13;11H[?25h[?25l[46m{[m)){[46m)[m[50;163H2[13;12H[?25h[?25l)[13;13H[K[13;11H[46m)[m)[50;163H1[13;11H[?25h[?25l[46m[[m))[[46m)[m[50;163H2[13;12H[?25h[?25l[46m][m))][46m)[m[50;163H3[13;13H[?25h[?25l([])[50;160H2,1 [14;1H[?25h[?25l[13;10H[46m([m[][46m)[m[50;160H1,13[13;13H[?25h[?25l([46m[][m)[50;163H2[13;12H[?25h[?25l[46ma[m]))a[46m][m[50;163H3[13;13H[?25h[?25l[46mx[m]))x[46m][m[50;163H4[13;14H[?25h[?25l][46m)[m[13;16H[K[13;13H[46m][m)[50;163H3[13;13H[?25h[?25l[46mu[m]))u[46m][m[50;163H4[13;14H[?25h[?25l[46my[m]))y[46m][m[50;163H5[13;15H[?25h[?25l[46mx[m]))x[46m][m[50;163H6[13;16H[?25h[?25l][46m)[m[13;18H[K[13;15H[46m][m)[50;163H5[13;15H[?25h[?25l][46m)[m[13;17H[K[13;14H[46m][m)[50;163H4[13;14H[?25h[?25l[46mx[m]))x[46m][m[50;163H5[13;15H[?25h[?25l[46m-[m]))-[46m][m[50;163H6[13;16H[?25h[?25l[46ms[m]))s[46m][m[50;163H7[13;17H[?25h[?25l[46mu[m]))u[46m][m[50;163H8[13;18H[?25h[?25l[46mm[m]))m[46m][m[50;163H9[13;19H[?25h[?25l[14;49r[14;1H[L[1;50r[13;19H[K[14;13H]))[50;159H[K[50;159H22,6-13[7C19%[14;13H[46m][?25h[?25l([m]))([46m][m[50;162H7-14[14;14H[?25h[?25l[46ml[m]))l[46m][m[50;162H8-15[14;15H[?25h[?25l[46ma[m]))a[46m][m[50;162H9-16[14;16H[?25h[?25l[46mm[m]))m[46m][m[50;162H10-17[14;17H[?25h[?25l[46mb[m]))b[46m][m[50;163H1-18[14;18H[?25h[?25l[46md[m]))d[46m][m[50;163H2-19[14;19H[?25h[?25l[93mlambd[m[93m[46ma[m]))[93ma[m[46m][m[50;163H3-20[14;20H[?25h[?25l[46m [m])) [46m][m[50;163H4-21[14;21H[?25h[?25l[46m([m]))([46m][m[50;163H5-22[14;22H[?25h[?25l[46ms[m]))s[46m][m[50;163H6-23[14;23H[?25h[?25l[46mu[m]))u[46m][m[50;163H7-24[14;24H[?25h[?25l[46mm[m]))m[46m][m[50;163H8-25[14;25H[?25h[?25l[46m [m])) [46m][m[50;163H9-26[14;26H[?25h[?25l[95m[46m0[m]))[95m0[m[46m][m[50;162H20-27[14;27H[?25h[?25l[46m)[m])))[46m][m[50;163H1-28[14;28H[?25h[?25l[15;49r[15;1H[L[1;50r[14;28H[K[15;15H]))[50;159H[K[50;159H23,8-15[7C19%[15;15H[46m][?25h[?25l[1;49r[m[1;1H[3L[1;50r[1;1H[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m[50;159H[K[50;159H23,8-15[7C11%[18;15H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H#lang racket
(require rackunit)[50;159H[K[50;159H23,8-15[8C4%[21;15H[?25h[?25l[1;49r[1;1H[2L[1;50r[1;1H#!/usr/bin/env racket[50;159H[K[50;159H23,8-15[7CTop[23;15H[?25h[?25l[50;159H[K[50;159H23,8-15[7CTop[23;15H[?25h[?25l[50;159H[K[50;159H23,8-15[7CTop[23;15H[?25h[?25l[50;159H[K[50;159H23,8-15[7CTop[23;15H[?25h[?25l[50;159H[K[50;159H23,8-15[7CTop[23;15H[?25h[?25l[50;159H[K[50;159H23,8-15[7CTop[23;15H[?25h[?25l[50;159H[K[50;159H23,8-15[7CTop[23;15H[?25h[?25l[50;159H[K[50;159H23,8-15[7CTop[23;15H[?25h[?25l[50;159H[K[50;159H23,8-15[7CTop[23;15H[?25h[?25l[50;159H[K[50;159H23,8-15[7CTop[23;15H[?25h[?25l[46mi[m]))i[46m][m[50;162H9-16[23;16H[?25h[?25l[93mi[m[93m[46mf[m]))[93mf[m[46m][m[50;162H10-17[23;17H[?25h[?25l[46m [m])) [46m][m[50;163H1-18[23;18H[?25h[?25l[46m([m]))([46m][m[50;163H2-19[23;19H[?25h[?25l][46m)[m[23;21H[K[23;18H[46m][m)[50;163H1-18[23;18H[?25h[?25l][46m)[m[23;20H[K[23;17H[46m][m)[50;163H0-17[23;17H[?25h[?25li][46m)[m[23;19H[K[23;16H[46m][m)[50;162H9-16 [23;16H[?25h[?25l][46m)[m[23;18H[K[23;15H[46m][m)[50;162H8-15[23;15H[?25h[?25l[46m([m]))([46m][m[50;162H9-16[23;16H[?25h[?25l[46mi[m]))i[46m][m[50;162H10-17[23;17H[?25h[?25l[93mi[m[93m[46mf[m]))[93mf[m[46m][m[50;163H1-18[23;18H[?25h[?25l[46m [m])) [46m][m[50;163H2-19[23;19H[?25h[?25l[46m([m]))([46m][m[50;163H3-20[23;20H[?25h[?25l[46mn[m]))n[46m][m[50;163H4-21[23;21H[?25h[?25l[46mi[m]))i[46m][m[50;163H5-22[23;22H[?25h[?25l][46m)[m[23;24H[K[23;21H[46m][m)[50;163H4-21[23;21H[?25h[?25l[46mu[m]))u[46m][m[50;163H5-22[23;22H[?25h[?25l[46ml[m]))l[46m][m[50;163H6-23[23;23H[?25h[?25l[46ml[m]))l[46m][m[50;163H7-24[23;24H[?25h[?25l[1m[96mnull[m[1m[96m[46m?[m]))[1m[96m?[m[46m][m[50;163H8-25[23;25H[?25h[?25l[46m [m])) [46m][m[50;163H9-26[23;26H[?25h[?25l[46ml[m]))l[46m][m[50;162H20-27[23;27H[?25h[?25l[46ms[m]))s[46m][m[50;163H1-28[23;28H[?25h[?25l[46m)[m])))[46m][m[50;163H2-29[23;29H[?25h[?25l[24;49r[24;1H[L[1;50r[23;29H[K[24;17H]))[50;159H[K[50;159H24,3-17[7CTop[24;17H[46m][?25h[?25l[m[21;11H[[24;17H][50;160H3,10-17[23;17H[?25h[?25l[50;163H1-18[23;18H[?25h[?25l [46m([8C)[m[50;163H2-19[23;19H[?25h[?25l[50;163H3-20[23;20H[?25h[?25l([8C)[50;163H4-21[23;21H[?25h[?25l[50;163H5-22[23;22H[?25h[?25l[50;163H6-23[23;23H[?25h[?25l[50;160H2[22;23H[?25h[?25l[50;163H7-24[22;24H[?25h[?25l[50;163H8-25[22;25H[?25h[?25l[50;163H9-26[22;26H[?25h[?25l[46m([5C)[m[50;162H20-27[22;27H[?25h[?25l[50;163H1-28[22;28H[?25h[?25l[50;163H0-27[22;27H[?25h[?25l)[22;27H[K[22;26H[46m)[m[50;162H19-26[22;26H[?25h[?25l[46ml[m)l[46m)[m[50;162H20-27[22;27H[?25h[?25l[46ms[m)s[46m)[m[50;163H1-28[22;28H[?25h[?25l[22;21H(sum ls)[23;19H[46m([8C)[m[50;160H3[23;28H[?25h[?25l[23;19H([8C)[50;163H0-27[23;27H[?25h[?25l[50;162H19-26[23;26H[?25h[?25l[50;163H8-25[23;25H[?25h[?25l[50;163H7-24[23;24H[?25h[?25l[22;13H[46m([24;19H)[m[50;160H4,6-20 [24;20H[?25h[?25l[50;162H5-19[24;19H[?25h[?25l[22;13H([23;15H[46m([24;18H)[m)[50;162H4-18[24;18H[?25h[?25l[21;11H[46m[[m[23;15H([24;17H[46m][m)[50;162H3-17[24;17H[?25h[?25l[95m[46m0[m]))[95m0[m[46m][m[50;162H4-18[24;18H[?25h[?25l[25;49r[25;1H[L[1;50r[24;18H[K[25;17H]))[50;159H[K[50;159H25,3-17[7CTop[25;17H[46m][?25h[?25l([m]))([46m][m[50;162H4-18[25;18H[?25h[?25l[1m[96m[46m+[m]))[1m[96m+[m[46m][m[50;162H5-19[25;19H[?25h[?25l[46m [m])) [46m][m[50;162H6-20[25;20H[?25h[?25l[46ml[m]))l[46m][m[50;162H7-21[25;21H[?25h[?25l[46me[m]))e[46m][m[50;162H8-22[25;22H[?25h[?25l[46mn[m]))n[46m][m[50;162H9-23[25;23H[?25h[?25l[46mg[m]))g[46m][m[50;162H10-24[25;24H[?25h[?25l[46mt[m]))t[46m][m[50;163H1-25[25;25H[?25h[?25l[1m[96mlengt[m[1m[96m[46mh[m]))[1m[96mh[m[46m][m[50;163H2-26[25;26H[?25h[?25llengt][46m)[m[25;28H[K[25;25H[46m][m)[50;163H1-25[25;25H[?25h[?25l][46m)[m[25;27H[K[25;24H[46m][m)[50;163H0-24[25;24H[?25h[?25l][46m)[m[25;26H[K[25;23H[46m][m)[50;162H9-23 [25;23H[?25h[?25l][46m)[m[25;25H[K[25;22H[46m][m)[50;162H8-22[25;22H[?25h[?25l][46m)[m[25;24H[K[25;21H[46m][m)[50;162H7-21[25;21H[?25h[?25l][46m)[m[25;23H[K[25;20H[46m][m)[50;162H6-20[25;20H[?25h[?25l[46m([m]))([46m][m[50;162H7-21[25;21H[?25h[?25l[46ml[m]))l[46m][m[50;162H8-22[25;22H[?25h[?25l[46me[m]))e[46m][m[50;162H9-23[25;23H[?25h[?25l[46mn[m]))n[46m][m[50;162H10-24[25;24H[?25h[?25l[46mg[m]))g[46m][m[50;163H1-25[25;25H[?25h[?25l[46mt[m]))t[46m][m[50;163H2-26[25;26H[?25h[?25l[1m[96mlengt[m[1m[96m[46mh[m]))[1m[96mh[m[46m][m[50;163H3-27[25;27H[?25h[?25l[46m [m])) [46m][m[50;163H4-28[25;28H[?25h[?25l[46m([m]))([46m][m[50;163H5-29[25;29H[?25h[?25l[46mc[m]))c[46m][m[50;163H6-30[25;30H[?25h[?25l[46ma[m]))a[46m][m[50;163H7-31[25;31H[?25h[?25l][46m)[m[25;33H[K[25;30H[46m][m)[50;163H6-30[25;30H[?25h[?25l[46ma[m]))a[46m][m[50;163H7-31[25;31H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m]))[1m[96mr[m[46m][m[50;163H8-32[25;32H[?25h[?25l[46m [m])) [46m][m[50;163H9-33[25;33H[?25h[?25l[46ml[m]))l[46m][m[50;162H20-34[25;34H[?25h[?25l[46ms[m]))s[46m][m[50;163H1-35[25;35H[?25h[?25l[46m)[m])))[46m][m[50;163H2-36[25;36H[?25h[?25l[46m [m])) [46m][m[50;163H3-37[25;37H[?25h[?25l][46m)[m[25;39H[K[25;36H[46m][m)[50;163H2-36[25;36H[?25h[?25l[46m)[m])))[46m][m[50;163H3-37[25;37H[?25h[?25l[46m [m])) [46m][m[50;163H4-38[25;38H[?25h[?25l[46ms[m]))s[46m][m[50;163H5-39[25;39H[?25h[?25l[46mu[m]))u[46m][m[50;163H6-40[25;40H[?25h[?25l[46mm[m]))m[46m][m[50;163H7-41[25;41H[?25h[?25l[21;11H[[23;15H[46m([m[25;41H])[46m)[m[50;162H30-44[25;44H[?25h[?25l[23;15H([25;17H[46m([24C)[m)[50;162H28-42[25;42H[?25h[?25l[21;11H[46m[[m[25;17H([23C[46m][m)[50;163H7-41[25;41H[?25h[?25l][46m)[m[25;43H[K[25;40H[46m][m)[50;163H6-40[25;40H[?25h[?25l][46m)[m[25;42H[K[25;39H[46m][m)[50;163H5-39[25;39H[?25h[?25l][46m)[m[25;41H[K[25;38H[46m][m)[50;163H4-38[25;38H[?25h[?25l[21;11H[[25;38H][50;160H4,4-18 [24;18H[?25h[?25l[24;17H[K[50;162H3-17[24;17H[?25h[?25ls[50;162H4-18[24;18H[?25h[?25lu[50;162H5-19[24;19H[?25h[?25lm[50;162H6-20[24;20H[?25h[?25lm[50;162H7-21[24;21H[?25h[?25l[24;20H[K[50;162H6-20[24;20H[?25h[?25l[25;20H[46m([15C)[m[50;160H5[25;20H[?25h[?25l[50;162H7-21[25;21H[?25h[?25l([15C)[50;162H8-22[25;22H[?25h[?25l[50;162H9-23[25;23H[?25h[?25l[50;162H10-24[25;24H[?25h[?25l[50;163H1-25[25;25H[?25h[?25l[50;163H2-26[25;26H[?25h[?25l[50;163H3-27[25;27H[?25h[?25l [46m([6C)[m[50;163H4-28[25;28H[?25h[?25l[50;163H5-29[25;29H[?25h[?25l([6C)[50;163H6-30[25;30H[?25h[?25l[50;163H7-31[25;31H[?25h[?25l[50;163H8-32[25;32H[?25h[?25l[50;163H9-33[25;33H[?25h[?25l[50;162H20-34[25;34H[?25h[?25l[46m([6C)[m[50;163H1-35[25;35H[?25h[?25l[25;20H[46m([m[7C([6C)[46m)[m[50;163H2-36[25;36H[?25h[?25l[50;163H3-37[25;37H[?25h[?25l[21;11H[46m[[m[25;20H([15C) [46m][m[50;163H4-38[25;38H[?25h[?25l[46ma[m]))a[46m][m[50;163H5-39[25;39H[?25h[?25l[46mu[m]))u[46m][m[50;163H6-40[25;40H[?25h[?25l[46mx[m]))x[46m][m[50;163H7-41[25;41H[?25h[?25l[46m-[m]))-[46m][m[50;163H8-42[25;42H[?25h[?25l[46ms[m]))s[46m][m[50;163H9-43[25;43H[?25h[?25l[46mu[m]))u[46m][m[50;162H30-44[25;44H[?25h[?25l[46mm[m]))m[46m][m[50;163H1-45[25;45H[?25h[?25l[21;11H[[25;45H][50;163H0-44[25;44H[?25h[?25l[50;162H29-43[25;43H[?25h[?25l[50;163H8-42[25;42H[?25h[?25l[50;163H7-41[25;41H[?25h[?25l[50;163H6-40[25;40H[?25h[?25l[50;163H5-39[25;39H[?25h[?25l[50;163H4-38[25;38H[?25h[?25l(aux-sum]))[25;38H[46m([8C)[m[50;163H5-39[25;39H[?25h[?25l([8C)[50;163H6-40[25;40H[?25h[?25l[50;163H7-41[25;41H[?25h[?25l[50;163H8-42[25;42H[?25h[?25l[50;163H9-43[25;43H[?25h[?25l[50;162H30-44[25;44H[?25h[?25l[50;163H1-45[25;45H[?25h[?25l[21;11H[46m[[25;46H][m[50;163H2-46[25;46H[?25h[?25l[46m [m])) [46m][m[50;163H3-47[25;47H[?25h[?25l[46m([m]))([46m][m[50;163H4-48[25;48H[?25h[?25l[46mc[m]))c[46m][m[50;163H5-49[25;49H[?25h[?25l[46md[m]))d[46m][m[50;163H6-50[25;50H[?25h[?25l[1m[96mcd[m[1m[96m[46mr[m]))[1m[96mr[m[46m][m[50;163H7-51[25;51H[?25h[?25l[46m [m])) [46m][m[50;163H8-52[25;52H[?25h[?25l[46ml[m]))l[46m][m[50;163H9-53[25;53H[?25h[?25l[46ms[m]))s[46m][m[50;162H40-54[25;54H[?25h[?25l[46m)[m])))[46m][m[50;163H1-55[25;55H[?25h[?25l[21;11H[[25;38H[46m([m[16C][46m)[m[50;163H2-56[25;56H[?25h[?25l[21;11H[46m[[m[25;38H([16C[46m][m)[50;163H1-55[25;55H[?25h[?25l[21;11H[[25;38H[46m([m[16C][46m)[m[50;163H2-56[25;56H[?25h[?25l[25;17H[46m([m[20C([17C)[46m)[m[50;163H3-57[25;57H[?25h[?25l[50;163H4-58[25;58H[?25h[?25l)[23;15H[46m([m[25;17H([39C)[46m)[m[50;163H5-59[25;59H[?25h[?25l)[22;13H[46m([m[23;15H([25;58H)[46m)[m[50;163H6-60[25;60H[?25h[?25l)[21;10H[46m([m[22;13H([25;59H)[46m)[m[50;163H7-61[25;61H[?25h[?25l[21;10H([25;60H)[50;160H1,3    [21;3H[?25h[?25l([93mletrec[m ([aux-sum[50;162H4[21;4H[?25h[?25l[7C[46m([25;60H)[m[50;160H5,47-61[25;61H[?25h[?25l[26;49r[26;1H[L[1;50r[50;159H[K[50;159H26,5[10CTop[21;11H([25;60H)
    [?25h[?25l([50;162H6[26;6H[?25h[?25la[50;162H7[26;7H[?25h[?25lu[50;162H8[26;8H[?25h[?25lx[50;162H9[26;9H[?25h[?25l-[50;162H10[26;10H[?25h[?25ls[50;163H1[26;11H[?25h[?25lu[50;163H2[26;12H[?25h[?25lm[50;163H3[26;13H[?25h[?25l[50;163H4[26;14H[?25h[?25l([50;163H5[26;15H[?25h[?25l[95m0[m[50;163H6[26;16H[?25h[?25l[50;163H7[26;17H[?25h[?25ll[50;163H8[26;18H[?25h[?25ls[50;163H9[26;19H[?25h[?25l)[46m([4C)[m[50;162H20[26;20H[?25h[?25l)    [46m([m[8C([4C)[46m)[m[50;163H1[26;21H[?25h[?25l)[21;3H[46m([m[26;5H([14C)[46m)[m[50;163H2[26;22H[?25h[?25l)[20;1H[46m([m
  ([26;21H)[46m)[m[50;163H3[26;23H[?25h[50;1H[K[26;22H[?25l[50;149H^[[26;22H[50;149H  [26;23H[50;159H26,22[9CTop[26;22H[?25h[?25l[50;149H:[26;22H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2750B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:25:54: read-syntax: missing `)` to close preceding `(`, found instead `]`
  context...:
   /usr/share/racket/collects/syntax/module-reader.rkt:190:25: loop
   /usr/share/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal
   /usr/share/racket/collects/racket/../syntax/module-reader.rkt:65:9: lang:read-syntax
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 94L, 2750B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
[106m([m[38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;13H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17Hsum[25;17H([36m+[m ([36mlength[m ([36mcar[m ls)) (aux-sum ([36mcdr[m ls)])))))
    (aux-sum ([31m0[m ls)))[106m)[m

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H26,22[9CTop[26;22H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
[46m([m[93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;13H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17Hsum[25;17H([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (aux-sum ([1m[96mcdr[m ls)])))))
    (aux-sum ([95m0[m ls)))[46m)[m

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H26,22[9CTop"lab5-sol.scm" 94L, 2750B[26;22H[?25h[?25l[20;1H([26;22H)[50;160H5,5-19[25;19H[?25h[?25l[21;3H[46m([26;21H)[m[50;160H6,21  [26;21H[?25h[?25l[21;3H([8C[46m[[25;55H][m[26;21H)[50;160H5,41-55[25;55H[?25h[?25l[50;149H~@k[25;55H[50;149H   [25;54H[21;12H[[25;47H[46m([6C)[m][50;163H0-54[25;54H[?25h[?25l[50;149H~@k[25;54H[50;149H   [25;55H[21;12H[46m[[m[25;47H([6C)[46m][m[50;163H1-55[25;55H[?25h[?25l[50;149H~@k[25;55H[50;149H   [25;56H[21;12H[[25;38H[46m([m[16C][46m)[m[50;163H2-56[25;56H[?25h[?25l[50;149H~@k[25;56H[50;149H   [25;55H[21;12H[46m[[m[25;38H([16C[46m][m)[50;163H1-55[25;55H[?25h[?25l[50;149H~@k[25;55H[50;149H   [25;54H[21;12H[[25;47H[46m([6C)[m][50;163H0-54[25;54H[?25h[?25l[50;149H~@k[25;54H[50;149H   [25;55H[21;12H[46m[[m[25;47H([6C)[46m][m[50;163H1-55[25;55H[?25h[?25l[50;149H~@k[25;55H[50;149H   [25;56H[21;12H[[25;38H[46m([m[16C][46m)[m[50;163H2-56[25;56H[?25h[?25l[50;149H~@k[25;56H[50;149H   [25;55H[21;12H[46m[[m[25;38H([16C[46m][m)[50;163H1-55[25;55H[?25h[?25l[50;149H~@k[25;55H[50;149H   [25;54H[21;12H[[25;47H[46m([6C)[m][50;163H0-54[25;54H[?25h[?25l[50;149H~@k[25;54H[50;149H   [25;55H[21;12H[46m[[m[25;47H([6C)[46m][m[50;163H1-55[25;55H[?25h[?25l[50;149H)[25;55H[50;149H [27;1H[21;12H[[25;55H][50;160H7,0-1  [27;1H[?25h[?25l[50;149Hi[27;1H[50;149H [27;1H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H27,1[10CTop[27;1H[?25h[?25l[21;12H[46m[[25;55H][m[50;160H5,41-55[25;55H[?25h[?25l[46m)[m])))))[25;55H)[46m][m[50;163H2-56[25;56H[?25h[?25l][46m)[m[25;61H[K[25;55H[46m][m)[50;163H1-55[25;55H[?25h[?25l[21;12H[[25;38H[46m([m[16C][46m)[m[50;163H2-56[25;56H[?25h[?25l)[25;60H[K[25;55H[46m)[m)[50;163H1-55[25;55H[?25h[?25l[25;17H[46m([m[20C([16C)[46m)[m[50;163H2-56[25;56H[?25h[?25l[25;17H([20C[46m([16C)[m)[50;163H1-55[25;55H[?25h[?25l[25;17H[46m([m[20C([16C)[46m)[m[50;163H2-56[25;56H[?25h[?25l[23;15H[46m([m[25;17H([38C)[46m)[m[50;163H3-57[25;57H[?25h[?25l[22;13H[46m([m[23;15H([25;57H)[46m)[m[50;163H4-58[25;58H[?25h[?25l[21;11H[46m([m[22;13H([25;58H)[46m)[m[50;163H5-59[25;59H[?25h[?25l[46m}[m)}[46m)[m[50;163H6-60[25;60H[?25h[?25l[21;11H([25;60H)[50;163H5-59[25;59H[?25h[?25l[21;11H[46m([25;60H)[m[50;163H6-60[25;60H[?25h[?25l)[25;60H[K[25;59H[46m)[m[50;163H5-59[25;59H[?25h[?25l[46m][m)][46m)[m[50;163H6-60[25;60H[?25h[?25l[21;11H([46m[[25;59H][m)[50;163H5-59[25;59H[?25h[?25l[21;12H[[22;13H[46m([25;58H)[m][50;163H4-58[25;58H[?25h[?25l[21;12H[46m[[m[22;13H([25;58H)[46m][m[50;163H5-59[25;59H[?25h[?25l[21;11H[46m([m[[25;59H][46m)[m[50;163H6-60[25;60H[?25h[?25l[50;163H7-61[25;61H[?25h[?25l[50;163H6-60[25;60H[?25h[?25l[21;11H([46m[[25;59H][m)[50;163H5-59[25;59H[?25h[?25l[21;12H[[22;13H[46m([25;58H)[m][50;163H4-58[25;58H[?25h[?25l[22;13H([23;15H[46m([25;57H)[m)[50;163H3-57[25;57H[?25h[?25l[23;15H([25;17H[46m([38C)[m)[50;163H2-56[25;56H[?25h[?25l[25;17H([20C[46m([16C)[m)[50;163H1-55[25;55H[?25h[?25l[25;38H([8C[46m([6C)[m)[50;163H0-54[25;54H[?25h[?25l[25;47H([6C)[50;162H39-53[25;53H[?25h[?25l[50;163H8-52[25;52H[?25h[?25l[50;163H7-51[25;51H[?25h[?25l[50;163H6-50[25;50H[?25h[50;1H[K[25;49H[?25l[50;149H^[[25;49H[50;149H  [25;50H[50;159H25,35-49      Top[25;49H[?25h[?25l[50;149H:[25;49H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2750B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...:
   '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 94L, 2750B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;13H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17Hsum[25;17H([36m+[m ([36mlength[m ([36mcar[m ls)) (aux-sum ([36mcdr[m ls)))))])
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H25,35-49      Top[25;49H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;13H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17Hsum[25;17H([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (aux-sum ([1m[96mcdr[m ls)))))])
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H25,35-49      Top"lab5-sol.scm" 94L, 2750B[25;49H[?25h[?25l[50;162H17-31[25;31H[?25h[?25l[25;20H[46m([15C)[m[50;162H6-20 [25;20H[?25h[?25l([15C)[50;162H32-46[25;46H[?25h[?25l[50;149H<20>[25;46H[50;149H    [25;47H[46m([6C)[m[50;163H3-47[25;47H[?25h[?25l[50;149H~@k[25;47H[50;149H   [25;46H ([6C)[50;163H2-46[25;46H[?25h[?25l[50;149Hi[25;46H[50;149H [25;46H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H25,32-46      Top[25;46H[?25h[?25l  ([1m[96mcdr[m ls)))))])[50;163H3-47[25;47H[?25h[?25l[50;163H2-46[25;46H[?25h[?25l   ([1m[96mcdr[m ls)))))])[50;163H3-47[25;47H[?25h[?25ls  ([1m[96mcdr[m ls)))))])[50;163H4-48[25;48H[?25h[?25lu  ([1m[96mcdr[m ls)))))])[50;163H5-49[25;49H[?25h[?25lm  ([1m[96mcdr[m ls)))))])[50;163H6-50[25;50H[?25h[?25l[50;163H7-51[25;51H[?25h[?25l [46m([6C)[m[50;163H8-52[25;52H[?25h[?25l[50;163H9-53[25;53H[?25h[?25l[50;163H8-52[25;52H[?25h[?25l([6C)[50;163H7-51[25;51H[?25h[?25l [46m([6C)[m[50;163H8-52[25;52H[?25h[?25l[50;163H9-53[25;53H[?25h[?25l([6C)[50;162H40-54[25;54H[?25h[?25l[50;163H1-55[25;55H[?25h[?25l[50;163H2-56[25;56H[?25h[?25l[50;163H3-57[25;57H[?25h[?25l[50;163H4-58[25;58H[?25h[?25l[46m([6C)[m[50;163H5-59[25;59H[?25h[?25l[25;38H[46m([m[13C([6C)[46m)[m[50;163H6-60[25;60H[?25h[?25l[25;17H[46m([m[20C([21C)[46m)[m[50;163H7-61[25;61H[?25h[?25l[25;17H([20C[46m([21C)[m)[50;163H6-60[25;60H[?25h[?25l[25;38H([13C[46m([6C)[m)[50;163H5-59[25;59H[?25h[?25l[25;52H([6C)[50;163H4-58[25;58H[?25h[?25l[50;163H3-57[25;57H[?25h[?25l[50;163H2-56[25;56H[?25h[?25l[50;163H1-55[25;55H[?25h[?25l[50;163H0-54[25;54H[?25h[?25l[46m([6C)[m[50;162H39-53[25;53H[?25h[?25l[50;163H8-52[25;52H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[4C])[25;65H[K[25;51H[46m([m[1m[96mcdr[m ls[46m)[m)[50;163H7-51[25;51H[?25h[?25l[50;163H8-52[25;52H[?25h[?25l([6C)[50;163H9-53[25;53H[?25h[?25l[50;162H40-54[25;54H[?25h[?25l[50;163H1-55[25;55H[?25h[?25l[50;163H2-56[25;56H[?25h[?25l[50;163H3-57[25;57H[?25h[?25l[46m([6C)[m[50;163H4-58[25;58H[?25h[?25l[25;38H[46m([m[12C([6C)[46m)[m[50;163H5-59[25;59H[?25h[?25l[25;17H[46m([m[20C([20C)[46m)[m[50;163H6-60[25;60H[?25h[?25l[23;15H[46m([m[25;17H([42C)[46m)[m[50;163H7-61[25;61H[?25h[?25l[22;13H[46m([m[23;15H([25;61H)[46m)[m[50;163H8-62[25;62H[?25h[?25l[21;12H[46m[[m[22;13H([25;62H)[46m][m[50;163H9-63[25;63H[?25h[?25l[21;11H[46m([m[[25;63H][46m)[m[50;162H50-64[25;64H[?25h[?25l[50;163H1-65[25;65H[?25h[?25l[20;1H[46m([m[21;11H([25;64H)[26;22H[46m)[m[50;160H6,23   [26;23H[?25h[?25l[50;163H2[26;22H[?25h[?25l[20;1H(
  [46m([26;21H)[m)[50;163H1[26;21H[?25h[?25l[21;3H([26;5H[46m([14C)[m)[50;163H0[26;20H[?25h[?25l    ([8C[46m([4C)[m)[50;162H19[26;19H[?25h[?25l    [46m([m[8C([4C)[46m)[m[50;162H20[26;20H[?25h[?25l[21;3H[46m([m[26;5H([14C)[46m)[m[50;163H1[26;21H[?25h[?25l[20;1H[46m([m
  ([26;21H)[46m)[m[50;163H2[26;22H[?25h[?25l[50;163H3[26;23H[?25h[50;1H[K[26;22H[?25l[50;149H^[[26;22H[50;149H  [26;23H[50;159H26,22[9CTop[26;22H[?25h[?25l[50;159H[K[50;1H:x[?25h[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2754B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...:
   '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 94L, 2754B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
[106m([m[38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;13H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17Hsum[25;17H([36m+[m ([36mlength[m ([36mcar[m ls)) (aux-sum sum ([36mcdr[m ls)))))])
    (aux-sum ([31m0[m ls)))[106m)[m

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H26,22[9CTop[26;22H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
[46m([m[93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;13H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17Hsum[25;17H([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (aux-sum sum ([1m[96mcdr[m ls)))))])
    (aux-sum ([95m0[m ls)))[46m)[m

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H26,22[9CTop"lab5-sol.scm" 94L, 2754B[26;22H[?25h[?25l[20;1H(
  [46m([26;21H)[m)[50;163H1[26;21H[?25h[?25l[21;3H([22;13H[46m([25;62H)[m[26;21H)[50;160H2,6-13[22;13H[?25h[?25l[50;149H~@k[22;13H[50;149H   [22;12H ([25;62H)[50;162H5-12[22;12H[?25h[?25l[50;149H~@k[22;12H[50;149H   [22;13H[46m([25;62H)[m[50;162H6-13[22;13H[?25h[?25l[50;149Hi[22;13H[50;149H [22;13H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H22,6-13[7CTop[22;13H[?25h[?25l([93m[46ml[m[93mambda[m (sum ls)[22;28H[K[22;12H[46m([m[93ml[m[50;162H5-12[22;12H[?25h[?25l([93m[46ml[m[93mambda[m (sum ls)[22;27H[K[22;11H[46m([m[93ml[m[50;162H4-11[22;11H[?25h[?25l([93m[46ml[m[93mambda[m (sum ls)[22;26H[K[22;10H[46m([m[93ml[m[50;162H3-10[22;10H[?25h[?25l([93m[46ml[m[93mambda[m (sum ls)[22;25H[K[22;9H[46m([m[93ml[m[50;162H2-9 [22;9H[?25h[?25l([93m[46ml[m[93mambda[m (sum ls)[22;17H[K[22;1H[46m([m[93ml[m[50;162H1  [22;1H[?25h[?25l[21;49r[49;1H
[1;50r[21;1H  ([93mletrec[m ([aux-sum([93mlambda[m (sum ls)
[46m        [m[24;62H)[49;1H[96m;;the element is > v or not > v[m[50;159H[K[50;159H21,20[9CTop[21;20H[46m([m
        [24;62H[46m)[21;20H[?25h[?25l[22;49r[m[22;1H[L[1;50r[21;20H[K[22;14H([93mlambda[m (sum ls)[25;62H)[50;159H[K[50;159H22,7-14[7CTop[22;14H[46m([25;62H)[22;14H[?25h[?25l[m([25;62H)[50;160H3[23;14H[?25h[?25l[22;14H[46m([25;62H)[m[50;160H2[22;14H[?25h[?25l([25;62H)[50;160H3[23;14H[?25h[?25l[22;14H[46m([25;62H)[m[50;160H2[22;14H[?25h[?25l([25;62H)[50;160H3[23;14H[?25h[?25l [46m([25;61H)[m[50;162H8-15[23;15H[?25h[?25l[22;14H[46m([m[23;15H([25;61H)[46m)[m[50;160H2[22;15H[?25h[?25l([23;15H[46m([25;61H)[m)[50;160H3[23;15H[?25h[?25l[50;162H9-16[23;16H[?25h[?25l([25;61H)[50;162H10-17[23;17H[?25h[?25l[50;163H1-18[23;18H[?25h[?25l [46m([8C)[m[50;163H2-19[23;19H[?25h[?25l[50;163H3-20[23;20H[?25h[?25l([8C)[50;163H4-21[23;21H[?25h[?25l[50;163H5-22[23;22H[?25h[?25l[50;163H6-23[23;23H[?25h[?25l[50;163H7-24[23;24H[?25h[?25l[50;163H8-25[23;25H[?25h[?25l[50;163H9-26[23;26H[?25h[?25l[50;162H20-27[23;27H[?25h[?25l[23;19H[46m([8C)[m[50;163H1-28[23;28H[?25h[?25l[23;19H([8C)[50;160H4,6-20 [24;20H[?25h[?25l[50;162H5-19[24;19H[?25h[?25l[50;162H4-18[24;18H[?25h[?25l[50;162H3-17[24;17H[?25h[?25l[25;17H[46m([42C)[m[50;160H5[25;17H[?25h[?25l[50;162H4-18[25;18H[?25h[?25l([42C)[50;162H5-19[25;19H[?25h[?25l [46m([15C)[m[50;162H6-20[25;20H[?25h[?25l[50;162H7-21[25;21H[?25h[?25l([15C)[50;162H8-22[25;22H[?25h[?25l[50;162H9-23[25;23H[?25h[?25l[50;162H10-24[25;24H[?25h[?25l[50;163H1-25[25;25H[?25h[?25l[50;163H2-26[25;26H[?25h[?25l[50;163H3-27[25;27H[?25h[?25l [46m([6C)[m[50;163H4-28[25;28H[?25h[?25l[50;163H5-29[25;29H[?25h[?25l([6C)[50;163H6-30[25;30H[?25h[?25l[50;163H7-31[25;31H[?25h[?25l[50;163H8-32[25;32H[?25h[?25l[50;163H9-33[25;33H[?25h[?25l[50;162H20-34[25;34H[?25h[?25l[46m([6C)[m[50;163H1-35[25;35H[?25h[?25l[25;20H[46m([m[7C([6C)[46m)[m[50;163H2-36[25;36H[?25h[?25l[50;163H3-37[25;37H[?25h[?25l[25;20H([15C) [46m([20C)[m[50;163H4-38[25;38H[?25h[?25l[50;163H5-39[25;39H[?25h[?25l([20C)[50;163H6-40[25;40H[?25h[?25l[46m([20C)[m[50;163H5-39[25;39H[?25h[?25l[50;163H4-38[25;38H[?25h[?25l[50;163H5-39[25;39H[?25h[?25l([20C)[50;163H6-40[25;40H[?25h[?25l[50;163H7-41[25;41H[?25h[?25l[50;163H8-42[25;42H[?25h[?25l[50;163H9-43[25;43H[?25h[?25l[50;162H30-44[25;44H[?25h[?25l[50;163H1-45[25;45H[?25h[?25l[50;163H2-46[25;46H[?25h[?25l[50;163H3-47[25;47H[?25h[?25l[50;163H4-48[25;48H[?25h[?25l[50;163H5-49[25;49H[?25h[?25l[50;163H6-50[25;50H[?25h[?25l [46m([6C)[m[50;163H7-51[25;51H[?25h[?25l[50;163H8-52[25;52H[?25h[?25l([6C)[50;163H9-53[25;53H[?25h[?25l[50;162H40-54[25;54H[?25h[?25l[50;163H1-55[25;55H[?25h[?25l[50;163H2-56[25;56H[?25h[?25l[50;163H3-57[25;57H[?25h[?25l[46m([6C)[m[50;163H4-58[25;58H[?25h[?25l[25;38H[46m([m[12C([6C)[46m)[m[50;163H5-59[25;59H[?25h[?25l[25;17H[46m([m[20C([20C)[46m)[m[50;163H6-60[25;60H[?25h[?25l[23;15H[46m([m[25;17H([42C)[46m)[m[50;163H7-61[25;61H[?25h[?25l[22;14H[46m([m[23;15H([25;61H)[46m)[m[50;163H8-62[25;62H[?25h[?25l[21;12H[46m[[m[22;14H([25;62H)[46m][m[50;163H9-63[25;63H[?25h[?25l[21;11H[46m([m[[25;63H][46m)[m[50;162H50-64[25;64H[?25h[?25l[20;1H[46m([m[21;11H([25;64H)[26;22H[46m)[m[50;160H6,23   [26;23H[?25h[?25l[50;163H2[26;22H[?25h[?25l[20;1H(
  [46m([26;21H)[m)[50;163H1[26;21H[?25h[?25l[21;3H([26;5H[46m([14C)[m)[50;163H0[26;20H[?25h[?25l    ([8C[46m([4C)[m)[50;162H19[26;19H[?25h[?25l([4C)[50;163H8[26;18H[?25h[?25l[50;163H7[26;17H[?25h[?25l[50;163H6[26;16H[?25h[?25l[46m([4C)[m[50;163H5[26;15H[?25h[?25l[50;163H4[26;14H[?25h[?25l[50;163H5[26;15H[?25h[?25l([4C)[50;163H6[26;16H[?25h[?25l[50;163H7[26;17H[?25h[?25l[50;163H8[26;18H[?25h[?25l[46m([4C)[m[50;163H9[26;19H[?25h[?25l    [46m([m[8C([4C)[46m)[m[50;162H20[26;20H[?25h[?25l[25;20H[46m([15C)[m
    ([14C)[50;160H5,6-20[25;20H[?25h[?25l[50;162H7-21[25;21H[?25h[?25l([15C)[50;162H8-22[25;22H[?25h[?25l[50;162H9-23[25;23H[?25h[?25l[50;162H10-24[25;24H[?25h[?25l[50;163H1-25[25;25H[?25h[?25l[50;163H2-26[25;26H[?25h[?25l[50;163H3-27[25;27H[?25h[?25l [46m([6C)[m[50;163H4-28[25;28H[?25h[?25l[50;163H5-29[25;29H[?25h[?25l([6C)[50;163H6-30[25;30H[?25h[?25l[50;163H7-31[25;31H[?25h[?25l[50;163H8-32[25;32H[?25h[?25l[50;163H9-33[25;33H[?25h[?25l[50;162H20-34[25;34H[?25h[?25l[46m([6C)[m[50;163H1-35[25;35H[?25h[?25l[25;20H[46m([m[7C([6C)[46m)[m[50;163H2-36[25;36H[?25h[?25l[50;163H3-37[25;37H[?25h[?25l[25;20H([15C) [46m([20C)[m[50;163H4-38[25;38H[?25h[?25l[50;163H5-39[25;39H[?25h[?25l([20C)[50;163H6-40[25;40H[?25h[?25l[50;163H7-41[25;41H[?25h[?25l[50;163H8-42[25;42H[?25h[?25l[50;163H9-43[25;43H[?25h[?25l[50;163H8-42[25;42H[?25h[?25l[50;163H7-41[25;41H[?25h[?25l[50;163H6-40[25;40H[?25h[?25l[46m([20C)[m[50;163H5-39[25;39H[?25h[?25l[50;163H4-38[25;38H[?25h[?25l[25;20H[46m([15C)[m ([20C)[50;163H3-37[25;37H[?25h[?25l[50;163H2-36[25;36H[?25h[?25l[50;163H3-37[25;37H[?25h[?25l[25;20H([15C) [46m([20C)[m[50;163H4-38[25;38H[?25h[?25l[50;163H5-39[25;39H[?25h[?25l([20C)[50;163H6-40[25;40H[?25h[?25l[50;163H7-41[25;41H[?25h[?25l[50;163H8-42[25;42H[?25h[?25l[50;163H9-43[25;43H[?25h[?25l[50;162H30-44[25;44H[?25h[?25l[50;163H1-45[25;45H[?25h[?25l[50;163H2-46[25;46H[?25h[?25l[50;163H1-45[25;45H[?25h[?25l[50;163H0-44[25;44H[?25h[?25l[50;162H29-43[25;43H[?25h[?25l[50;163H8-42[25;42H[?25h[?25l[50;163H7-41[25;41H[?25h[?25l[50;163H6-40[25;40H[?25h[?25l[46m([20C)[m[50;163H5-39[25;39H[?25h[?25l[50;163H4-38[25;38H[?25h[?25l[25;20H[46m([15C)[m ([20C)[50;163H3-37[25;37H[?25h[?25l[25;20H([15C)[50;160H4,6-20 [24;20H[?25h[?25l[25;20H[46m([15C)[m[50;160H5,23-37[25;37H[?25h[?25l[25;20H([15C) [46m([20C)[m[50;163H4-38[25;38H[?25h[?25l[50;163H5-39[25;39H[?25h[?25l([20C)[50;163H6-40[25;40H[?25h[?25l[46m([20C)[m[50;163H5-39[25;39H[?25h[?25l[50;163H4-38[25;38H[?25h[?25l[25;20H[46m([15C)[m ([20C)[50;163H3-37[25;37H[?25h[?25l[50;163H2-36[25;36H[?25h[?25l[25;20H([7C[46m([6C)[m)[50;163H1-35[25;35H[?25h[?25l[25;28H([6C)[50;163H0-34[25;34H[?25h[?25l[50;162H19-33[25;33H[?25h[?25l[50;163H8-32[25;32H[?25h[?25l[50;163H7-31[25;31H[?25h[?25l[50;163H6-30[25;30H[?25h[?25l[46m([6C)[m[50;163H5-29[25;29H[?25h[?25l[50;163H4-28[25;28H[?25h[?25l([6C)[50;163H3-27[25;27H[?25h[?25l[50;163H2-26[25;26H[?25h[?25l[50;163H1-25[25;25H[?25h[?25l[50;163H0-24[25;24H[?25h[?25l[50;162H9-23 [25;23H[?25h[?25l[50;162H8-22[25;22H[?25h[?25l[46m([15C)[m[50;162H7-21[25;21H[?25h[?25l([15C)[50;160H4,6-20[24;20H[?25h[?25l[50;160H3,14-21[23;21H[?25h[?25l[50;160H2[22;21H[?25h[?25l[50;160H1,20   [21;20H[?25h[?25l[50;160H2,14-21[22;21H[?25h[?25l[50;160H3[23;21H[?25h[?25l[50;160H4,6-20 [24;20H[?25h[?25l[24;19H[K[50;162H5-19[24;19H[?25h[?25l[24;18H[K[50;162H4-18[24;18H[?25h[?25l[24;17H[K[50;162H3-17[24;17H[?25h[?25l[95m0[m[50;162H4-18[24;18H[?25h[?25l[25;49r[25;1H[L[1;50r[50;159H[K[50;159H25,3-17[7CTop[25;17H[?25h[?25l([46m([26;61H)[m[50;162H4-18[25;18H[?25h[?25ll([26;61H)[50;162H5-19[25;19H[?25h[?25le[50;162H6-20[25;20H[?25h[?25l[93mlet[m[50;162H7-21[25;21H[?25h[?25l[50;162H8-22[25;22H[?25h[?25ls[50;162H9-23[25;23H[?25h[?25lu[50;162H10-24[25;24H[?25h[?25lm[50;163H1-25[25;25H[?25h[?25l[50;163H2-26[25;26H[?25h[?25l[50;163H1-25[25;25H[?25h[?25l[25;24H[K[50;163H0-24[25;24H[?25h[?25l[25;23H[K[50;162H9-23 [25;23H[?25h[?25l[25;22H[K[50;162H8-22[25;22H[?25h[?25l([46m([26;61H)[m[50;162H9-23[25;23H[?25h[?25l[1m[96m+[m([26;61H)[50;162H10-24[25;24H[?25h[?25l[50;163H1-25[25;25H[?25h[?25ls[50;163H2-26[25;26H[?25h[?25lu[50;163H3-27[25;27H[?25h[?25lm[50;163H4-28[25;28H[?25h[?25l[50;163H5-29[25;29H[?25h[?25l[1m[96m+[m[50;163H6-30[25;30H[?25h[?25l[50;163H7-31[25;31H[?25h[?25l[50;163H6-30[25;30H[?25h[?25l[25;29H[K[50;163H5-29[25;29H[?25h[?25ll[50;163H6-30[25;30H[?25h[?25le[50;163H7-31[25;31H[?25h[?25ln[50;163H8-32[25;32H[?25h[?25l=[50;163H9-33[25;33H[?25h[?25l[25;32H[K[50;163H8-32[25;32H[?25h[?25l[25;31H[K[50;163H7-31[25;31H[?25h[?25l[25;30H[K[50;163H6-30[25;30H[?25h[?25l[25;29H[K[50;163H5-29[25;29H[?25h[?25l([46m([26;61H)[m[50;163H6-30[25;30H[?25h[?25ll([26;61H)[50;163H7-31[25;31H[?25h[?25le[50;163H8-32[25;32H[?25h[?25ln[50;163H9-33[25;33H[?25h[?25lg[50;162H20-34[25;34H[?25h[?25lt[50;163H1-35[25;35H[?25h[?25l[1m[96mlength[m[50;163H2-36[25;36H[?25h[?25l[50;163H3-37[25;37H[?25h[?25l([46m([26;61H)[m[50;163H4-38[25;38H[?25h[?25lc([26;61H)[50;163H5-39[25;39H[?25h[?25la[50;163H6-40[25;40H[?25h[?25l[1m[96mcar[m[50;163H7-41[25;41H[?25h[?25l[50;163H8-42[25;42H[?25h[?25ll[50;163H9-43[25;43H[?25h[?25ls[50;162H30-44[25;44H[?25h[?25l)[25;37H[46m([6C)[m[50;163H1-45[25;45H[?25h[?25l)[25;29H[46m([m[7C([6C)[46m)[m[50;163H2-46[25;46H[?25h[?25l)[25;22H[46m([m[6C([15C)[46m)[m[50;163H3-47[25;47H[?25h[?25l[25;22H([23C)[26;20H[46m([15C)[m[50;160H6,6-20 [26;20H[?25h[?25l[50;4H[1m(insert)- VISUAL --[m[50;159H[K[50;149H2[26;21H[50;159H26,7-21[7CTop[26;21H[48;5;242m([m[15C)[26;21H[?25h[?25l[50;149H3[26;22H[1m[96m[48;5;242ml[m[1m[96mength[m [50;162H8-22[26;22H[?25h[?25l[50;149H5[26;24H[1m[96m[48;5;242men[m[1m[96mgth[m [50;162H10-24[26;24H[?25h[?25l[50;149H6[26;25H[1m[96m[48;5;242mg[m[1m[96mth[m [50;163H1-25[26;25H[?25h[?25l[50;149H8[26;27H[1m[96m[48;5;242mth[m [50;163H3-27[26;27H[?25h[?25l[50;149H9[26;28H[48;5;242m [m[46m([6C)[m[50;163H4-28[26;28H[?25h[?25l[50;149H10[26;29H[48;5;242m([m[6C)[50;163H5-29[26;29H[?25h[?25l[50;150H1[26;30H[1m[96m[48;5;242mc[m[1m[96mar[m [50;163H6-30[26;30H[?25h[?25l[50;150H2[26;31H[1m[96m[48;5;242ma[m[1m[96mr[m [50;163H7-31[26;31H[?25h[?25l[50;150H3[26;32H[1m[96m[48;5;242mr[m [50;163H8-32[26;32H[?25h[?25l[50;150H4[26;33H[48;5;242m [m[50;163H9-33[26;33H[?25h[?25l[50;150H5[26;34H[48;5;242ml[m[50;162H20-34[26;34H[?25h[?25l[50;150H6[26;35H[48;5;242ms[m[46m)[m[50;163H1-35[26;35H[?25h[?25l[50;150H7[26;36H[48;5;242m)[m[46m)[m[50;163H2-36[26;36H[?25h[?25l[?25h[?25l[50;149Hc [26;36H[50;149H [26;20H[50;4H[1mINSERTt --[m[50;13H[K[50;159H26,6-20[7CTop[26;20H[46m [m(aux-sum sum ([1m[96mc[m[1m[96m[46md[m[1m[96mr[m ls)))))])[26;48H[K[26;20H [15C[1m[96mdr[m [26;20H[?25h[?25ls (aux-sum sum ([1m[96mcdr[m ls)))))])[50;162H7-21[26;21H[?25h[?25lu (aux-sum sum ([1m[96mcdr[m ls)))))])[50;162H8-22[26;22H[?25h[?25lm (aux-sum sum ([1m[96mcdr[m ls)))))])[50;162H9-23[26;23H[?25h[?25l[50;162H28-42[26;42H[?25h[?25l[26;24H[46m([20C)[m[50;162H10-24[26;24H[?25h[?25l[50;163H1-25[26;25H[?25h[?25l[50;163H0-24[26;24H[?25h[?25l([46ma[mux-sum sum ([1m[96mcdr[m ls)[4C])[26;50H[K[26;23H[46m([ma[19C[46m)[m)[50;162H9-23 [26;23H[?25h[?25l([46ma[mux-sum sum ([1m[96mcdr[m ls)[4C])[26;49H[K[26;22H[46m([ma[19C[46m)[m)[50;162H8-22[26;22H[?25h[?25l([46ma[mux-sum sum ([1m[96mcdr[m ls)[4C])[26;48H[K[26;21H[46m([ma[19C[46m)[m)[50;162H7-21[26;21H[?25h[?25l([46ma[mux-sum sum ([1m[96mcdr[m ls)[4C])[26;47H[K[26;20H[46m([ma[19C[46m)[m)[50;162H6-20[26;20H[?25h[?25l([46ma[mux-sum sum ([1m[96mcdr[m ls)[4C])[26;46H[K[26;19H[46m([ma[19C[46m)[m)[50;162H5-19[26;19H[?25h[?25l([46ma[mux-sum sum ([1m[96mcdr[m ls)[4C])[26;45H[K[26;18H[46m([ma[19C[46m)[m)[50;162H4-18[26;18H[?25h[?25l[50;162H5-19[26;19H[?25h[?25l([20C)[50;162H6-20[26;20H[?25h[?25l[50;162H7-21[26;21H[?25h[?25l[50;162H8-22[26;22H[?25h[?25l[50;162H9-23[26;23H[?25h[?25l[50;162H10-24[26;24H[?25h[?25l[50;162H9-23 [26;23H[?25h[?25l[50;162H8-22[26;22H[?25h[?25l[50;162H7-21[26;21H[?25h[?25l[50;162H6-20[26;20H[?25h[?25l[46m([20C)[m[50;162H5-19[26;19H[?25h[?25l[50;162H4-18[26;18H[?25h[?25l[46m([m([20C)[46m)[m[50;162H3-17[26;17H[?25h[?25l[26;9H([46m([maux-sum sum ([1m[96mcdr[m ls)))[46m)[m)])[26;37H[K[26;9H[46m([m([21C[46m)[m)[50;162H2-9 [26;9H[?25h[?25l([46m([maux-sum sum ([1m[96mcdr[m ls)))[46m)[m)])[26;29H[K[26;1H[46m([m([21C[46m)[m)[50;162H1  [26;1H[?25h[?25l[25;49r[49;1H
[1;50r[25;1H                ([93mlet[m ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))((aux-sum sum ([1m[96mcdr[m ls)))))])
[46m [m[49;1H[96m;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H25,33-47      Top[25;47H[46m([22C)[m
 [25;47H[?25h[?25l[26;49r[26;1H[L[1;50r[25;47H[K[26;19H((aux-sum sum ([1m[96mcdr[m ls)))))])[50;159H[K[50;159H26,5-19[7CTop[26;19H[46m([22C)[26;19H[?25h[?25l[m([46m([20C)[m)[50;162H6-20[26;20H[?25h[?25l[50;162H7-21[26;21H[?25h[?25l([20C)[50;162H8-22[26;22H[?25h[?25l[50;162H9-23[26;23H[?25h[?25l[50;162H10-24[26;24H[?25h[?25l[50;163H1-25[26;25H[?25h[?25l[50;163H2-26[26;26H[?25h[?25l[50;163H3-27[26;27H[?25h[?25l[50;163H4-28[26;28H[?25h[?25l[50;163H5-29[26;29H[?25h[?25l[50;163H6-30[26;30H[?25h[?25l[50;163H7-31[26;31H[?25h[?25l[50;163H8-32[26;32H[?25h[?25l [46m([6C)[m[50;163H9-33[26;33H[?25h[?25l[50;162H20-34[26;34H[?25h[?25l([6C)[50;163H1-35[26;35H[?25h[?25l[50;163H2-36[26;36H[?25h[?25l[50;163H3-37[26;37H[?25h[?25l[50;163H4-38[26;38H[?25h[?25l[50;163H5-39[26;39H[?25h[?25l[46m([6C)[m[50;163H6-40[26;40H[?25h[?25l[26;20H[46m([m[12C([6C)[46m)[m[50;163H7-41[26;41H[?25h[?25l[26;19H[46m([m([20C)[46m)[m[50;163H8-42[26;42H[?25h[?25l[25;17H[46m([m[26;19H([22C)[46m)[m[50;163H9-43[26;43H[?25h[?25l[23;15H[46m([m[25;17H([26;43H)[46m)[m[50;162H30-44[26;44H[?25h[?25l[21;12H[46m[[m[23;15H([26;44H)[46m][m[50;163H1-45[26;45H[?25h[?25l[21;12H[[22;14H[46m([m[26;45H][46m)[m[50;163H2-46[26;46H[?25h[?25l[21;12H[46m[[m[22;14H([26;45H[46m][m)[50;163H1-45[26;45H[?25h[?25l[21;12H[[23;15H[46m([26;44H)[m][50;163H0-44[26;44H[?25h[?25l[21;12H[46m[[m[23;15H([26;44H)[46m][m[50;163H1-45[26;45H[?25h[?25l[21;12H[[22;14H[46m([m[26;45H][46m)[m[50;163H2-46[26;46H[?25h[?25l[50;163H3-47[26;47H[?25h[?25l[50;163H2-46[26;46H[?25h[?25l[21;12H[46m[[m[22;14H([26;45H[46m][m)[50;163H1-45[26;45H[?25h[?25l[21;12H[[23;15H[46m([26;44H)[m][50;163H0-44[26;44H[?25h[?25l[23;15H([25;17H[46m([26;43H)[m)[50;162H29-43[26;43H[?25h[?25l[25;17H([26;19H[46m([22C)[m)[50;163H8-42[26;42H[?25h[?25l[26;19H([46m([20C)[m)[50;163H7-41[26;41H[?25h[?25l[26;20H([12C[46m([6C)[m)[50;163H6-40[26;40H[?25h[?25l[26;20H[46m([m[12C([6C)[46m)[m[50;163H7-41[26;41H[?25h[?25l[26;19H[46m([m([20C)[46m)[m[50;163H8-42[26;42H[?25h[?25l[25;17H[46m([m[26;19H([22C)[46m)[m[50;163H9-43[26;43H[?25h[?25l[23;15H[46m([m[25;17H([26;43H)[46m)[m[50;162H30-44[26;44H[?25h[?25l[21;12H[46m[[m[23;15H([26;44H)[46m][m[50;163H1-45[26;45H[?25h[?25l[21;12H[[22;14H[46m([m[26;45H][46m)[m[50;163H2-46[26;46H[?25h[?25l)[26;46H[K[26;45H[46m)[m[50;163H1-45[26;45H[?25h[?25l[50;163H2-46[26;46H[?25h[?25l}[22;14H([26;45H)[50;163H3-47[26;47H[?25h[?25l[26;46H[K[22;14H[46m([26;45H)[m[50;163H2-46[26;46H[?25h[?25l][21;12H[46m[[m[22;14H([26;45H)[46m][m[50;163H3-47[26;47H[?25h[?25l)[21;11H[46m([m[[26;46H][46m)[m[50;163H4-48[26;48H[?25h[?25l[20;1H[46m([m[21;11H([26;47H)[27;22H[46m)[m[50;160H7,23   [27;23H[?25h[?25l[50;163H2[27;22H[?25h[?25l[20;1H(
  [46m([27;21H)[m)[50;163H1[27;21H[?25h[?25l[21;3H([27;5H[46m([14C)[m)[50;163H0[27;20H[?25h[?25l    ([8C[46m([4C)[m)[50;162H19[27;19H[?25h[?25l([4C)[50;163H8[27;18H[?25h[?25l[50;163H7[27;17H[?25h[50;1H[K[27;16H[?25l[50;149H^[[27;16H[50;149H  [27;17H[50;159H27,16[9CTop[27;16H[?25h[?25l[50;149H:[27;16H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 95L, 2769B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:25:22: let: bad syntax (not an identifier and expression for a binding)
  at: +
  in: (let (+ sum (length (car ls))) ((aux-sum sum (cdr ls))))
  location...:
   lab5-sol.scm:25:22
  context...:
   /usr/share/racket/collects/racket/private/qq-and-or.rkt:50:20: go
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 95L, 2769B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17H[31m0[m[25;17H([38;5;130mlet[m ([36m+[m sum ([36mlength[m ([36mcar[m ls)))[26;19H((aux-sum sum ([36mcdr[m ls))))))])
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:[m[50;159H27,16[9CTop[27;16H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17H[95m0[m[25;17H([93mlet[m ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))[26;19H((aux-sum sum ([1m[96mcdr[m ls))))))])
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:[m[50;159H27,16[9CTop"lab5-sol.scm" 95L, 2769B[27;16H[?25h[?25l[50;149H~@k[27;16H[50;149H   [26;16H[50;160H6,2-16[26;16H[?25h[?25l[50;149H~@k[26;16H[50;149H   [25;16H[50;160H5[25;16H[?25h[?25l[50;149H~@k[25;16H[50;149H   [24;16H[50;160H4[24;16H[?25h[?25l[50;149H~@k[24;16H[50;149H   [25;16H[50;160H5[25;16H[?25h[?25l[50;149H~@k[25;16H[50;149H   [25;17H[46m([26;43H)[m[50;162H3-17[25;17H[?25h[?25l[50;149H~@k[25;17H[50;149H   [25;18H([26;43H)[50;162H4-18[25;18H[?25h[?25l[50;149H~@k[25;18H[50;149H   [25;19H[50;162H5-19[25;19H[?25h[?25l[50;149H~@k[25;19H[50;149H   [25;20H[50;162H6-20[25;20H[?25h[?25l[50;149H~@k[25;20H[50;149H   [25;21H[50;162H7-21[25;21H[?25h[?25l[50;149H~@k[25;21H[50;149H   [25;22H[46m([23C)[m[50;162H8-22[25;22H[?25h[?25l[50;149Hi[25;22H[50;149H [25;22H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H25,8-22[7CTop[25;22H[?25h[?25l[1C([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls[2C)[25;22H([46m([m[22C)[46m)[m[50;162H9-23[25;23H[?25h[?25l[50;162H34-48[25;48H[?25h[?25l)[25;22H[46m([m([23C)[46m)[m[50;163H5-49[25;49H[?25h[?25l[50;163H4-48[25;48H[?25h[?25l[21;11H[46m([m[25;22H([25C)[26;47H[46m)[m[50;160H6[26;48H[?25h[?25l[21;11H([25;22H[46m([25C)[m[26;47H)[50;160H5[25;48H[?25h[?25l[25;22H([46m([23C)[m)[50;163H3-47[25;47H[?25h[?25l[21;11H[46m([m[25;23H([23C)[26;47H[46m)[m[50;160H6[26;47H[?25h[?25l[21;11H([46m[[26;46H][m)[50;163H2-46[26;46H[?25h[?25l[21;12H[[22;14H[46m([26;45H)[m][50;163H1-45[26;45H[?25h[?25l[22;14H([23;15H[46m([26;44H)[m)[50;163H0-44[26;44H[?25h[?25l[22;14H[46m([m[23;15H([26;44H)[46m)[m[50;163H1-45[26;45H[?25h[?25l[21;12H[46m[[m[22;14H([26;45H)[46m][m[50;163H2-46[26;46H[?25h[?25l[21;11H[46m([m[[26;46H][46m)[m[50;163H3-47[26;47H[?25h[?25l)[26;47H[K[26;46H[46m)[m[50;163H2-46[26;46H[?25h[?25l[21;11H([22;14H[46m([26;45H)[m)[50;163H1-45[26;45H[?25h[?25l[22;14H([23;15H[46m([26;44H)[m)[50;163H0-44[26;44H[?25h[?25l[23;15H([25;17H[46m([26;43H)[m)[50;162H29-43[26;43H[?25h[?25l[25;17H([26;19H[46m([22C)[m)[50;163H8-42[26;42H[?25h[?25l[26;19H([46m([20C)[m)[50;163H7-41[26;41H[?25h[?25l[26;20H([12C[46m([6C)[m)[50;163H6-40[26;40H[?25h[?25l[26;20H[46m([m[12C([6C)[46m)[m[50;163H7-41[26;41H[?25h[?25l[26;19H[46m([m([20C)[46m)[m[50;163H8-42[26;42H[?25h[?25l[25;17H[46m([m[26;19H([22C)[46m)[m[50;163H9-43[26;43H[?25h[?25l[23;15H[46m([m[25;17H([26;43H)[46m)[m[50;162H30-44[26;44H[?25h[?25l[22;14H[46m([m[23;15H([26;44H)[46m)[m[50;163H1-45[26;45H[?25h[?25l[21;11H[46m([m[22;14H([26;45H)[46m)[m[50;163H2-46[26;46H[?25h[?25l[46m][m)][46m)[m[50;163H3-47[26;47H[?25h[?25l[21;11H([46m[[26;46H][m)[50;163H2-46[26;46H[?25h[50;1H[K[26;45H[?25l[50;149H^[[26;45H[50;149H  [26;46H[21;12H[[22;14H[46m([26;45H)[m][50;159H26,31-45      Top[26;45H[?25h[?25l[50;149H:[26;45H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 95L, 2771B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:25:22: let: bad syntax (not an identifier and expression for a binding)
  at: (+ sum (length (car ls)))
  in: (let ((+ sum (length (car ls)))) ((aux-sum sum (cdr ls))))
  location...:
   lab5-sol.scm:25:22
  context...:
   /usr/share/racket/collects/racket/private/qq-and-or.rkt:50:20: go
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 95L, 2771B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;14H[106m([m[38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17H[31m0[m[25;17H([38;5;130mlet[m (([36m+[m sum ([36mlength[m ([36mcar[m ls))))[26;19H((aux-sum sum ([36mcdr[m ls)))))[106m)[m])
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:[m[50;159H26,31-45      Top[26;45H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;14H[46m([m[93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17H[95m0[m[25;17H([93mlet[m (([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))))[26;19H((aux-sum sum ([1m[96mcdr[m ls)))))[46m)[m])
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:[m[50;159H26,31-45      Top"lab5-sol.scm" 95L, 2771B[26;45H[?25h[?25l[50;149H~@k[26;45H[50;149H   [25;45H[22;14H([25;38H[46m([6C)[m[26;45H)[50;160H5[25;45H[?25h[?25l[50;149H~@k[25;45H[50;149H   [26;45H[22;14H[46m([m[25;38H([6C)[26;45H[46m)[m[50;160H6[26;45H[?25h[?25l[50;149H~@k[26;45H[50;149H   [25;45H[22;14H([25;38H[46m([6C)[m[26;45H)[50;160H5[25;45H[?25h[?25l[50;149H~@k[25;45H[50;149H   [26;45H[22;14H[46m([m[25;38H([6C)[26;45H[46m)[m[50;160H6[26;45H[?25h[?25l[50;149H~@k[26;45H[50;149H   [25;45H[22;14H([25;38H[46m([6C)[m[26;45H)[50;160H5[25;45H[?25h[?25l[50;149H~@k[25;45H[50;149H   [25;44H([6C)[50;163H0-44[25;44H[?25h[?25l[50;149H~@k[25;44H[50;149H   [25;43H[50;162H29-43[25;43H[?25h[?25l[50;149H~@k[25;43H[50;149H   [25;42H[50;163H8-42[25;42H[?25h[?25l[50;149H~@k[25;42H[50;149H   [25;41H[50;163H7-41[25;41H[?25h[?25l[50;149H~@k[25;41H[50;149H   [25;40H[50;163H6-40[25;40H[?25h[?25l[50;149H~@k[25;40H[50;149H   [25;39H[50;163H5-39[25;39H[?25h[?25l[50;149H~@k[25;39H[50;149H   [25;38H[46m([6C)[m[50;163H4-38[25;38H[?25h[?25l[50;149H~@k[25;38H[50;149H   [25;37H ([6C)[50;163H3-37[25;37H[?25h[?25l[50;149H~@k[25;37H[50;149H   [25;36H[50;163H2-36[25;36H[?25h[?25l[50;149H~@k[25;36H[50;149H   [25;35H[50;163H1-35[25;35H[?25h[?25l[50;149H~@k[25;35H[50;149H   [25;34H[50;163H0-34[25;34H[?25h[?25l[50;149H~@k[25;34H[50;149H   [25;33H[50;162H19-33[25;33H[?25h[?25l[50;149H~@k[25;33H[50;149H   [25;32H[50;163H8-32[25;32H[?25h[?25l[50;149H~@k[25;32H[50;149H   [25;31H[50;163H7-31[25;31H[?25h[?25l[50;149H~@k[25;31H[50;149H   [25;30H[46m([15C)[m[50;163H6-30[25;30H[?25h[?25l[50;149H~@k[25;30H[50;149H   [25;29H ([15C)[50;163H5-29[25;29H[?25h[?25l[50;149H~@k[25;29H[50;149H   [25;28H[50;163H4-28[25;28H[?25h[?25l[50;149H~@k[25;28H[50;149H   [25;27H[50;163H3-27[25;27H[?25h[?25l[50;149H~@k[25;27H[50;149H   [25;26H[50;163H2-26[25;26H[?25h[?25l[50;149H~@k[25;26H[50;149H   [25;25H[50;163H1-25[25;25H[?25h[?25l[50;149H~@k[25;25H[50;149H   [25;24H[50;163H0-24[25;24H[?25h[?25l[50;149H~@k[25;24H[50;149H   [25;23H[46m([23C)[m[50;162H9-23 [25;23H[?25h[?25l[50;149H~@k[25;23H[50;149H   [24;17H[25;23H([23C)[50;160H4,3-17[24;17H[?25h[?25l[50;149H~@k[24;17H[50;149H   [25;23H[46m([23C)[m[50;160H5,9-23[25;23H[?25h[?25l[50;149Hi[25;23H[50;149H [25;23H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H25,9-23[7CTop[25;23H[?25h[?25l[46ms[m([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls[3C)[25;23Hs[46m([m[22C)[46m)[m[50;162H10-24[25;24H[?25h[?25l[46mu[m([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls[3C)[25;24Hu[46m([m[22C)[46m)[m[50;163H1-25[25;25H[?25h[?25l[46mm[m([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls[3C)[25;25Hm[46m([m[22C)[46m)[m[50;163H2-26[25;26H[?25h[?25l([1m[96m[46m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)[25;51H[K[25;25H[46m([m[1m[96m+[m [21C[46m)[m)[50;163H1-25[25;25H[?25h[?25l([1m[96m[46m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)[25;50H[K[25;24H[46m([m[1m[96m+[m [21C[46m)[m)[50;163H0-24[25;24H[?25h[?25l([1m[96m[46m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)[25;49H[K[25;23H[46m([m[1m[96m+[m [21C[46m)[m)[50;162H9-23 [25;23H[?25h[?25l[1C([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls[3C)[25;23H([46m([m[22C)[46m)[m[50;162H10-24[25;24H[?25h[?25l[46m [m([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls[3C)[25;24H [46m([m[22C)[46m)[m[50;163H1-25[25;25H[?25h[?25l([1m[96m[46m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)[25;50H[K[25;24H[46m([m[1m[96m+[m [21C[46m)[m)[50;163H0-24[25;24H[?25h[?25l[50;162H34-48[25;48H[?25h[?25l[25;24H([6C[46m([15C)[m)[50;163H3-47[25;47H[?25h[?25l[25;24H[46m([m[6C([15C)[46m)[m[50;163H4-48[25;48H[?25h[?25l[25;23H[46m([m([23C)[46m)[m[50;163H5-49[25;49H[?25h[?25l[25;23H([46m([23C)[m)[50;163H4-48[25;48H[?25h[?25l[25;24H([6C[46m([15C)[m)[50;163H3-47[25;47H[?25h[?25l[25;31H([7C[46m([6C)[m)[50;163H2-46[25;46H[?25h[?25l[25;39H([6C)[50;163H1-45[25;45H[?25h[?25l[50;163H0-44[25;44H[?25h[?25l[50;162H29-43[25;43H[?25h[?25l[50;163H8-42[25;42H[?25h[?25l[50;163H7-41[25;41H[?25h[?25l[46m([6C)[m[50;163H6-40[25;40H[?25h[?25l[50;163H5-39[25;39H[?25h[?25l([6C)[50;163H4-38[25;38H[?25h[?25l[50;163H3-37[25;37H[?25h[?25l[50;163H2-36[25;36H[?25h[?25l[50;163H1-35[25;35H[?25h[?25l[50;163H0-34[25;34H[?25h[?25l[50;162H19-33[25;33H[?25h[?25l[46m([15C)[m[50;163H8-32[25;32H[?25h[?25l[50;163H7-31[25;31H[?25h[?25l([15C)[50;163H6-30[25;30H[?25h[?25l[50;163H5-29[25;29H[?25h[?25l[50;163H4-28[25;28H[?25h[?25l[50;163H3-27[25;27H[?25h[?25l[50;163H2-26[25;26H[?25h[?25l[46m([23C)[m[50;163H1-25[25;25H[?25h[?25l[50;163H0-24[25;24H[?25h[?25l[46m([m([23C)[46m)[m[50;162H9-23 [25;23H[?25h[?25l[46mi[m(([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls[3C)[25;23Hi[46m([m[24C)[46m)[m[50;162H10-24[25;24H[?25h[?25l([1C[1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)[25;50H[K[25;23H[46m([m([24C[46m)[m[50;162H9-23 [25;23H[?25h[?25l[1C[1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)[25;49H[K[25;22H[46m([m([24C[46m)[m[50;162H8-22[25;22H[?25h[?25l([46m([23C)[m)[50;162H9-23[25;23H[?25h[?25l[50;162H10-24[25;24H[?25h[?25l [1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls[3C)[25;23H([23C)[50;163H1-25[25;25H[?25h[?25l[1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)[25;49H[K[25;23H[46m([23C)[m[50;163H0-24[25;24H[?25h[?25la+ sum ([1m[96mlength[m ([1m[96mcar[m ls[3C)[25;23H([23C)[50;163H1-25[25;25H[?25h[?25lc+ sum ([1m[96mlength[m ([1m[96mcar[m ls))))[50;163H2-26[25;26H[?25h[?25lc+ sum ([1m[96mlength[m ([1m[96mcar[m ls))))[50;163H3-27[25;27H[?25h[?25l [1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))))[50;163H4-28[25;28H[?25h[?25l[50;163H5-29[25;29H[?25h[?25l[50;163H4-28[25;28H[?25h[?25l([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))))[25;28H[46m([23C)[m[50;163H5-29[25;29H[?25h[?25l([23C)[50;163H6-30[25;30H[?25h[?25l[50;163H7-31[25;31H[?25h[?25l[50;163H8-32[25;32H[?25h[?25l[50;163H9-33[25;33H[?25h[?25l[50;162H20-34[25;34H[?25h[?25l [46m([15C)[m[50;163H1-35[25;35H[?25h[?25l[50;163H2-36[25;36H[?25h[?25l([15C)[50;163H3-37[25;37H[?25h[?25l[50;163H4-38[25;38H[?25h[?25l[50;163H5-39[25;39H[?25h[?25l[50;163H6-40[25;40H[?25h[?25l[50;163H7-41[25;41H[?25h[?25l[50;163H8-42[25;42H[?25h[?25l [46m([6C)[m[50;163H9-43[25;43H[?25h[?25l[50;162H30-44[25;44H[?25h[?25l([6C)[50;163H1-45[25;45H[?25h[?25l[50;163H2-46[25;46H[?25h[?25l[50;163H3-47[25;47H[?25h[?25l[50;163H4-48[25;48H[?25h[?25l[50;163H5-49[25;49H[?25h[?25l[46m([6C)[m[50;163H6-50[25;50H[?25h[?25l[25;35H[46m([m[7C([6C)[46m)[m[50;163H7-51[25;51H[?25h[?25l[25;28H[46m([m[6C([15C)[46m)[m[50;163H8-52[25;52H[?25h[?25l[2C)[25;23H[46m([macc ([23C)[46m)[m[50;163H9-53[25;53H[?25h[?25l[25;22H[46m([m([29C)[46m)[m[50;162H40-54[25;54H[?25h[?25l[21;11H[46m([m[25;22H([31C)[26;47H[46m)[m[50;160H6,34-48[26;48H[?25h[?25l[50;163H3-47[26;47H[?25h[?25l[21;11H([46m[[26;46H][m)[50;163H2-46[26;46H[?25h[?25l[21;12H[[22;14H[46m([26;45H)[m][50;163H1-45[26;45H[?25h[?25l[22;14H([23;15H[46m([26;44H)[m)[50;163H0-44[26;44H[?25h[?25l[23;15H([25;17H[46m([26;43H)[m)[50;162H29-43[26;43H[?25h[?25l[25;17H([26;19H[46m([22C)[m)[50;163H8-42[26;42H[?25h[?25l[26;19H([46m([20C)[m)[50;163H7-41[26;41H[?25h[?25l[26;20H([12C[46m([6C)[m)[50;163H6-40[26;40H[?25h[?25l[26;33H([6C)[50;163H5-39[26;39H[?25h[?25l[50;163H4-38[26;38H[?25h[?25l[50;163H3-37[26;37H[?25h[?25l[50;163H2-36[26;36H[?25h[?25l[50;163H1-35[26;35H[?25h[?25l[46m([6C)[m[50;163H0-34[26;34H[?25h[?25l[50;162H19-33[26;33H[?25h[?25l([6C)[50;163H8-32[26;32H[?25h[?25l ([1m[96mcdr[m ls))))))])[26;47H[K[50;163H7-31[26;31H[?25h[?25l ([1m[96mcdr[m ls))))))])[26;46H[K[50;163H6-30[26;30H[?25h[?25l ([1m[96mcdr[m ls))))))])[26;45H[K[50;163H5-29[26;29H[?25h[?25la ([1m[96mcdr[m ls))))))])[50;163H6-30[26;30H[?25h[?25lc ([1m[96mcdr[m ls))))))])[50;163H7-31[26;31H[?25h[?25lc ([1m[96mcdr[m ls))))))])[50;163H8-32[26;32H[?25h[?25l [46m([6C)[m[50;163H9-33[26;33H[?25h[?25l[50;162H20-34[26;34H[?25h[?25l([6C)[50;163H1-35[26;35H[?25h[?25l[50;163H2-36[26;36H[?25h[?25l[50;163H3-37[26;37H[?25h[?25l[50;163H4-38[26;38H[?25h[?25l[50;163H5-39[26;39H[?25h[?25l[46m([6C)[m[50;163H6-40[26;40H[?25h[?25l[26;20H[46m([m[12C([6C)[46m)[m[50;163H7-41[26;41H[?25h[?25l[26;19H[46m([m([20C)[46m)[m[50;163H8-42[26;42H[?25h[?25l[25;17H[46m([m[26;19H([22C)[46m)[m[50;163H9-43[26;43H[?25h[?25l[23;15H[46m([m[25;17H([26;43H)[46m)[m[50;162H30-44[26;44H[?25h[?25l[22;14H[46m([m[23;15H([26;44H)[46m)[m[50;163H1-45[26;45H[?25h[?25l[21;12H[46m[[m[22;14H([26;45H)[46m][m[50;163H2-46[26;46H[?25h[?25l[21;11H[46m([m[[26;46H][46m)[m[50;163H3-47[26;47H[?25h[50;1H[K[26;46H[?25l[50;149H^[[26;46H[50;149H  [26;47H[21;11H([46m[[26;46H][m)[50;159H26,32-46      Top[26;46H[?25h[?25l[50;149H:[26;46H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 95L, 2777B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...:
   '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 95L, 2777B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([106m[[maux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17H[31m0[m[25;17H([38;5;130mlet[m ((acc ([36m+[m sum ([36mlength[m ([36mcar[m ls)))))[26;19H((aux-sum acc ([36mcdr[m ls))))))[106m][m)
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:[m[50;159H26,32-46      Top[26;46H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([46m[[maux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17H[95m0[m[25;17H([93mlet[m ((acc ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))))[26;19H((aux-sum acc ([1m[96mcdr[m ls))))))[46m][m)
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:[m[50;159H26,32-46      Top"lab5-sol.scm" 95L, 2777B[26;46H[?25h[?25l[21;12H[[26;46H][50;160H2,13-20[22;20H[?25h[?25l[50;160H1,19   [21;19H[?25h[?25l[50;160H5,6-20[25;20H[?25h[?25l[8C[46m([23C)[m[50;162H38-52[25;52H[?25h[?25l[50;149H~@k[25;52H[50;149H   [25;53H[25;23H[46m([macc ([23C)[46m)[m[50;163H9-53[25;53H[?25h[?25l[50;149H~@k[25;53H[50;149H   [25;54H[25;22H[46m([m([29C)[46m)[m[50;162H40-54[25;54H[?25h[?25l[50;149H~@k[25;54H[50;149H   [25;53H[25;22H([46m([29C)[m)[50;162H39-53[25;53H[?25h[?25l[50;149H~@k[25;53H[50;149H   [25;52H[25;23H(acc [46m([23C)[m)[50;163H8-52[25;52H[?25h[?25l[50;149H~@k[25;52H[50;149H   [25;51H[25;28H([6C[46m([15C)[m)[50;163H7-51[25;51H[?25h[?25l[50;149H~@k[25;51H[50;149H   [25;50H[25;35H([7C[46m([6C)[m)[50;163H6-50[25;50H[?25h[?25l[50;149H~@k[25;50H[50;149H   [26;47H[21;11H[46m([m[25;43H([6C)[26;47H[46m)[m[50;160H6,33-47[26;47H[?25h[?25l[50;149H~@k[26;47H[50;149H   [26;46H[21;11H([46m[[26;46H][m)[50;163H2-46[26;46H[?25h[?25l[50;149H~@k[26;46H[50;149H   [26;45H[21;12H[[22;14H[46m([26;45H)[m][50;163H1-45[26;45H[?25h[?25l[50;149H~@k[26;45H[50;149H   [26;44H[22;14H([23;15H[46m([26;44H)[m)[50;163H0-44[26;44H[?25h[?25l[50;149H~@k[26;44H[50;149H   [26;43H[23;15H([25;17H[46m([26;43H)[m)[50;162H29-43[26;43H[?25h[?25l[50;149H~@k[26;43H[50;149H   [26;42H[25;17H([26;19H[46m([22C)[m)[50;163H8-42[26;42H[?25h[?25l[50;149H~@k[26;42H[50;149H   [26;41H[26;19H([46m([20C)[m)[50;163H7-41[26;41H[?25h[?25l[50;149H~@k[26;41H[50;149H   [26;40H[26;20H([12C[46m([6C)[m)[50;163H6-40[26;40H[?25h[?25l[50;149H~@k[26;40H[50;149H   [26;39H([6C)[50;163H5-39[26;39H[?25h[?25l[50;149H~@k[26;39H[50;149H   [26;38H[50;163H4-38[26;38H[?25h[?25l[50;149H~@k[26;38H[50;149H   [26;37H[50;163H3-37[26;37H[?25h[?25l[50;149H~@k[26;37H[50;149H   [26;36H[50;163H2-36[26;36H[?25h[?25l[50;149H~@k[26;36H[50;149H   [26;35H[50;163H1-35[26;35H[?25h[?25l[50;149H~@k[26;35H[50;149H   [26;34H[50;163H0-34[26;34H[?25h[?25l[50;149H~@k[26;34H[50;149H   [26;33H[46m([6C)[m[50;162H19-33[26;33H[?25h[?25l[50;149H~@k[26;33H[50;149H   [26;32H ([6C)[50;163H8-32[26;32H[?25h[?25l[50;149H~@k[26;32H[50;149H   [26;31H[50;163H7-31[26;31H[?25h[?25l[50;149H~@k[26;31H[50;149H   [26;30H[50;163H6-30[26;30H[?25h[?25l[50;149H~@k[26;30H[50;149H   [26;29H[50;163H5-29[26;29H[?25h[?25l[50;149H~@k[26;29H[50;149H   [25;29H[50;160H5[25;29H[?25h[?25l[50;149H~@k[25;29H[50;149H   [26;29H[50;160H6[26;29H[?25h[?25l[50;149H~@k[26;29H[50;149H   [26;28H[50;163H4-28[26;28H[?25h[?25l[50;149H~@k[26;28H[50;149H   [26;27H[50;163H3-27[26;27H[?25h[?25l[50;149H~@k[26;27H[50;149H   [26;26H[50;163H2-26[26;26H[?25h[?25l[50;149H~@k[26;26H[50;149H   [26;25H[50;163H1-25[26;25H[?25h[?25l[50;149H~@k[26;25H[50;149H   [26;24H[50;163H0-24[26;24H[?25h[?25l[50;149H~@k[26;24H[50;149H   [26;23H[50;162H9-23 [26;23H[?25h[?25l[50;149H~@k[26;23H[50;149H   [26;22H[50;162H8-22[26;22H[?25h[?25l[50;149H~@k[26;22H[50;149H   [27;22H[20;1H[46m([27;22H)[m[50;160H7,22  [27;22H[?25h[?25l[50;149H~@k[27;22H[50;149H   [27;21H[20;1H(
  [46m([27;21H)[m)[50;163H1[27;21H[?25h[?25l[50;149H~@k[27;21H[50;149H   [27;20H[21;3H([27;5H[46m([14C)[m)[50;163H0[27;20H[?25h[?25l[50;149H~@k[27;20H[50;149H   [27;19H    ([8C[46m([4C)[m)[50;162H19[27;19H[?25h[?25l[50;149H~@k[27;19H[50;149H   [26;19H[46m([22C)[m[27;14H([4C)[50;160H6,5-19[26;19H[?25h[?25l[50;149H~@k[26;19H[50;149H   [25;19H[26;19H([22C)[50;160H5[25;19H[?25h[?25l[50;149H~@k[25;19H[50;149H   [24;17H[50;160H4,3-17[24;17H[?25h[?25l[50;149H~@k[24;17H[50;149H   [23;19H[46m([8C)[m[50;160H3,12-19[23;19H[?25h[?25l[50;149H~@k[23;19H[50;149H   [22;19H[23;19H([8C)[50;160H2[22;19H[?25h[?25l[50;149H~@k[22;19H[50;149H   [22;20H[50;163H3-20[22;20H[?25h[?25l[50;149H~@k[22;20H[50;149H   [22;21H[50;163H4-21[22;21H[?25h[?25l[50;149H~@k[22;21H[50;149H   [22;22H[46m([msum ls[46m)[m[50;163H5-22[22;22H[?25h[?25l[50;149H~@k[22;22H[50;149H   [22;23H(sum ls)[50;163H6-23[22;23H[?25h[?25l[50;149H~@k[22;23H[50;149H   [23;23H[50;160H3[23;23H[?25h[?25l[50;149H~@k[23;23H[50;149H   [24;17H[50;160H4,3-17 [24;17H[?25h[?25l[50;149H~@k[24;17H[50;149H   [25;23H[46m([29C)[m[50;160H5,9-23[25;23H[?25h[?25l[50;149H~@k[25;23H[50;149H   [25;24H([29C)[50;162H10-24[25;24H[?25h[?25l[50;149H~@k[25;24H[50;149H   [25;23H[46m([29C)[m[50;162H9-23 [25;23H[?25h[?25l[50;149H~@k[25;23H[50;149H   [25;22H[46m([m([29C)[46m)[m[50;162H8-22[25;22H[?25h[?25l[50;149H~@k[25;22H[50;149H   [25;23H([46m([29C)[m)[50;162H9-23[25;23H[?25h[?25l[50;149H~@k[25;23H[50;149H   [25;24H([29C)[50;162H10-24[25;24H[?25h[?25l[50;149H~@k[25;24H[50;149H   [25;25H[50;163H1-25[25;25H[?25h[?25l[50;149H~@k[25;25H[50;149H   [25;26H[50;163H2-26[25;26H[?25h[?25l[50;149H~@k[25;26H[50;149H   [25;27H[50;163H3-27[25;27H[?25h[?25l[50;149H~@k[25;27H[50;149H   [25;28H[46m([23C)[m[50;163H4-28[25;28H[?25h[?25l[50;149H~@k[25;28H[50;149H   [25;29H([23C)[50;163H5-29[25;29H[?25h[?25l[50;149H~@k[25;29H[50;149H   [25;30H[50;163H6-30[25;30H[?25h[?25l[50;149H~@k[25;30H[50;149H   [26;30H[50;160H6[26;30H[?25h[?25l[50;149H~@k[26;30H[50;149H   [26;31H[50;163H7-31[26;31H[?25h[?25l[50;149H~@k[26;31H[50;149H   [26;32H[50;163H8-32[26;32H[?25h[?25l[50;149H~@k[26;32H[50;149H   [26;33H[46m([6C)[m[50;163H9-33[26;33H[?25h[?25l[50;149H~@k[26;33H[50;149H   [26;34H([6C)[50;162H20-34[26;34H[?25h[?25l[50;149H~@k[26;34H[50;149H   [26;35H[50;163H1-35[26;35H[?25h[?25l[50;149H~@k[26;35H[50;149H   [26;36H[50;163H2-36[26;36H[?25h[?25l[50;149H~@k[26;36H[50;149H   [26;37H[50;163H3-37[26;37H[?25h[?25l[20;1H[46m([27;22H)[m[50;160H7,22   [27;22H[?25h[?25l[20;1H([26;33H[46m([6C)[m[27;22H)[50;160H6,19-33[26;33H[?25h[?25l[50;149Hi[26;33H[50;149H [26;33H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H26,19-33      Top[26;33H[?25h[?25l[46ma[m([1m[96mcdr[m l[46ms[m))))))])[26;33Ha[46m([m[5Cs[46m)[m[50;162H20-34[26;34H[?25h[?25l[46mc[m([1m[96mcdr[m l[46ms[m))))))])[26;34Hc[46m([m[5Cs[46m)[m[50;163H1-35[26;35H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[5C])[26;49H[K[26;34H[46m([m[1m[96mcdr[m ls[46m)[m)[50;163H0-34[26;34H[?25h[?25l[46mu[m([1m[96mcdr[m l[46ms[m))))))])[26;34Hu[46m([m[5Cs[46m)[m[50;163H1-35[26;35H[?25h[?25l[46mx[m([1m[96mcdr[m l[46ms[m))))))])[26;35Hx[46m([m[5Cs[46m)[m[50;163H2-36[26;36H[?25h[?25l[46m-[m([1m[96mcdr[m l[46ms[m))))))])[26;36H-[46m([m[5Cs[46m)[m[50;163H3-37[26;37H[?25h[?25l[46ms[m([1m[96mcdr[m l[46ms[m))))))])[26;37Hs[46m([m[5Cs[46m)[m[50;163H4-38[26;38H[?25h[?25l[46mu[m([1m[96mcdr[m l[46ms[m))))))])[26;38Hu[46m([m[5Cs[46m)[m[50;163H5-39[26;39H[?25h[?25l[46mm[m([1m[96mcdr[m l[46ms[m))))))])[26;39Hm[46m([m[5Cs[46m)[m[50;163H6-40[26;40H[?25h[?25l[23;15H[46m([m[26;40H([6C))))[46m)[m[50;162H37-51[26;51H[?25h[50;1H[K[26;50H[?25l[50;149H^[[26;50H[50;149H  [26;51H[23;15H([25;17H[46m([26;50H)[m)[50;159H26,36-50      Top[26;50H[?25h[?25l[50;149H:[26;50H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 95L, 2784B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...:
   '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 95L, 2784B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17H[31m0[m[25;17H[106m([m[38;5;130mlet[m ((acc ([36m+[m sum ([36mlength[m ([36mcar[m ls)))))[26;19H((aux-sum acc aux-sum([36mcdr[m ls)))[106m)[m))])
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:[m[50;159H26,36-50      Top[26;50H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17H[95m0[m[25;17H[46m([m[93mlet[m ((acc ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))))[26;19H((aux-sum acc aux-sum([1m[96mcdr[m ls)))[46m)[m))])
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:[m[50;159H26,36-50      Top"lab5-sol.scm" 95L, 2784B[26;50H[?25h[?25l[25;17H([26;50H)[50;162H27-41[26;41H[?25h[?25l[50;149Hi[26;41H[50;149H [26;41H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H26,27-41      Top[26;41H[?25h[?25l[46m([6C)[m[50;163H6-40[26;40H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[5C])[26;54H[K[26;39H[46m([m[1m[96mcdr[m ls[46m)[m)[50;163H5-39[26;39H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[5C])[26;53H[K[26;38H[46m([m[1m[96mcdr[m ls[46m)[m)[50;163H4-38[26;38H[?25h[?25l[50;163H5-39[26;39H[?25h[?25l[46mc[mdr ls)[5C])[26;52H[K[26;38Hcdr ls))[50;163H4-38[26;38H[?25h[?25lcdr ls))))))])[26;51H[K[50;163H3-37[26;37H[?25h[?25lcdr ls))))))])[26;50H[K[50;163H2-36[26;36H[?25h[?25lcdr ls))))))])[26;49H[K[50;163H1-35[26;35H[?25h[?25lcdr ls))))))])[26;48H[K[50;163H0-34[26;34H[?25h[?25l[1m[96mcdr[m ls))))))])[26;47H[K[50;162H19-33[26;33H[?25h[?25lcdr ls))))))])[26;46H[K[50;163H8-32[26;32H[?25h[?25ldr ls))))))])[26;45H[K[50;163H7-31[26;31H[?25h[?25l [1m[96mcdr[m ls))))))])[50;163H8-32[26;32H[?25h[?25lcdr ls))))))])[26;45H[K[50;163H7-31[26;31H[?25h[?25lccdr ls))))))])[50;163H8-32[26;32H[?25h[?25l [1m[96mcdr[m ls))))))])[50;163H9-33[26;33H[?25h[?25l[50;162H20-34[26;34H[?25h[?25l[50;163H1-35[26;35H[?25h[?25l[50;163H2-36[26;36H[?25h[?25l[50;163H3-37[26;37H[?25h[?25l[50;163H4-38[26;38H[?25h[?25l[26;20H[46m([18C)[m[50;163H5-39[26;39H[?25h[?25l[26;19H[46m([m([18C)[46m)[m[50;163H6-40[26;40H[?25h[?25l[25;17H[46m([m[26;19H([20C)[46m)[m[50;163H7-41[26;41H[?25h[?25l[23;15H[46m([m[25;17H([26;41H)[46m)[m[50;163H8-42[26;42H[?25h[?25l[22;14H[46m([m[23;15H([26;42H)[46m)[m[50;163H9-43[26;43H[?25h[?25l[21;11H[46m([m[22;14H([26;43H)[46m)[m[50;162H30-44[26;44H[?25h[?25l[21;11H([22;14H[46m([26;43H)[m)[50;162H29-43[26;43H[?25h[?25l[21;11H[46m([m[22;14H([26;43H)[46m)[m[50;162H30-44[26;44H[?25h[?25l[21;11H([22;14H[46m([26;43H)[m)[50;162H29-43[26;43H[?25h[?25l[22;14H([23;15H[46m([26;42H)[m)[50;163H8-42[26;42H[?25h[?25l[23;15H([25;17H[46m([26;41H)[m)[50;163H7-41[26;41H[?25h[?25l[25;17H([26;19H[46m([20C)[m)[50;163H6-40[26;40H[?25h[?25l[26;19H([46m([18C)[m)[50;163H5-39[26;39H[?25h[?25l[26;20H([18C)[50;163H4-38[26;38H[?25h[?25l[50;163H3-37[26;37H[?25h[?25l[50;163H2-36[26;36H[?25h[?25l[50;163H1-35[26;35H[?25h[?25l[50;163H0-34[26;34H[?25h[?25l[50;162H19-33[26;33H[?25h[?25l([1m[96mcdr[m ls))))))])[26;33H[46m([6C)[m[50;162H20-34[26;34H[?25h[?25l([6C)[50;163H1-35[26;35H[?25h[?25l[50;163H2-36[26;36H[?25h[?25l[50;163H3-37[26;37H[?25h[?25l[50;163H4-38[26;38H[?25h[?25l[50;163H5-39[26;39H[?25h[?25l[46m([6C)[m[50;163H6-40[26;40H[?25h[?25l[26;20H[46m([m[12C([6C)[46m)[m[50;163H7-41[26;41H[?25h[?25l[26;19H[46m([m([20C)[46m)[m[50;163H8-42[26;42H[?25h[?25l[26;19H([46m([20C)[m)[50;163H7-41[26;41H[?25h[?25l[26;20H([12C[46m([6C)[m)[50;163H6-40[26;40H[?25h[?25l[26;20H[46m([m[12C([6C)[46m)[m[50;163H7-41[26;41H[?25h[?25l[26;19H[46m([m([20C)[46m)[m[50;163H8-42[26;42H[?25h[?25l[25;17H[46m([m[26;19H([22C)[46m)[m[50;163H9-43[26;43H[?25h[?25l[25;17H([25C[46m([6C)[m[26;43H)[50;160H5[25;43H[?25h[?25l([6C)[50;163H8-42[25;42H[?25h[?25l [46m([6C)[m[50;163H9-43[25;43H[?25h[?25l[50;162H30-44[25;44H[?25h[?25l([6C)[50;163H1-45[25;45H[?25h[?25l[50;163H2-46[25;46H[?25h[?25l[50;163H3-47[25;47H[?25h[?25l[21;11H[46m([26;47H)[m[50;160H6[26;47H[?25h[?25l[21;11H([46m[[26;46H][m)[50;163H2-46[26;46H[?25h[?25l[21;12H[[22;14H[46m([26;45H)[m][50;163H1-45[26;45H[?25h[?25l[22;14H([23;15H[46m([26;44H)[m)[50;163H0-44[26;44H[?25h[?25l[23;15H([25;17H[46m([26;43H)[m)[50;162H29-43[26;43H[?25h[?25l[25;17H([26;19H[46m([22C)[m)[50;163H8-42[26;42H[?25h[?25l[26;19H([46m([20C)[m)[50;163H7-41[26;41H[?25h[?25l[26;20H([12C[46m([6C)[m)[50;163H6-40[26;40H[?25h[?25l[26;20H[46m([m[12C([6C)[46m)[m[50;163H7-41[26;41H[?25h[?25l[26;19H[46m([m([20C)[46m)[m[50;163H8-42[26;42H[?25h[?25l[25;17H[46m([m[26;19H([22C)[46m)[m[50;163H9-43[26;43H[?25h[?25l[23;15H[46m([m[25;17H([26;43H)[46m)[m[50;162H30-44[26;44H[?25h[?25l[22;14H[46m([m[23;15H([26;44H)[46m)[m[50;163H1-45[26;45H[?25h[?25l[21;12H[46m[[m[22;14H([26;45H)[46m][m[50;163H2-46[26;46H[?25h[?25l[21;11H[46m([m[[26;46H][46m)[m[50;163H3-47[26;47H[?25h[?25l[20;1H[46m([m[21;11H([26;47H)[27;22H[46m)[m[50;160H7,23   [27;23H[?25h[?25l[50;163H2[27;22H[?25h[?25l[20;1H(
  [46m([27;21H)[m)[50;163H1[27;21H[?25h[?25l[21;3H([27;5H[46m([14C)[m)[50;163H0[27;20H[?25h[?25l    ([8C[46m([4C)[m)[50;162H19[27;19H[?25h[?25l    [46m([m[8C([4C)[46m)[m[50;162H20[27;20H[?25h[?25l[21;3H[46m([m[27;5H([14C)[46m)[m[50;163H1[27;21H[?25h[?25l[20;1H[46m([m
  ([27;21H)[46m)[m[50;163H2[27;22H[?25h[?25l[20;1H(
  [46m([27;21H)[m)[50;163H1[27;21H[?25h[?25l[21;3H([22;14H[46m([26;45H)[m[27;21H)[50;160H2,7-14[22;14H[?25h[?25l[21;11H[46m([m[22;14H([26;45H)][46m)[m[50;160H1,11  [21;11H[?25h[?25l([26;47H)
    [46m([14C)[m[50;160H7,20[27;20H[?25h[?25l[20;1H[46m([m[27;5H([14C))[46m)[m[50;163H2[27;22H[?25h[?25l[20;1H([27;22H)[50;160H4,4-18[24;18H[?25h[?25l[50;160H3,20-27[23;27H[?25h[?25l[25;35H[46m([15C)[m[50;160H5,21-35[25;35H[?25h[?25l([1m[96m[46ml[m[1m[96mength[m ([1m[96mcar[m ls)[25;54H[K[25;34H[46m([m[1m[96mlength[m [8C[46m)[m)[50;163H0-34[25;34H[?25h[?25l([1m[96m[46ml[m[1m[96mength[m ([1m[96mcar[m ls)[25;53H[K[25;33H[46m([m[1m[96mlength[m [8C[46m)[m)[50;162H19-33[25;33H[?25h[?25l([1m[96m[46ml[m[1m[96mength[m ([1m[96mcar[m ls)[25;52H[K[25;32H[46m([m[1m[96mlength[m [8C[46m)[m)[50;163H8-32[25;32H[?25h[?25l([1m[96m[46ml[m[1m[96mength[m ([1m[96mcar[m ls)[25;51H[K[25;31H[46m([m[1m[96mlength[m [8C[46m)[m)[50;163H7-31[25;31H[?25h[?25l([1m[96m[46ml[m[1m[96mength[m ([1m[96mcar[m ls)[25;50H[K[25;30H[46m([m[1m[96mlength[m [8C[46m)[m)[50;163H6-30[25;30H[?25h[?25l([1m[96m[46ml[m[1m[96mength[m ([1m[96mcar[m ls)[25;49H[K[25;29H[46m([m[1m[96mlength[m [8C[46m)[m)[50;163H5-29[25;29H[?25h[?25l[1m[96m[46m+[m([1m[96mlength[m ([1m[96mcar[m ls[4C)[25;29H[1m[96m+[m[46m([m[14C)[46m)[m[50;163H6-30[25;30H[?25h[?25l[46m [m([1m[96mlength[m ([1m[96mcar[m ls[4C)[25;30H [46m([m[14C)[46m)[m[50;163H7-31[25;31H[?25h[?25l[46ms[m([1m[96mlength[m ([1m[96mcar[m ls[4C)[25;31Hs[46m([m[14C)[46m)[m[50;163H8-32[25;32H[?25h[?25l[46mu[m([1m[96mlength[m ([1m[96mcar[m ls[4C)[25;32Hu[46m([m[14C)[46m)[m[50;163H9-33[25;33H[?25h[?25l[46mm[m([1m[96mlength[m ([1m[96mcar[m ls[4C)[25;33Hm[46m([m[14C)[46m)[m[50;162H20-34[25;34H[?25h[?25l[46m [m([1m[96mlength[m ([1m[96mcar[m ls[4C)[25;34H [46m([m[14C)[46m)[m[50;163H1-35[25;35H[?25h[?25l[50;163H2-36[25;36H[?25h[?25l([15C)[50;163H3-37[25;37H[?25h[?25l[50;163H4-38[25;38H[?25h[?25l[50;163H5-39[25;39H[?25h[?25l[50;163H6-40[25;40H[?25h[?25l[50;163H7-41[25;41H[?25h[?25l[50;163H8-42[25;42H[?25h[?25l [46m([6C)[m[50;163H9-43[25;43H[?25h[?25l[50;162H30-44[25;44H[?25h[?25l([6C)[50;163H1-45[25;45H[?25h[?25l[50;163H2-46[25;46H[?25h[?25l[50;163H3-47[25;47H[?25h[?25l[50;163H4-48[25;48H[?25h[?25l[50;163H5-49[25;49H[?25h[?25l[46m([6C)[m[50;163H6-50[25;50H[?25h[?25l[25;35H[46m([m[7C([6C)[46m)[m[50;163H7-51[25;51H[?25h[?25l[25;28H[46m([m[6C([15C)[46m)[m[50;163H8-52[25;52H[?25h[?25l[25;23H[46m([macc ([23C)[46m)[m[50;163H9-53[25;53H[?25h[?25l[25;22H[46m([m([29C)[46m)[m[50;162H40-54[25;54H[?25h[?25l[50;163H1-55[25;55H[?25h[?25l[50;163H0-54[25;54H[?25h[?25l[25;22H([46m([29C)[m)[50;162H39-53[25;53H[?25h[?25l[25;23H(acc [46m([23C)[m)[50;163H8-52[25;52H[?25h[?25l[25;23H[46m([macc ([23C)[46m)[m[50;163H9-53[25;53H[?25h[?25l[25;22H[46m([m([29C)[46m)[m[50;162H40-54[25;54H[?25h[?25l[25;22H([31C)[50;162H7-21 [25;21H[?25h[50;1H[K[25;20H[?25l[50;149H^[[25;20H[50;149H  [25;21H[50;159H25,6-20[7CTop[25;20H[?25h[?25l[50;149H:[25;20H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 95L, 2777B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...:
   '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 95L, 2777B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17H[31m0[m[25;17H([38;5;130mlet[m ((acc ([36m+[m sum ([36mlength[m ([36mcar[m ls)))))[26;19H((aux-sum acc ([36mcdr[m ls))))))])
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:[m[50;159H25,6-20[7CTop[25;20H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17H[95m0[m[25;17H([93mlet[m ((acc ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))))[26;19H((aux-sum acc ([1m[96mcdr[m ls))))))])
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:[m[50;159H25,6-20[7CTop"lab5-sol.scm" 95L, 2777B[25;20H[?25h[?25l[50;160H6,17-31[26;31H[?25h[?25l[50;149Hi[26;31H[50;149H [26;31H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H26,17-31      Top[26;31H[?25h[?25l[50;163H8-32[26;32H[?25h[?25l ([1m[96mcdr[m ls))))))])[26;47H[K[50;163H7-31[26;31H[?25h[?25l ([1m[96mcdr[m ls))))))])[26;46H[K[50;163H6-30[26;30H[?25h[?25l ([1m[96mcdr[m ls))))))])[26;45H[K[50;163H5-29[26;29H[?25h[?25l( ([1m[96mcdr[m ls))))))])[26;29H[46m([9C)[m[50;163H6-30[26;30H[?25h[?25l[1m[96m+[m ([1m[96mcdr[m ls[5C)])[26;29H([9C)[50;163H7-31[26;31H[?25h[?25l  ([1m[96mcdr[m ls))))))])[50;163H8-32[26;32H[?25h[?25ls ([1m[96mcdr[m ls))))))])[50;163H9-33[26;33H[?25h[?25lu ([1m[96mcdr[m ls))))))])[50;162H20-34[26;34H[?25h[?25lm ([1m[96mcdr[m ls))))))])[50;163H1-35[26;35H[?25h[?25l  ([1m[96mcdr[m ls))))))])[50;163H2-36[26;36H[?25h[?25l[50;4H[1m(insert)- VISUAL --[m[50;159H[K[50;149H2[25;36H[50;159H25,22-36      Top[25;36H[48;5;242m([?25h[?25l[m[50;149H3[25;37H[1m[96m[48;5;242ml[m[1m[96mength[m [50;163H3-37[25;37H[?25h[?25l[50;149H4[25;38H[1m[96m[48;5;242me[m[1m[96mngth[m [50;163H4-38[25;38H[?25h[?25l[50;149H5[25;39H[1m[96m[48;5;242mn[m[1m[96mgth[m [50;163H5-39[25;39H[?25h[?25l[50;149H6[25;40H[1m[96m[48;5;242mg[m[1m[96mth[m [50;163H6-40[25;40H[?25h[?25l[50;149H7[25;41H[1m[96m[48;5;242mt[m[1m[96mh[m [50;163H7-41[25;41H[?25h[?25l[50;149H8[25;42H[1m[96m[48;5;242mh[m [50;163H8-42[25;42H[?25h[?25l[50;149H9[25;43H[48;5;242m [m[46m([6C)[m[50;163H9-43[25;43H[?25h[?25l[50;149H10[25;44H[48;5;242m([m[6C)[50;162H30-44[25;44H[?25h[?25l[50;149H  [25;43H[46m([6C)[m[50;162H29-43[25;43H[?25h[?25l[50;149H9[25;43H[?25h[?25l[50;149H [26;37H[50;4H[1mINSERTt --[m[50;13H[K[50;159H26,23-37      Top[50;4H[1m(insert)- VISUAL --[m[50;159H[K[50;159H26,22-36      Top[50;149H^O[26;36H[50;149H2 [26;36H[25;35H([1m[96mlength[m ([6C)[26;37H[48;5;242m([?25h[?25l[m[50;149H~@k[26;36H[50;149H3  [26;35H [48;5;242m [m[50;163H1-35[26;35H[?25h[?25l[50;149H [26;37H[50;4H[1mINSERTt --[m[50;13H[K[50;159H26,23-37      Top[26;36H ([46m([6C)[26;37H[?25h[?25l[m([6C)[50;163H1-35[26;35H[?25h[?25l[50;163H0-34[26;34H[?25h[?25l[50;162H19-33[26;33H[?25h[?25l[50;163H8-32[26;32H[?25h[?25l(sum  ([1m[96mcdr[m ls))))))])[26;32H[46m([13C)[m[50;163H9-33[26;33H[?25h[?25l+sum  ([1m[96mcdr[m ls[5C)])[26;32H([13C)[50;162H20-34[26;34H[?25h[?25lsum  ([1m[96mcdr[m ls))))))])[26;53H[K[26;32H[46m([13C)[m[50;162H19-33[26;33H[?25h[?25l[46ms[mum  ([1m[96mcdr[m ls)[5C])[26;52H[K[26;32Hs[13C)[50;163H8-32[26;32H[?25h[?25l[50;163H9-33[26;33H[?25h[?25l[50;162H20-34[26;34H[?25h[?25l[50;163H1-35[26;35H[?25h[?25l   ([1m[96mcdr[m ls))))))])[50;163H2-36[26;36H[?25h[?25l(  ([1m[96mcdr[m ls))))))])[26;36H[46m([10C)[m[50;163H3-37[26;37H[?25h[?25l)  ([1m[96mcdr[m ls[5C)])[26;37H[46m)[m[9C)[50;163H4-38[26;38H[?25h[?25l[50;163H3-37[26;37H[?25h[?25l[46ml[m)  ([1m[96mcdr[m ls))))))])[26;37Hl[46m)[m[50;163H4-38[26;38H[?25h[?25l[46me[m)  ([1m[96mcdr[m ls))))))])[26;38He[46m)[m[50;163H5-39[26;39H[?25h[?25l[46mn[m)  ([1m[96mcdr[m ls))))))])[26;39Hn[46m)[m[50;163H6-40[26;40H[?25h[?25l[46mg[m)  ([1m[96mcdr[m ls))))))])[26;40Hg[46m)[m[50;163H7-41[26;41H[?25h[?25l[46mt[m)  ([1m[96mcdr[m ls))))))])[26;41Ht[46m)[m[50;163H8-42[26;42H[?25h[?25l[1m[96mlengt[m[1m[96m[46mh[m)  ([1m[96mcdr[m ls))))))])[26;42H[1m[96mh[m[46m)[m[50;163H9-43[26;43H[?25h[?25l[46m [m)  ([1m[96mcdr[m ls))))))])[26;43H [46m)[m[50;162H30-44[26;44H[?25h[?25l[46m([m)  ([1m[96mcdr[m ls))))))])[26;36H([8C[46m)[m[50;163H1-45[26;45H[?25h[?25l[46mc[m)  ([1m[96mcdr[m ls))))))])[26;45Hc[46m)[m[50;163H2-46[26;46H[?25h[?25l[46ma[m)  ([1m[96mcdr[m ls))))))])[26;46Ha[46m)[m[50;163H3-47[26;47H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m)  ([1m[96mcdr[m ls))))))])[26;47H[1m[96mr[m[46m)[m[50;163H4-48[26;48H[?25h[?25l[46m [m)  ([1m[96mcdr[m ls))))))])[26;48H [46m)[m[50;163H5-49[26;49H[?25h[?25l[46ms[m)  ([1m[96mcdr[m ls))))))])[26;49Hs[46m)[m[50;163H6-50[26;50H[?25h[?25l)[46m [m ([1m[96mcdr[m ls))))))])[26;67H[K[26;49H[46m)[m [50;163H5-49[26;49H[?25h[?25l[46ml[m)  ([1m[96mcdr[m ls))))))])[26;49Hl[46m)[m[50;163H6-50[26;50H[?25h[?25l[46ms[m)  ([1m[96mcdr[m ls))))))])[26;50Hs[46m)[m[50;163H7-51[26;51H[?25h[?25l[46m([m)  ([1m[96mcdr[m ls))))))])[26;44H([7C[46m)[m[50;163H8-52[26;52H[?25h[?25l[46m) [m ([1m[96mcdr[m ls))))))])[26;69H[K[26;44H[46m([m[7C [50;163H7-51[26;51H[?25h[?25l[1C)  ([1m[96mcdr[m ls))))))])[26;36H[46m([m[7C([6C)[46m)[m[50;163H8-52[26;52H[?25h[?25l[1C)  ([1m[96mcdr[m ls))))))])[26;29H[46m([m[6C([15C)[46m)[m[50;163H9-53[26;53H[?25h[?25l[50;162H40-54[26;54H[?25h[?25l[26;29H([23C)[50;163H1-55[26;55H[?25h[?25l [46m([6C)[m[50;163H2-56[26;56H[?25h[?25l([1m[96m[46mc[m[1m[96mdr[m ls)[5C])[26;70H[K[26;55H[46m([m[1m[96mcdr[m ls[46m)[m)[50;163H1-55[26;55H[?25h[?25l[50;163H2-56[26;56H[?25h[?25l([6C)[50;163H3-57[26;57H[?25h[?25l[50;163H4-58[26;58H[?25h[?25l[50;163H5-59[26;59H[?25h[?25l[50;163H6-60[26;60H[?25h[?25l[50;163H7-61[26;61H[?25h[?25l[46m([6C)[m[50;163H8-62[26;62H[?25h[?25l[26;20H[46m([m[34C([6C)[46m)[m[50;163H9-63[26;63H[?25h[?25l[26;19H[46m([m([42C)[46m)[m[50;162H50-64[26;64H[?25h[?25l[25;17H[46m([m[26;19H([44C)[46m)[m[50;163H1-65[26;65H[?25h[?25l[23;15H[46m([m[25;17H([26;65H)[46m)[m[50;163H2-66[26;66H[?25h[?25l[22;14H[46m([m[23;15H([26;66H)[46m)[m[50;163H3-67[26;67H[?25h[?25l[22;14H([25;17H[46m([26;65H)[m))[50;160H5,3-17 [25;17H[?25h[?25l[96m[46m;[m[96m(let ((acc (+ sum (length (car ls)))))[25;17H;[m[96m[46m([m[50;162H4-18[25;18H[?25h[?25l[96m[46m;[m[96m(let ((acc (+ sum (length (car ls)))))[25;18H;[m[96m[46m([m[50;162H5-19[25;19H[?25h[?25l[96m([m[26;19H[46m([44C)[m)[50;160H6[26;19H[?25h[?25l([1Caux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls)[5C])[26;69H[K[26;18H[46m([m([43C[46m)[m)[50;162H4-18[26;18H[?25h[?25l([1Caux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls)[5C])[26;68H[K[26;17H[46m([m([43C[46m)[m)[50;162H3-17[26;17H[?25h[?25l([9C[46m([23C)[m[10C)[50;162H14-28[26;28H[?25h[?25l[23;15H[46m([m[26;27H([23C)[11C[46m)[m[50;162H49-63[26;63H[?25h[?25l[21;3H[46m([m[23;15H([26;63H)))][46m)[m[50;162H53-67[26;67H[?25h[?25l)[26;67H[K[26;66H[46m)[m[50;163H2-66[26;66H[?25h[?25l[21;3H([7C[46m([26;65H)[m)[50;163H1-65[26;65H[?25h[?25l[21;11H([22;14H[46m([26;64H)[m)[50;163H0-64[26;64H[?25h[?25l[21;11H[46m([m[22;14H([26;64H)[46m)[m[50;163H1-65[26;65H[?25h[?25l[46m][m))][46m)[m[50;163H2-66[26;66H[?25h[?25l[21;11H([46m[[26;65H][m)[50;163H1-65[26;65H[?25h[?25l[21;11H[46m([m[[26;65H][46m)[m[50;163H2-66[26;66H[?25h[?25l[21;3H[46m([m[7C([26;66H)[46m)[m[50;163H3-67[26;67H[?25h[?25l[50;163H4-68[26;68H[?25h[?25li[21;3H([26;67H)[50;163H5-69[26;69H[?25h[?25l[26;68H[K[21;3H[46m([26;67H)[m[50;163H4-68[26;68H[?25h[?25l[26;67H[K[21;3H([7C[46m([26;66H)[m[50;163H3-67[26;67H[?25h[50;1H[K[26;66H[?25l[50;149H^[[26;66H[50;149H  [26;67H[50;159H26,52-66      Top[26;66H[?25h[?25l[50;149H:[26;66H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 95L, 2798B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...:
   '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 95L, 2798B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m [106m([m[aux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17H[31m0[m[25;17H[34m;;(let ((acc (+ sum (length (car ls)))))[m[26;17H((aux-sum ([36m+[m sum ([36mlength[m ([36mcar[m ls))) ([36mcdr[m ls)))))][106m)[m
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:[m[50;159H26,52-66      Top[26;66H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m [46m([m[aux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17H[95m0[m[25;17H[96m;;(let ((acc (+ sum (length (car ls)))))[m[26;17H((aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls)))))][46m)[m
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:[m[50;159H26,52-66      Top"lab5-sol.scm" 95L, 2798B[26;66H[?25h[?25l[50;149H~@k[26;66H[50;149H   [26;65H[21;11H([46m[[26;65H][m)[50;163H1-65[26;65H[?25h[?25l[50;149H~@k[26;65H[50;149H   [26;64H[21;12H[[22;14H[46m([26;64H)[m][50;163H0-64[26;64H[?25h[?25l[50;149H~@k[26;64H[50;149H   [26;63H[22;14H([23;15H[46m([26;63H)[m)[50;162H49-63[26;63H[?25h[?25l[50;149H~@k[26;63H[50;149H   [26;62H[23;15H([26;17H[46m([44C)[m)[50;163H8-62[26;62H[?25h[?25l[50;149H~@k[26;62H[50;149H   [26;61H[26;17H([46m([42C)[m)[50;163H7-61[26;61H[?25h[?25l[50;149H~@k[26;61H[50;149H   [26;60H[26;18H([34C[46m([6C)[m)[50;163H6-60[26;60H[?25h[?25l[50;149H~@k[26;60H[50;149H   [26;59H([6C)[50;163H5-59[26;59H[?25h[?25l[50;149H~@k[26;59H[50;149H   [26;58H[50;163H4-58[26;58H[?25h[?25l[50;149H~@k[26;58H[50;149H   [26;57H[50;163H3-57[26;57H[?25h[?25l[50;149H~@k[26;57H[50;149H   [26;56H[50;163H2-56[26;56H[?25h[?25l[50;149H~@k[26;56H[50;149H   [26;57H[50;163H3-57[26;57H[?25h[?25l[50;149H~@k[26;57H[50;149H   [26;58H[50;163H4-58[26;58H[?25h[?25l[50;149H~@k[26;58H[50;149H   [26;59H[50;163H5-59[26;59H[?25h[?25l[50;149H~@k[26;59H[50;149H   [26;60H[26;53H[46m([6C)[m[50;163H6-60[26;60H[?25h[?25l[50;149H~@k[26;60H[50;149H   [26;61H[26;18H[46m([m[34C([6C)[46m)[m[50;163H7-61[26;61H[?25h[?25l[50;149H~@k[26;61H[50;149H   [26;62H[26;17H[46m([m([42C)[46m)[m[50;163H8-62[26;62H[?25h[?25l[50;149H~@k[26;62H[50;149H   [26;63H[23;15H[46m([m[26;17H([44C)[46m)[m[50;163H9-63[26;63H[?25h[?25l[50;149H~@k[26;63H[50;149H   [26;64H[22;14H[46m([m[23;15H([26;63H)[46m)[m[50;162H50-64[26;64H[?25h[?25l[50;149H~@k[26;64H[50;149H   [26;65H[21;12H[46m[[m[22;14H([26;64H)[46m][m[50;163H1-65[26;65H[?25h[?25l[50;149H~@k[26;65H[50;149H   [26;66H[21;11H[46m([m[[26;65H][46m)[m[50;163H2-66[26;66H[?25h[?25l[50;149H~@k[26;66H[50;149H   [26;65H[21;11H([46m[[26;65H][m)[50;163H1-65[26;65H[?25h[?25l[50;149H~@k[26;65H[50;149H   [26;64H[21;12H[[22;14H[46m([26;64H)[m][50;163H0-64[26;64H[?25h[?25l[50;149H~@k[26;64H[50;149H   [26;63H[22;14H([23;15H[46m([26;63H)[m)[50;162H49-63[26;63H[?25h[?25l[50;149H~@k[26;63H[50;149H   [26;62H[23;15H([26;17H[46m([44C)[m)[50;163H8-62[26;62H[?25h[?25l[50;149H~@k[26;62H[50;149H   [26;61H[26;17H([46m([42C)[m)[50;163H7-61[26;61H[?25h[?25l[50;149H~@k[26;61H[50;149H   [26;60H[26;18H([34C[46m([6C)[m)[50;163H6-60[26;60H[?25h[?25l[50;149H~@k[26;60H[50;149H   [26;59H([6C)[50;163H5-59[26;59H[?25h[?25l[50;149H~@k[26;59H[50;149H   [26;58H[50;163H4-58[26;58H[?25h[?25l[50;149H~@k[26;58H[50;149H   [26;57H[50;163H3-57[26;57H[?25h[?25l[50;149H~@k[26;57H[50;149H   [26;56H[50;163H2-56[26;56H[?25h[?25l[50;149H~@k[26;56H[50;149H   [26;55H[50;163H1-55[26;55H[?25h[?25l[50;149H~@k[26;55H[50;149H   [26;54H[50;163H0-54[26;54H[?25h[?25l[50;149H~@k[26;54H[50;149H   [26;53H[46m([6C)[m[50;162H39-53[26;53H[?25h[?25l[50;149H~@k[26;53H[50;149H   [26;52H ([6C)[50;163H8-52[26;52H[?25h[?25l[50;149Hi[26;52H[50;149H [26;52H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H26,38-52      Top[26;52H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;66H[K[26;34H[46m([15C)[m[50;163H7-51[26;51H[?25h[?25l[46m [m([1m[96mcdr[m ls)))))])[26;65H[K[26;34H([7C[46m([6C)[m [50;163H6-50[26;50H[?25h[?25l[46m [m([1m[96mcdr[m ls)))))])[26;64H[K[26;42H([6C [50;163H5-49[26;49H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;63H[K[50;163H4-48[26;48H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;62H[K[50;163H3-47[26;47H[?25h[?25l([1m[96mcdr[m ls)))))])[26;61H[K[50;163H2-46[26;46H[?25h[?25lca ([1m[96mcdr[m ls)))))])[26;60H[K[50;163H1-45[26;45H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;59H[K[50;163H0-44[26;44H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;58H[K[26;42H[46m([9C)[m[50;162H29-43[26;43H[?25h[?25l[46m [m([1m[96mcdr[m ls)[4C])[26;57H[K[26;42H [9C)[50;163H8-42[26;42H[?25h[?25l([1m[96mcdr[m ls)))))])[26;56H[K[50;163H7-41[26;41H[?25h[?25llengt ([1m[96mcdr[m ls)))))])[26;55H[K[50;163H6-40[26;40H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;54H[K[50;163H5-39[26;39H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;53H[K[50;163H4-38[26;38H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;52H[K[50;163H3-37[26;37H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;51H[K[50;163H2-36[26;36H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;50H[K[26;34H[46m([9C)[m[50;163H1-35[26;35H[?25h[?25l[46m [m([1m[96mcdr[m ls)[4C])[26;49H[K[26;34H [9C)[50;163H0-34[26;34H[?25h[?25l([1m[96mcdr[m ls)))))])[26;48H[K[50;162H19-33[26;33H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;47H[K[50;163H8-32[26;32H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;46H[K[50;163H7-31[26;31H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;45H[K[50;163H6-30[26;30H[?25h[?25l([1m[96mcdr[m ls)))))])[26;44H[K[50;163H5-29[26;29H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;43H[K[26;27H[46m([9C)[m[50;163H4-28[26;28H[?25h[?25l[46m [m([1m[96mcdr[m ls)[4C])[26;42H[K[26;27H [9C)[50;163H3-27[26;27H[?25h[?25la ([1m[96mcdr[m ls)))))])[50;163H4-28[26;28H[?25h[?25lc ([1m[96mcdr[m ls)))))])[50;163H5-29[26;29H[?25h[?25lc ([1m[96mcdr[m ls)))))])[50;163H6-30[26;30H[?25h[?25l [46m([6C)[m[50;163H7-31[26;31H[?25h[?25l[50;163H8-32[26;32H[?25h[?25l([6C)[50;163H9-33[26;33H[?25h[?25l[50;162H20-34[26;34H[?25h[?25l[50;163H1-35[26;35H[?25h[?25l[50;163H2-36[26;36H[?25h[?25l[50;163H3-37[26;37H[?25h[?25l[46m([6C)[m[50;163H4-38[26;38H[?25h[?25l[26;17H[46m([m[13C([6C))[46m)[m[50;163H6-40[26;40H[?25h[?25l[23;15H[46m([m[26;17H([22C)[46m)[m[50;163H7-41[26;41H[?25h[?25l[22;14H[46m([m[23;15H([26;41H)[46m)[m[50;163H8-42[26;42H[?25h[?25l[21;12H[46m[[m[22;14H([26;42H)[46m][m[50;163H9-43[26;43H[?25h[?25l[21;11H[46m([m[[26;43H][46m)[m[50;162H30-44[26;44H[?25h[?25l[50;163H1-45[26;45H[?25h[?25l[50;163H0-44[26;44H[?25h[?25l)[26;44H[K[26;43H[46m)[m[50;162H29-43[26;43H[?25h[?25l[21;11H([26;43H)[50;160H5[25;43H[?25h[?25l[50;163H8-42[25;42H[?25h[?25l[50;163H7-41[25;41H[?25h[?25l[50;163H6-40[25;40H[?25h[?25l[50;163H5-39[25;39H[?25h[?25l[96m[46m([15C)[m[50;163H4-38[25;38H[?25h[?25l[50;163H3-37[25;37H[?25h[?25l[96m([15C)[m[50;163H2-36[25;36H[?25h[?25l[50;163H1-35[25;35H[?25h[?25l[50;163H0-34[25;34H[?25h[?25l[50;162H19-33[25;33H[?25h[?25l[50;163H8-32[25;32H[?25h[?25l[96m[46m([23C)[m[50;163H7-31[25;31H[?25h[?25l[50;163H6-30[25;30H[?25h[?25l[96m([23C)[m[50;163H5-29[25;29H[?25h[?25l[50;163H4-28[25;28H[?25h[?25l[50;163H3-27[25;27H[?25h[?25l[96m[46m([29C)[m[50;163H2-26[25;26H[?25h[?25l[50;163H1-25[25;25H[?25h[?25l[96m[46m([m[96m([29C)[m[96m[46m)[m[50;163H0-24[25;24H[?25h[?25l[96m([31C)[m[50;162H9-23 [25;23H[?25h[?25l[50;162H8-22[25;22H[?25h[?25l[50;162H7-21[25;21H[?25h[?25l[96m[46m([m[26;41H[46m)[m[50;162H6-20[25;20H[?25h[?25l[50;162H5-19[25;19H[?25h[?25l[96m([m[96m[46ml[m[96met ((acc (+ sum (length (car ls)[m[25;56H[K[25;18H[96m[46m([m[96ml[m[50;162H4-18[25;18H[?25h[?25l([93m[46ml[m[93met[m ((acc ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))))[25;55H[K[25;17H[46m([m[93ml[m[50;162H3-17[25;17H[?25h[?25l([26;17H[46m([22C)[m)[50;160H6[26;17H[?25h[?25l[26;9H([46m([maux-sum acc ([1m[96mcdr[m ls)))[46m)[m))[26;36H[K[26;9H[46m([m([21C[46m)[m)[50;162H2-9 [26;9H[?25h[?25l([46m([maux-sum acc ([1m[96mcdr[m ls)))[46m)[m))[26;28H[K[26;1H[46m([m([21C[46m)[m)[50;162H1  [26;1H[?25h[?25l[25;49r[49;1H
[1;50r[25;1H                ([93mlet[m ((acc ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))))((aux-sum acc ([1m[96mcdr[m ls))))))
[46m [m[49;1H[96m;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H25,41-55      Top[25;55H[46m([22C)[m
 [25;55H[?25h[?25l[25;22H[46m([31C)[m([22C)[50;163H0-54[25;54H[?25h[?25l[25;22H([31C)[46m([22C)[m[50;163H1-55[25;55H[?25h[?25l[26;49r[26;1H[L[1;50r[25;55H[K[26;19H((aux-sum acc ([1m[96mcdr[m ls))))))[50;159H[K[50;159H26,5-19[7CTop[26;19H[46m([22C)[26;19H[?25h[?25l[m([46m([20C)[m)[50;162H6-20[26;20H[?25h[?25l[50;162H7-21[26;21H[?25h[?25l([20C)[50;162H8-22[26;22H[?25h[?25l[50;162H9-23[26;23H[?25h[?25l[50;162H10-24[26;24H[?25h[?25l[50;163H1-25[26;25H[?25h[?25l[50;163H2-26[26;26H[?25h[?25l[50;163H3-27[26;27H[?25h[?25l[50;163H4-28[26;28H[?25h[?25l[50;163H5-29[26;29H[?25h[?25l[50;163H6-30[26;30H[?25h[?25l[50;163H7-31[26;31H[?25h[?25l[50;163H8-32[26;32H[?25h[?25l [46m([6C)[m[50;163H9-33[26;33H[?25h[?25l[50;162H20-34[26;34H[?25h[?25l([6C)[50;163H1-35[26;35H[?25h[?25l[50;163H2-36[26;36H[?25h[?25l[50;163H3-37[26;37H[?25h[?25l[50;163H4-38[26;38H[?25h[?25l[50;163H5-39[26;39H[?25h[?25l[46m([6C)[m[50;163H6-40[26;40H[?25h[?25l[26;20H[46m([m[12C([6C)[46m)[m[50;163H7-41[26;41H[?25h[?25l[26;19H[46m([m([20C)[46m)[m[50;163H8-42[26;42H[?25h[?25l[25;17H[46m([m[26;19H([22C)[46m)[m[50;163H9-43[26;43H[?25h[?25l[23;15H[46m([m[25;17H([26;43H)[46m)[m[50;162H30-44[26;44H[?25h[?25l[22;14H[46m([m[23;15H([26;44H)[46m)[m[50;163H1-45[26;45H[?25h[?25l[46m][m)][46m)[m[50;163H2-46[26;46H[?25h[?25l[21;12H[46m[[m[22;14H([26;45H[46m][m)[50;163H1-45[26;45H[?25h[?25l[21;12H[[22;14H[46m([m[26;45H][46m)[m[50;163H2-46[26;46H[?25h[?25l[21;12H[46m[[m[22;14H([26;45H[46m][m)[50;163H1-45[26;45H[?25h[?25l[21;12H[[22;14H[46m([m[26;45H][46m)[m[50;163H2-46[26;46H[?25h[?25l)[26;46H[K[26;45H[46m)[m[50;163H1-45[26;45H[?25h[?25l[50;163H2-46[26;46H[?25h[?25l][21;12H[46m[[m[22;14H([26;45H)[46m][m[50;163H3-47[26;47H[?25h[?25l)[21;11H[46m([m[[26;46H][46m)[m[50;163H4-48[26;48H[?25h[?25l[20;1H[46m([m[21;11H([26;47H)[27;22H[46m)[m[50;160H7,23   [27;23H[?25h[?25l[50;163H2[27;22H[?25h[?25l[20;1H(
  [46m([27;21H)[m)[50;163H1[27;21H[?25h[?25l[21;3H([27;5H[46m([14C)[m)[50;163H0[27;20H[?25h[?25l[21;3H[46m([m[27;5H([14C)[46m)[m[50;163H1[27;21H[?25h[?25l[20;1H[46m([m
  ([27;21H)[46m)[m[50;163H2[27;22H[?25h[?25l[20;1H([27;22H)[50;160H6,8-22[26;22H[?25h[?25l[25;22H[46m([31C)[m[50;160H5[25;22H[?25h[?25l([31C)[50;160H4,4-18[24;18H[?25h[50;1H[K[24;17H[?25l[50;149H^[[24;17H[50;149H  [24;18H[50;159H24,3-17[7CTop[24;17H[?25h[?25l[21;11H[46m([26;47H)[m[50;160H6,33-47[26;47H[?25h[?25l[20;1H[46m([m[21;11H([26;47H)[27;22H[46m)[m[50;160H7,22   [27;22H[?25h[?25l[20;1H([22;14H[46m([26;45H)[m[27;22H)[50;160H6,31-45[26;45H[?25h[?25l[22;14H([26;33H[46m([6C)[m)))))[50;162H19-33[26;33H[?25h[?25l[23;15H[46m([m[26;33H([6C))))[46m)[m[50;162H30-44[26;44H[?25h[?25l[23;15H([26;44H)[50;160H2,21-28[22;28H[?25h[?25l[50;149H:[22;28H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 95L, 2777B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 95L, 2777B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17H[31m0[m[25;17H([38;5;130mlet[m ((acc ([36m+[m sum ([36mlength[m ([36mcar[m ls)))))[26;19H((aux-sum acc ([36mcdr[m ls))))))])
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:[m[50;159H22,21-28      Top[22;28H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17H[95m0[m[25;17H([93mlet[m ((acc ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))))[26;19H((aux-sum acc ([1m[96mcdr[m ls))))))])
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:[m[50;159H22,21-28      Top"lab5-sol.scm" 95L, 2777B[22;28H[?25h[?25l[50;160H3,18-25[23;25H[?25h[?25l[50;160H6,22-36[26;36H[?25h[?25l[50;149H~@k[26;36H[50;149H   [26;35H[50;163H1-35[26;35H[?25h[?25l[50;149H~@k[26;35H[50;149H   [26;34H[50;163H0-34[26;34H[?25h[?25l[50;149H~@k[26;34H[50;149H   [26;33H[46m([6C)[m[50;162H19-33[26;33H[?25h[?25l[21;12H[46m[[m[26;33H([6C))))))[46m][m[50;162H32-46[26;46H[?25h[?25l[21;12H[[26;20H[46m([20C)[m))))][50;162H6-20 [26;20H[?25h[?25l([20C)[50;162H18-32[26;32H[?25h[?25l[50;160H5,4-18 [25;18H[?25h[?25l[50;149H~@k[25;18H[50;149H   [25;17H[46m([26;43H)[m[50;162H3-17[25;17H[?25h[?25l[50;149H;[25;17H[50;149H [25;17H[?25h[?25l[50;149Hi[25;17H[50;149H [25;17H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H25,3-17[7CTop[25;17H[?25h[?25l[50;162H4-18[25;18H[?25h[?25l[50;162H3-17[25;17H[?25h[?25l([26;43H)[50;160H4[24;17H[?25h[?25l[50;160H3,10-17[23;17H[?25h[?25l[50;160H4,3-17 [24;17H[?25h[?25l[25;17H[46m([26;43H)[m[50;160H5[25;17H[?25h[?25l([26;43H)[50;160H4[24;17H[?25h[?25l[25;17H[46m([26;43H)[m[50;160H5[25;17H[?25h[?25l[96m[46m;[m[96m(let ((acc (+ sum (length (car ls)))))[25;17H;[m[96m[46m([m[50;162H4-18[25;18H[?25h[?25l[96m[46m;[m[96m(let ((acc (+ sum (length (car ls)))))[25;18H;[m[96m[46m([m[50;162H5-19[25;19H[?25h[?25l[96m([m[26;19H[46m([22C)[m)[50;160H6[26;19H[?25h[?25l([1Caux-sum acc ([1m[96mcdr[m ls)[5C])[26;47H[K[26;18H[46m([m([21C[46m)[m)[50;162H4-18[26;18H[?25h[?25l([1Caux-sum acc ([1m[96mcdr[m ls)[5C])[26;46H[K[26;17H[46m([m([21C[46m)[m)[50;162H3-17[26;17H[?25h[?25l([46m([20C)[m)[50;162H4-18[26;18H[?25h[?25l[50;162H5-19[26;19H[?25h[?25l([20C)[50;162H6-20[26;20H[?25h[?25l[50;162H7-21[26;21H[?25h[?25l[50;162H8-22[26;22H[?25h[?25l[50;162H9-23[26;23H[?25h[?25l[50;162H10-24[26;24H[?25h[?25l[50;163H1-25[26;25H[?25h[?25l[50;163H2-26[26;26H[?25h[?25l[50;163H3-27[26;27H[?25h[?25l[50;163H2-26[26;26H[?25h[?25l[50;163H1-25[26;25H[?25h[?25l[50;163H0-24[26;24H[?25h[?25l[50;162H9-23 [26;23H[?25h[?25l[50;162H8-22[26;22H[?25h[?25l[50;162H7-21[26;21H[?25h[?25l[50;162H6-20[26;20H[?25h[?25l[46m([20C)[m[50;162H5-19[26;19H[?25h[?25l[50;162H4-18[26;18H[?25h[?25l[50;162H5-19[26;19H[?25h[?25l([20C)[50;162H6-20[26;20H[?25h[?25l[46m([20C)[m[50;162H5-19[26;19H[?25h[?25l[50;162H4-18[26;18H[?25h[?25l[50;162H5-19[26;19H[?25h[?25l[46ma[mux-sum acc ([1m[96mcdr[m ls)[5C])[26;45H[K[26;17H[46m([ma[19C[46m)[m)[50;162H4-18[26;18H[?25h[?25l([20C)[50;162H5-19[26;19H[?25h[?25l[50;162H6-20[26;20H[?25h[?25l[50;162H7-21[26;21H[?25h[?25l[50;160H5[25;21H[?25h[?25l[50;160H6[26;21H[?25h[?25l[50;162H6-20[26;20H[?25h[?25l[25;19H[96m[46m([m[26;39H[46m)[m[50;160H5[25;20H[?25h[?25l[50;162H5-19[25;19H[?25h[?25l[96m([m[96m[46ml[m[96met ((acc (+ sum (length (car ls)[m[25;56H[K[25;18H[96m[46m([m[96ml[m[50;162H4-18[25;18H[?25h[?25l([93m[46ml[m[93met[m ((acc ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))))[25;55H[K[25;17H[46m([m[93ml[m[50;162H3-17[25;17H[?25h[?25l([26;39H)[50;160H4[24;17H[?25h[?25l[25;17H[46m([26;39H)[m[50;160H5[25;17H[?25h[?25l([26;17H[46m([20C)[m)[50;160H6[26;17H[?25h[?25l[26;9H([46ma[mux-sum acc ([1m[96mcdr[m ls))[46m)[m)))])[26;37H[K[26;9H[46m([ma[19C[46m)[m)[50;162H2-9 [26;9H[?25h[?25l([46ma[mux-sum acc ([1m[96mcdr[m ls))[46m)[m)))])[26;29H[K[26;1H[46m([ma[19C[46m)[m)[50;162H1  [26;1H[?25h[?25l[25;49r[49;1H
[1;50r[25;1H                ([93mlet[m ((acc ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))))(aux-sum acc ([1m[96mcdr[m ls))))))])
[46m [20C)[m[49;1H[96m;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H25,41-55      Top[25;55H[46m([20C)[m
 [20C)[25;55H[?25h[?25l[26;49r[26;1H[L[1;50r[25;55H[K[26;19H(aux-sum acc ([1m[96mcdr[m ls))))))])[50;159H[K[50;159H26,5-19[7CTop[26;19H[46m([20C)[26;19H[?25h[?25l[m([20C)[50;160H5[25;19H[?25h[?25l[50;162H6-20[25;20H[?25h[?25l[50;162H7-21[25;21H[?25h[?25l [46m([31C)[m[50;162H8-22[25;22H[?25h[?25l([31C)[50;160H6[26;22H[?25h[?25l[50;160H7,22  [27;22H[?25h[?25l[50;163H3[27;23H[?25h[?25l[50;160H6,9-23[26;23H[?25h[?25l[50;162H10-24[26;24H[?25h[?25l[50;163H1-25[26;25H[?25h[?25l[50;163H2-26[26;26H[?25h[?25l[50;163H3-27[26;27H[?25h[?25l[50;163H4-28[26;28H[?25h[?25l[50;163H5-29[26;29H[?25h[?25l[50;163H6-30[26;30H[?25h[?25l[50;163H7-31[26;31H[?25h[?25l [46m([6C)[m[50;163H8-32[26;32H[?25h[?25l[50;163H9-33[26;33H[?25h[?25l([6C)[50;162H20-34[26;34H[?25h[?25l[50;163H1-35[26;35H[?25h[?25l[50;163H2-36[26;36H[?25h[?25l[50;163H3-37[26;37H[?25h[?25l[50;163H4-38[26;38H[?25h[?25l[46m([6C)[m[50;163H5-39[26;39H[?25h[?25l[26;19H[46m([m[12C([6C)[46m)[m[50;163H6-40[26;40H[?25h[?25l[25;17H[46m([m[26;19H([20C)[46m)[m[50;163H7-41[26;41H[?25h[?25l[3C])[26;46H[K[25;17H([26;19H[46m([20C)[m)[50;163H6-40[26;40H[?25h[?25l[25;17H[46m([m[26;19H([20C)[46m)[m[50;163H7-41[26;41H[?25h[?25l[23;15H[46m([m[25;17H([26;41H)[46m)[m[50;163H8-42[26;42H[?25h[?25l[22;14H[46m([m[23;15H([26;42H)[46m)[m[50;163H9-43[26;43H[?25h[?25l[21;12H[46m[[m[22;14H([26;43H)[46m][m[50;162H30-44[26;44H[?25h[?25l[21;11H[46m([m[[26;44H][46m)[m[50;163H1-45[26;45H[?25h[50;1H[K[26;44H[?25l[50;149H^[[26;44H[50;149H  [26;45H[21;11H([46m[[26;44H][m)[50;159H26,30-44      Top[26;44H[?25h[?25l[50;149H:[26;44H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 95L, 2775B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...:
   '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 95L, 2775B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([106m[[maux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17H[31m0[m[25;17H([38;5;130mlet[m ((acc ([36m+[m sum ([36mlength[m ([36mcar[m ls)))))[26;19H(aux-sum acc ([36mcdr[m ls)))))[106m][m)
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:[m[50;159H26,30-44      Top[26;44H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([46m[[maux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17H[95m0[m[25;17H([93mlet[m ((acc ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))))[26;19H(aux-sum acc ([1m[96mcdr[m ls)))))[46m][m)
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:[m[50;159H26,30-44      Top"lab5-sol.scm" 95L, 2775B[26;44H[?25h[?25l[21;12H[[25;23H[46m([29C)[m[26;44H][50;160H5,9-23 [25;23H[?25h[?25l[50;149H~@k[25;23H[50;149H   [25;22H[46m([m([29C)[46m)[m[50;162H8-22[25;22H[?25h[?25l[50;149H~@k[25;22H[50;149H   [25;21H ([31C)[50;162H7-21[25;21H[?25h[?25l[50;149H~@k[25;21H[50;149H   [25;20H[50;162H6-20[25;20H[?25h[?25l[50;149H~@k[25;20H[50;149H   [25;19H[50;162H5-19[25;19H[?25h[?25l[50;149H~@k[25;19H[50;149H   [25;18H[50;162H4-18[25;18H[?25h[?25l[50;149H~@k[25;18H[50;149H   [25;17H[46m([26;41H)[m[50;162H3-17[25;17H[?25h[?25l[50;149H;[25;17H[50;149H [25;17H[?25h[?25l[50;149Hi[25;17H[50;149H [25;17H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H25,3-17[7CTop[25;17H[?25h[?25l[96m[46m;[m[96m(let ((acc (+ sum (length (car ls)))))[25;17H;[m[96m[46m([m[50;162H4-18[25;18H[?25h[?25l[96m[46m;[m[96m(let ((acc (+ sum (length (car ls)))))[25;18H;[m[96m[46m([m[50;162H5-19[25;19H[?25h[?25l[96m([m[26;19H[46m([20C)[m)[50;160H6[26;19H[?25h[?25l([46ma[mux-sum acc ([1m[96mcdr[m ls)[4C])[26;45H[K[26;18H[46m([ma[19C[46m)[m)[50;162H4-18[26;18H[?25h[?25l([46ma[mux-sum acc ([1m[96mcdr[m ls)[4C])[26;44H[K[26;17H[46m([ma[19C[46m)[m)[50;162H3-17[26;17H[?25h[?25l[50;162H4-18[26;18H[?25h[?25l([20C)[50;162H5-19[26;19H[?25h[?25l[50;162H6-20[26;20H[?25h[?25l[50;162H7-21[26;21H[?25h[?25l[50;162H8-22[26;22H[?25h[?25l[50;162H9-23[26;23H[?25h[?25l[50;162H10-24[26;24H[?25h[?25l[50;163H1-25[26;25H[?25h[?25l[50;163H2-26[26;26H[?25h[?25l[50;163H3-27[26;27H[?25h[?25l[50;163H4-28[26;28H[?25h[?25l[50;163H5-29[26;29H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;43H[K[50;163H4-28[26;28H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;42H[K[50;163H3-27[26;27H[?25h[?25l ([1m[96mcdr[m ls)))))])[26;41H[K[50;163H2-26[26;26H[?25h[?25l( ([1m[96mcdr[m ls)))))])[26;26H[46m([9C)[m[50;163H3-27[26;27H[?25h[?25l) ([1m[96mcdr[m ls[4C)])[26;27H[46m)[m[8C)[50;163H4-28[26;28H[?25h[?25l[50;163H3-27[26;27H[?25h[?25l[1m[96m[46m+[m) ([1m[96mcdr[m ls)))))])[26;27H[1m[96m+[m[46m)[m[50;163H4-28[26;28H[?25h[?25l[46m [m) ([1m[96mcdr[m ls)))))])[26;28H [46m)[m[50;163H5-29[26;29H[?25h[?25l[46ms[m) ([1m[96mcdr[m ls)))))])[26;29Hs[46m)[m[50;163H6-30[26;30H[?25h[?25l[46mu[m) ([1m[96mcdr[m ls)))))])[26;30Hu[46m)[m[50;163H7-31[26;31H[?25h[?25l[46mm[m) ([1m[96mcdr[m ls)))))])[26;31Hm[46m)[m[50;163H8-32[26;32H[?25h[?25l[46m [m) ([1m[96mcdr[m ls)))))])[26;32H [46m)[m[50;163H9-33[26;33H[?25h[?25l[46m([m) ([1m[96mcdr[m ls)))))])[26;26H([7C[46m)[m[50;162H20-34[26;34H[?25h[?25l[46ml[m) ([1m[96mcdr[m ls)))))])[26;34Hl[46m)[m[50;163H1-35[26;35H[?25h[?25l[46me[m) ([1m[96mcdr[m ls)))))])[26;35He[46m)[m[50;163H2-36[26;36H[?25h[?25l[46mn[m) ([1m[96mcdr[m ls)))))])[26;36Hn[46m)[m[50;163H3-37[26;37H[?25h[?25l[46mg[m) ([1m[96mcdr[m ls)))))])[26;37Hg[46m)[m[50;163H4-38[26;38H[?25h[?25l[46mt[m) ([1m[96mcdr[m ls)))))])[26;38Ht[46m)[m[50;163H5-39[26;39H[?25h[?25l[1m[96mlengt[m[1m[96m[46mh[m) ([1m[96mcdr[m ls)))))])[26;39H[1m[96mh[m[46m)[m[50;163H6-40[26;40H[?25h[?25l[46m [m) ([1m[96mcdr[m ls)))))])[26;40H [46m)[m[50;163H7-41[26;41H[?25h[?25l[46m([m) ([1m[96mcdr[m ls)))))])[26;33H([8C[46m)[m[50;163H8-42[26;42H[?25h[?25l[46mc[m) ([1m[96mcdr[m ls)))))])[26;42Hc[46m)[m[50;163H9-43[26;43H[?25h[?25l[46ma[m) ([1m[96mcdr[m ls)))))])[26;43Ha[46m)[m[50;162H30-44[26;44H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m) ([1m[96mcdr[m ls)))))])[26;44H[1m[96mr[m[46m)[m[50;163H1-45[26;45H[?25h[?25l[46m [m) ([1m[96mcdr[m ls)))))])[26;45H [46m)[m[50;163H2-46[26;46H[?25h[?25l[46ml[m) ([1m[96mcdr[m ls)))))])[26;46Hl[46m)[m[50;163H3-47[26;47H[?25h[?25l[46ms[m) ([1m[96mcdr[m ls)))))])[26;47Hs[46m)[m[50;163H4-48[26;48H[?25h[?25l[1C) ([1m[96mcdr[m ls)))))])[26;33H[46m([m[7C([6C)[46m)[m[50;163H5-49[26;49H[?25h[?25l[1C) ([1m[96mcdr[m ls)))))])[26;26H[46m([m[6C([15C)[46m)[m[50;163H6-50[26;50H[?25h[?25l[50;163H7-51[26;51H[?25h[?25l[25;24H[96m[46m([31C)[m[26;26H([23C)[50;160H5,43-57[25;57H[?25h[?25l[25;24H[96m([31C)[m[50;160H7,23   [27;23H[?25h[50;1H[K[27;22H[?25l[50;149H^[[27;22H[50;149H  [27;23H[50;159H27,22[9CTop[27;22H[?25h[?25l[50;149H:[27;22H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 95L, 2797B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004llab5-sol.scm:26:62: read-syntax: missing `]` to close `[` on line 21, found instead `)`
  context...:
   /usr/share/racket/collects/syntax/module-reader.rkt:190:25: loop
   /usr/share/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal
   /usr/share/racket/collects/racket/../syntax/module-reader.rkt:65:9: lang:read-syntax
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 95L, 2797B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17H[31m0[m[25;17H[34m;;(let ((acc (+ sum (length (car ls)))))[m[26;17H(aux-sum ([36m+[m sum ([36mlength[m ([36mcar[m ls))) ([36mcdr[m ls)))))])
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:[m[50;159H27,22[9CTop[27;22H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17H[95m0[m[25;17H[96m;;(let ((acc (+ sum (length (car ls)))))[m[26;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls)))))])
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:[m[50;159H27,22[9CTop"lab5-sol.scm" 95L, 2797B[27;22H[?25h[?25l[21;3H[46m([26;65H)[m[50;160H6,51-65[26;65H[?25h[?25l[50;149H~@k[26;65H[50;149H   [26;64H[21;3H([8C[46m[[26;64H][m)[50;163H0-64[26;64H[?25h[?25l[50;149H~@k[26;64H[50;149H   [26;63H[21;11H[46m([m[[26;63H[46m)[m][50;162H49-63[26;63H[?25h[?25l[50;149H~@k[26;63H[50;149H   [26;64H[21;11H([46m[[m[26;63H)[46m][m[50;162H50-64[26;64H[?25h[?25l[50;149H~@k[26;64H[50;149H   [26;63H[21;11H[46m([m[[26;63H[46m)[m][50;162H49-63[26;63H[?25h[?25l[50;149H~@k[26;63H[50;149H   [26;62H[21;11H([22;14H[46m([26;62H)[m)[50;163H8-62[26;62H[?25h[?25l[50;149H~@k[26;62H[50;149H   [26;61H[22;14H([23;15H[46m([26;61H)[m)[50;163H7-61[26;61H[?25h[?25l[50;149H~@k[26;61H[50;149H   [26;60H[23;15H([26;17H[46m([42C)[m)[50;163H6-60[26;60H[?25h[?25l[50;149H~@k[26;60H[50;149H   [26;61H[23;15H[46m([m[26;17H([42C)[46m)[m[50;163H7-61[26;61H[?25h[?25l[50;149H~@k[26;61H[50;149H   [26;62H[22;14H[46m([m[23;15H([26;61H)[46m)[m[50;163H8-62[26;62H[?25h[?25l[50;149H~@k[26;62H[50;149H   [26;63H[21;11H[46m([m[22;14H([26;62H)[46m)[m[50;163H9-63[26;63H[?25h[?25l[50;149H~@k[26;63H[50;149H   [26;64H[21;11H([46m[[m[26;63H)[46m][m[50;162H50-64[26;64H[?25h[?25l[50;149H~@k[26;64H[50;149H   [26;65H[21;3H[46m([m[8C[[26;64H][46m)[m[50;163H1-65[26;65H[?25h[?25l[50;149H~@k[26;65H[50;149H   [26;64H[21;3H([8C[46m[[26;64H][m)[50;163H0-64[26;64H[?25h[?25l[50;149H~@k[26;64H[50;149H   [26;63H[21;11H[46m([m[[26;63H[46m)[m][50;162H49-63[26;63H[?25h[?25l[50;149H~@k[26;63H[50;149H   [26;62H[21;11H([22;14H[46m([26;62H)[m)[50;163H8-62[26;62H[?25h[?25l[50;149H][26;62H[?25h[?25l[50;150Hi[26;62H[50;1H[97m[41mE349: No identifier under cursor[m[50;149H[K[26;62H[50;159H26,48-62      Top[26;62H[?25h[?25l[50;149Hi[26;62H[50;149H [26;62H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H26,48-62      Top[26;62H[?25h[?25l[46m][m))])][46m)[m[50;163H9-63[26;63H[?25h[?25l[21;12H[46m[[m[22;14H([26;62H[46m][m)[50;163H8-62[26;62H[?25h[?25l[21;12H[[23;15H[46m([26;61H)[m][50;163H7-61[26;61H[?25h[?25l[21;12H[46m[[m[23;15H([26;61H)[46m][m[50;163H8-62[26;62H[?25h[?25l[21;12H[[22;14H[46m([m[26;62H][46m)[m[50;163H9-63[26;63H[?25h[?25l)[1C])[26;66H[K[26;62H[46m)[m)[50;163H8-62[26;62H[?25h[?25l[21;11H[46m([m[22;14H([26;62H)[46m)[m[50;163H9-63[26;63H[?25h[?25l[46m][m)])][46m)[m[50;162H50-64[26;64H[?25h[?25l[21;11H([46m[[26;63H][m)[50;162H49-63[26;63H[?25h[?25l[21;11H[46m([m[[26;63H][46m)[m[50;162H50-64[26;64H[?25h[?25l[21;11H([26;64H)[50;163H1-65[26;65H[?25h[?25l[21;3H[46m([26;66H)[m[50;163H2-66[26;66H[?25h[?25l[50;163H3-67[26;67H[?25h[?25l[50;163H2-66[26;66H[?25h[?25l)[26;66H[K[26;65H[46m)[m[50;163H1-65[26;65H[?25h[?25l[50;163H2-66[26;66H[?25h[?25l[50;163H1-65[26;65H[?25h[?25l[21;3H([7C[46m([26;64H)[m)[50;163H0-64[26;64H[?25h[?25l[21;3H[46m([m[7C([26;64H)[46m)[m[50;163H1-65[26;65H[?25h[?25l[50;163H2-66[26;66H[?25h[?25l[26;65H[K[21;3H([7C[46m([26;64H)[m[50;163H1-65[26;65H[?25h[?25l[50;163H0-64[26;64H[?25h[50;1H[K[26;63H[?25l[50;149H^[[26;63H[50;149H  [26;64H[21;11H([46m[[26;63H][m)[50;159H26,49-63      Top[26;63H[?25h[?25l[50;149H:[26;63H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 95L, 2796B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...:
   '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 95L, 2796B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([106m[[maux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17H[31m0[m[25;17H[34m;;(let ((acc (+ sum (length (car ls)))))[m[26;17H(aux-sum ([36m+[m sum ([36mlength[m ([36mcar[m ls))) ([36mcdr[m ls))))[106m][m)
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:[m[50;159H26,49-63      Top[26;63H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([46m[[maux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17H[95m0[m[25;17H[96m;;(let ((acc (+ sum (length (car ls)))))[m[26;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))[46m][m)
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:[m[50;159H26,49-63      Top"lab5-sol.scm" 95L, 2796B[26;63H[?25h[?25l[21;12H[[25;19H[96m[46m([m[26;61H[46m)[m)][50;160H5,5-19 [25;19H[?25h[?25l[50;149Hi[25;19H[50;149H [25;19H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H25,5-19[7CTop[25;19H[?25h[?25l[96m([m[96m[46ml[m[96met ((acc (+ sum (length (car ls)[m[25;56H[K[25;18H[96m[46m([m[96ml[m[50;162H4-18[25;18H[?25h[?25l([93m[46ml[m[93met[m ((acc ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))))[25;55H[K[25;17H[46m([m[93ml[m[50;162H3-17[25;17H[?25h[?25l([26;17H[46m([42C)[m)[50;160H6[26;17H[?25h[?25l[26;9H([46ma[mux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))[46m)[m)])[26;57H[K[26;9H[46m([ma[41C[46m)[m)[50;162H2-9 [26;9H[?25h[?25l([46ma[mux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))[46m)[m)])[26;49H[K[26;1H[46m([ma[41C[46m)[m)[50;162H1  [26;1H[?25h[?25l[25;49r[49;1H
[1;50r[25;1H                ([93mlet[m ((acc ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls)))))(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])
[46m [m[49;1H[96m;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H25,41-55      Top[25;55H[46m([42C)[m
 [25;55H[?25h[?25l[26;49r[26;1H[L[1;50r[25;55H[K[26;19H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])[50;159H[K[50;159H26,5-19[7CTop[26;19H[46m([42C)[26;19H[?25h[?25l[m([42C)[50;160H5,7-21[25;21H[?25h[?25l[50;160H2,11-18[22;18H[?25h[?25l[50;160H1,20   [21;20H[?25h[?25l[50;160H2,20-27[22;27H[?25h[?25lls)[22;29H[K[50;162H19-26[22;26H[?25h[?25lls)[22;28H[K[50;163H8-25[22;25H[?25h[?25lls)[22;27H[K[50;163H7-24[22;24H[?25h[?25luls)[50;163H8-25[22;25H[?25h[?25lmls)[50;163H9-26[22;26H[?25h[?25l ls)[50;162H20-27[22;27H[?25h[?25l[26;35H[46m([15C)[m[50;160H6,21-35[26;35H[?25h[?25l[25;17H[46m([m[26;35H([15C)[11C[46m)[m[50;160H5,3-17 [25;17H[?25h[?25l([4C[46m([31C)[m[26;63H)[50;162H8-22[25;22H[?25h[?25l([31C)[50;160H4,4-18[24;18H[?25h[?25l[25;17H[46m([26;63H)[m[50;160H5,3-17[25;17H[?25h[?25l([26;63H)[50;160H4,4-18[24;18H[?25h[?25l[95mi[m[50;162H5-19[24;19H[?25h[?25l[24;18H[K[50;162H4-18[24;18H[?25h[?25l[24;17H[K[50;162H3-17[24;17H[?25h[?25ls[50;162H4-18[24;18H[?25h[?25lu[50;162H5-19[24;19H[?25h[?25lm[50;162H6-20[24;20H[?25h[?25l[50;4H[1m(insert)- VISUAL --[m[50;159H[K[50;149H2[25;18H[50;159H25,4-18[7CTop[25;18H[48;5;242m([?25h[?25l[m[50;149H4[25;20H[93m[48;5;242mle[m[50;162H6-20[25;20H[?25h[?25l[50;149H5[25;21H[93m[48;5;242mt[m[50;162H7-21[25;21H[?25h[?25l[50;149H7[25;23H[48;5;242m ([m[46m([29C)[m[50;162H9-23[25;23H[?25h[?25l[50;149H10[25;26H[48;5;242m(ac[m[27C)[50;162H12-26[25;26H[?25h[?25l[50;150H2[25;28H[48;5;242mc [m[46m([23C)[m[50;163H4-28[25;28H[?25h[?25l[50;150H3[25;29H[48;5;242m([m[23C)[50;163H5-29[25;29H[?25h[?25l[50;150H6[25;32H[1m[96m[48;5;242m+[m[48;5;242m s[m[50;163H8-32[25;32H[?25h[?25l[50;150H8[25;34H[48;5;242mum[m[50;162H20-34[25;34H[?25h[?25l[50;149H20[25;36H[48;5;242m ([m[50;163H2-36[25;36H[?25h[?25l[50;150H1[25;37H[1m[96m[48;5;242ml[m[1m[96mength[m [50;163H3-37[25;37H[?25h[?25l[50;150H2[25;38H[1m[96m[48;5;242me[m[1m[96mngth[m [50;163H4-38[25;38H[?25h[?25l[50;150H3[25;39H[1m[96m[48;5;242mn[m[1m[96mgth[m [50;163H5-39[25;39H[?25h[?25l[50;150H4[25;40H[1m[96m[48;5;242mg[m[1m[96mth[m [50;163H6-40[25;40H[?25h[?25l[50;150H5[25;41H[1m[96m[48;5;242mt[m[1m[96mh[m [50;163H7-41[25;41H[?25h[?25l[50;150H6[25;42H[1m[96m[48;5;242mh[m [50;163H8-42[25;42H[?25h[?25l[50;150H7[25;43H[48;5;242m [m[46m([6C)[m[50;163H9-43[25;43H[?25h[?25l[50;150H8[25;44H[48;5;242m([m[6C)[50;162H30-44[25;44H[?25h[?25l[50;150H9[25;45H[1m[96m[48;5;242mc[m[1m[96mar[m [50;163H1-45[25;45H[?25h[?25l[50;149H30[25;46H[1m[96m[48;5;242ma[m[1m[96mr[m [50;163H2-46[25;46H[?25h[?25l[50;150H2[25;48H[1m[96m[48;5;242mr[m[48;5;242m [m[50;163H4-48[25;48H[?25h[?25l[50;150H3[25;49H[48;5;242ml[m[50;163H5-49[25;49H[?25h[?25l[50;150H4[25;50H[48;5;242ms[m[46m)[m[50;163H6-50[25;50H[?25h[?25l[50;150H5[25;51H[48;5;242m)[m[46m)[m[50;163H7-51[25;51H[?25h[?25l[50;150H6[25;52H[48;5;242m)[m[46m)[m[50;163H8-52[25;52H[?25h[?25l[50;150H7[25;53H[48;5;242m)[m[46m)[m[50;163H9-53[25;53H[?25h[?25l[50;150H8[25;54H[48;5;242m)[m[46m)[m[50;162H40-54[25;54H[?25h[?25l[50;150H9[25;55H[48;5;242m)[m[50;163H1-55[25;55H[?25h[?25l[50;150H8[25;54H[46m)[m[50;163H0-54[25;54H[?25h[?25l[?25h[?25l[50;149Hc [25;54H[50;149H [25;17H[50;4H[1mINSERTt --[m[50;13H[K[50;159H25,3-17[7CTop[25;17H[K[25;17H[?25h[?25l[50;162H2-9 [25;9H[?25h[?25l[50;162H1  [25;1H[?25h[?25l[24;49r[49;1H
[1;50r[24;17Hsum[49;1H[96m;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H24,6-20[7CTop[24;20H[?25h[?25l[25;19H[46m([42C)[m[50;160H5[25;20H[?25h[?25l[50;162H5-19[25;19H[?25h[?25l([46ma[mux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls)[3C])[25;66H[K[25;18H[46m([ma[41C[46m)[m)[50;162H4-18[25;18H[?25h[?25l([46ma[mux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls)[3C])[25;65H[K[25;17H[46m([ma[41C[46m)[m)[50;162H3-17[25;17H[?25h[?25l[25;9H([46ma[mux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))[46m)[m)])[25;57H[K[25;9H[46m([ma[41C[46m)[m)[50;162H2-9 [25;9H[?25h[?25l([46ma[mux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))[46m)[m)])[25;49H[K[25;1H[46m([ma[41C[46m)[m)[50;162H1  [25;1H[?25h[?25l[24;49r[49;1H
[1;50r[24;1H                sum(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])
[46m [m[49;1H[96m;;the element is > v or not > v[m[50;159H[K[50;159H24,6-20[7CTop[24;20H[46m([42C)[m
 [24;20H[?25h[?25l[25;49r[25;1H[L[1;50r[24;20H[K[25;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])[50;159H[K[50;159H25,3-17[7CTop[25;17H[46m([42C)[25;17H[?25h[?25l[m([42C)[50;162H9-23[25;23H[?25h[?25l[50;162H10-24[25;24H[?25h[?25l[50;163H1-25[25;25H[?25h[?25l [46m([23C)[m[50;163H2-26[25;26H[?25h[?25l[50;163H3-27[25;27H[?25h[?25l([23C)[50;163H4-28[25;28H[?25h[?25l[50;163H5-29[25;29H[?25h[?25l[50;163H6-30[25;30H[?25h[?25l[50;163H7-31[25;31H[?25h[?25l[50;163H8-32[25;32H[?25h[?25l [46m([15C)[m[50;163H9-33[25;33H[?25h[?25l[50;162H20-34[25;34H[?25h[?25l([15C)[50;163H1-35[25;35H[?25h[?25l[50;163H2-36[25;36H[?25h[?25l[50;163H3-37[25;37H[?25h[?25l[50;163H4-38[25;38H[?25h[?25l[50;163H5-39[25;39H[?25h[?25l[50;163H6-40[25;40H[?25h[?25l [46m([6C)[m[50;163H7-41[25;41H[?25h[?25l[50;163H8-42[25;42H[?25h[?25l([6C)[50;163H9-43[25;43H[?25h[?25l[50;162H30-44[25;44H[?25h[?25l[50;163H1-45[25;45H[?25h[?25l[50;163H2-46[25;46H[?25h[?25l[50;163H3-47[25;47H[?25h[?25l[46m([6C)[m[50;163H4-48[25;48H[?25h[?25l[25;33H[46m([m[7C([6C)[46m)[m[50;163H5-49[25;49H[?25h[?25l[25;26H[46m([m[6C([15C)[46m)[m[50;163H6-50[25;50H[?25h[?25l[50;163H7-51[25;51H[?25h[?25l[25;26H([23C) [46m([6C)[m[50;163H8-52[25;52H[?25h[?25l[50;163H9-53[25;53H[?25h[?25l([6C)[50;162H40-54[25;54H[?25h[?25l[50;163H1-55[25;55H[?25h[?25l[50;163H2-56[25;56H[?25h[?25l[50;163H3-57[25;57H[?25h[?25l[50;163H4-58[25;58H[?25h[?25l[46m([6C)[m[50;163H5-59[25;59H[?25h[?25l[25;17H[46m([m[34C([6C)[46m)[m[50;163H6-60[25;60H[?25h[?25l[23;15H[46m([m[25;17H([42C)[46m)[m[50;163H7-61[25;61H[?25h[?25l[22;14H[46m([m[23;15H([25;61H)[46m)[m[50;163H8-62[25;62H[?25h[?25l[21;3H[46m([m[22;14H([25;62H)[26;21H[46m)[m[50;160H6,21   [26;21H[?25h[?25l[21;3H([7C[46m([25;64H)[m[26;21H)[50;160H5,51-65[25;65H[?25h[?25l[50;163H0-64[25;64H[?25h[?25l[21;11H([46m[[25;63H][m)[50;162H49-63[25;63H[?25h[?25l[21;11H[46m([m[[25;63H][46m)[m[50;162H50-64[25;64H[?25h[?25l[21;11H([46m[[25;63H][m)[50;162H49-63[25;63H[?25h[?25l[21;12H[[22;14H[46m([25;62H)[m][50;163H8-62[25;62H[?25h[?25l[22;14H([23;15H[46m([25;61H)[m)[50;163H7-61[25;61H[?25h[?25l[23;15H([25;17H[46m([42C)[m)[50;163H6-60[25;60H[?25h[?25l[25;17H([34C[46m([6C)[m)[50;163H5-59[25;59H[?25h[?25l[25;17H[46m([m[34C([6C)[46m)[m[50;163H6-60[25;60H[?25h[?25l[25;17H([34C[46m([6C)[m)[50;163H5-59[25;59H[?25h[?25l[25;52H([6C)[50;163H4-58[25;58H[?25h[?25l[50;163H3-57[25;57H[?25h[?25l[50;163H2-56[25;56H[?25h[?25l[50;163H1-55[25;55H[?25h[?25l[50;163H0-54[25;54H[?25h[?25l[46m([6C)[m[50;162H39-53[25;53H[?25h[?25l[50;163H8-52[25;52H[?25h[?25l[25;26H[46m([23C)[m ([6C)[50;163H7-51[25;51H[?25h[?25l[50;163H6-50[25;50H[?25h[?25l[25;26H([6C[46m([15C)[m)[50;163H5-49[25;49H[?25h[?25l[25;33H([7C[46m([6C)[m)[50;163H4-48[25;48H[?25h[?25l[25;41H([6C)[50;163H3-47[25;47H[?25h[?25l[50;163H2-46[25;46H[?25h[?25l[50;163H1-45[25;45H[?25h[?25l[50;163H0-44[25;44H[?25h[?25l[50;162H29-43[25;43H[?25h[?25l[46m([6C)[m[50;163H8-42[25;42H[?25h[?25l[50;163H7-41[25;41H[?25h[?25l([6C)[50;163H6-40[25;40H[?25h[?25l[50;163H5-39[25;39H[?25h[?25l[50;163H4-38[25;38H[?25h[?25l[50;163H3-37[25;37H[?25h[?25l[50;163H2-36[25;36H[?25h[?25l[50;163H1-35[25;35H[?25h[?25l[46m([15C)[m[50;163H0-34[25;34H[?25h[?25l[50;162H19-33[25;33H[?25h[?25l([15C)[50;163H8-32[25;32H[?25h[?25l[50;163H7-31[25;31H[?25h[?25l[50;163H6-30[25;30H[?25h[?25l[50;163H5-29[25;29H[?25h[?25l[50;163H4-28[25;28H[?25h[?25l[46m([23C)[m[50;163H3-27[25;27H[?25h[?25l[50;163H2-26[25;26H[?25h[?25l[20;1H[46m([m[25;26H([23C)[26;22H[46m)[m[50;160H6,23   [26;23H[?25h[?25l[50;163H2[26;22H[?25h[?25l[20;1H(
  [46m([26;21H)[m)[50;163H1[26;21H[?25h[?25l[21;3H([26;5H[46m([14C)[m)[50;163H0[26;20H[?25h[?25l    ([8C[46m([4C)[m)[50;162H19[26;19H[?25h[?25l([4C)[50;163H8[26;18H[?25h[?25l[50;163H7[26;17H[?25h[?25l[50;163H6[26;16H[?25h[?25l[46m([4C)[m[50;163H5[26;15H[?25h[?25l[50;163H4[26;14H[?25h[?25l([4C)[50;163H3[26;13H[?25h[?25l[50;163H2[26;12H[?25h[?25l[50;163H1[26;11H[?25h[?25l[50;163H0[26;10H[?25h[?25l[50;162H9 [26;9H[?25h[?25l[50;162H8[26;8H[?25h[?25l[50;162H7[26;7H[?25h[?25l[46m([14C)[m[50;162H6[26;6H[?25h[?25l[50;162H5[26;5H[?25h[50;1H[K[26;4H[?25l[50;149H^[[26;4H[50;149H  [26;5H([14C)[50;159H26,4[10CTop[26;4H[?25h[?25l[50;149H:[26;4H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2755B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...:
   '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 94L, 2755B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17Hsum[25;17H(aux-sum ([36m+[m sum ([36mlength[m ([36mcar[m ls))) ([36mcdr[m ls))))])
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H26,4[10CTop[26;4H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17Hsum[25;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H26,4[10CTop"lab5-sol.scm" 94L, 2755B[26;4H[?25h[?25l[50;160H2,13-20[22;20H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))[50;1H[K[50;159H22,13-20[7C6%[19;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;5H([93mif[m ([1m[96mnull?[m ls)[48;9H[38;5;224m'()[m[49;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[50;159H[K[50;159H22,13-20      13%[16;20H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(require rackunit)

[96m;;Exercise 1[m[50;159H[K[50;159H22,13-20[7C6%[19;20H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H#!/usr/bin/env racket

#lang racket[50;159H[K[50;159H22,13-20      Top[22;20H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[50;160H4,5-19 [24;19H[?25h[?25l[50;160H3,17-24[23;24H[?25h[?25l[46m([8C)[m[50;162H21-28[23;28H[?25h[?25l[23;19H([8C)[26;5H[46m([14C)[m[50;160H6,20   [26;20H[?25h[?25l    ([8C[46m([4C)[m)[50;162H14[26;14H[?25h[?25l[50;163H9[26;19H[?25h[?25l    [46m([m[8C([4C)[46m)[m[50;162H20[26;20H[?25h[?25l[21;3H[46m([m[26;5H([14C)[46m)[m[50;163H1[26;21H[?25h[?25l[20;1H[46m([m
  ([26;21H)[46m)[m[50;163H2[26;22H[?25h[?25l[20;1H([25;26H[46m([23C)[m[26;22H)[50;160H5,12-26[25;26H[?25h[?25l[50;162H36-50[25;50H[?25h[?25l[25;26H([6C[46m([15C)[m)[50;163H5-49[25;49H[?25h[?25l[50;149H:[25;49H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[50;1H[K[50;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 94L, 2755B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17Hsum[25;17H(aux-sum ([36m+[m sum [106m([m[36mlength[m ([36mcar[m ls)[106m)[m) ([36mcdr[m ls))))])
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H25,35-49      Top[25;49H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17Hsum[25;17H(aux-sum ([1m[96m+[m sum [46m([m[1m[96mlength[m ([1m[96mcar[m ls)[46m)[m) ([1m[96mcdr[m ls))))])
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H25,35-49      Top"lab5-sol.scm" 94L, 2755B[25;49H[?25h[?25l[25;33H([15C)) [46m([6C)[m[50;163H8-52[25;52H[?25h[?25l[25;26H[46m([23C)[m ([6C)[50;163H6-50[25;50H[?25h[?25l[25;26H([6C[46m([15C)[m)[50;163H5-49[25;49H[?25h[?25l[25;33H([15C)[50;162H44-58[25;58H[?25h[?25l[25;17H[46m([42C)[m[50;163H6-60[25;60H[?25h[?25l[23;15H[46m([m[25;17H([42C)[46m)[m[50;163H7-61[25;61H[?25h[?25l[21;11H[46m([m[23;15H([25;61H))][46m)[m[50;162H50-64[25;64H[?25h[?25l[21;11H([25;64H)[50;160H4,5-19 [24;19H[?25h[?25l[50;149H:[24;19H[50;1H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[50;1H[K[50;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 94L, 2755B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17Hsum[25;17H(aux-sum ([36m+[m sum ([36mlength[m ([36mcar[m ls))) ([36mcdr[m ls))))])
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H24,5-19[7CTop[24;19H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17Hsum[25;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H24,5-19[7CTop"lab5-sol.scm" 94L, 2755B[24;19H[?25h[?25l[21;3H[46m([26;21H)[m[50;160H6,21  [26;21H[?25h[?25l[20;1H[46m([m
  ([26;21H)[46m)[m[50;163H2[26;22H[?25h[?25l[20;1H([26;22H)[50;160H5,11-25[25;25H[?25h[?25l [46m([23C)[m[50;163H2-26[25;26H[?25h[?25l[23;19H[46m([8C)[m[25;26H([23C)[50;160H3,21-28[23;28H[?25h[?25l[23;19H([8C)[50;160H2,12-19[22;19H[?25h[?25l[50;160H1,19   [21;19H[?25h[?25l[22;22H[46m([msum ls[46m)[m[50;160H2,22-29[22;29H[?25h[?25l[50;149Hi[22;29H[50;149H [22;29H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H22,22-29      Top[22;29H[?25h[?25l)[22;29H[K[22;28H[46m)[m[50;163H1-28[22;28H[?25h[?25l[46mi[m)i[46m)[m[50;163H2-29[22;29H[?25h[?25l[46ms[m)s[46m)[m[50;163H3-30[22;30H[?25h[?25l[1m[96mlis[m[1m[96m[46mt[m)[1m[96mt[m[46m)[m[50;163H4-31[22;31H[?25h[?25l[22;22H([8C)[25;41H[46m([6C)[m[50;160H5,34-48[25;48H[?25h[?25l)[2C ([1m[96mcdr[m ls))))])[25;64H[K[25;47H[46m)[m)[50;163H3-47[25;47H[?25h[?25l[46mi[m))) ([1m[96mcdr[m ls))))])[25;47Hi[46m)[m[50;163H4-48[25;48H[?25h[?25l[46ms[m))) ([1m[96mcdr[m ls))))])[25;48Hs[46m)[m[50;163H5-49[25;49H[?25h[?25l[1m[96mlis[m[1m[96m[46mt[m))) ([1m[96mcdr[m ls))))])[25;49H[1m[96mt[m[46m)[m[50;163H6-50[25;50H[?25h[?25l[25;41H([8C))) [46m([6C)[m[50;162H47-61[25;61H[?25h[?25l)[3C])[25;66H[K[25;60H[46m)[m)[50;163H6-60[25;60H[?25h[?25l[46mi[m))))])[25;60Hi[46m)[m[50;163H7-61[25;61H[?25h[?25l[46ms[m))))])[25;61Hs[46m)[m[50;163H8-62[25;62H[?25h[?25l[1m[96mlis[m[1m[96m[46mt[m))))])[25;62H[1m[96mt[m[46m)[m[50;163H9-63[25;63H[?25h[?25l[20;1H[46m([m[25;54H([8C)[26;22H[46m)[m[50;160H6,23   [26;23H[?25h[?25l[20;1H([23;19H[46m([8C)[m[26;22H)[50;160H3,21-28[23;28H[?25h[?25l)[23;28H[K[23;27H[46m)[m[50;163H0-27[23;27H[?25h[?25l[46mi[m)i[46m)[m[50;163H1-28[23;28H[?25h[?25l[46ms[m)s[46m)[m[50;163H2-29[23;29H[?25h[?25l[1m[96mlis[m[1m[96m[46mt[m)[1m[96mt[m[46m)[m[50;163H3-30[23;30H[?25h[?25l[22;22H[46m([8C)[m[23;19H([10C)[50;160H2,25-32[22;32H[?25h[?25l[50;163H4-31[22;31H[?25h[?25l[22;22H([8C)[50;163H3-30[22;30H[?25h[?25l[50;163H2-29[22;29H[?25h[?25llst)[22;31H[K[50;163H1-28[22;28H[?25h[?25l[50;160H3[23;28H[?25h[?25llst)[23;30H[K[50;163H0-27[23;27H[?25h[?25l[50;160H4,6-20 [24;20H[?25h[?25l[50;160H5,34-48[25;48H[?25h[?25llst))) ([1m[96mcdr[m [1m[96mlist[m))))])[25;68H[K[50;163H3-47[25;47H[?25h[?25l[50;162H46-60[25;60H[?25h[?25llst))))])[25;67H[K[50;163H5-59[25;59H[?25h[?25l[21;12H[46m[[25;65H][m[50;162H51-65[25;65H[?25h[50;1H[K[25;64H[?25l[50;149H^[[25;64H[50;149H  [25;65H[21;12H[[22;14H[46m([25;64H)[m][50;159H25,50-64      Top[25;64H[?25h[?25l[50;149H:[25;64H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2759B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lapplication: not a procedure;
 expected a procedure that can be applied to arguments
  given: 0
  arguments...:
   '()
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 94L, 2759B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;14H[106m([m[38;5;130mlambda[m (sum lst)[23;15H([38;5;130mif[m ([36mnull?[m lst)[24;17Hsum[25;17H(aux-sum ([36m+[m sum ([36mlength[m ([36mcar[m lst))) ([36mcdr[m lst)))[106m)[m])
    (aux-sum ([31m0[m ls))))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H25,50-64      Top[25;64H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;14H[46m([m[93mlambda[m (sum lst)[23;15H([93mif[m ([1m[96mnull?[m lst)[24;17Hsum[25;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m lst))) ([1m[96mcdr[m lst)))[46m)[m])
    (aux-sum ([95m0[m ls))))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H25,50-64      Top"lab5-sol.scm" 94L, 2759B[25;64H[?25h[?25l[22;14H([25;64H)[50;160H1,19   [21;19H[?25h[?25l[23;19H[46m([9C)[m[50;160H3,22-29[23;29H[?25h[?25l[23;19H([9C)[50;160H4,5-19 [24;19H[?25h[?25l[22;22H[46m([7C)[m[50;160H2,23-30[22;30H[?25h[?25l[50;149Hi[22;30H[50;149H [22;30H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H22,23-30      Top[22;30H[?25h[?25l)[22;30H[K[22;29H[46m)[m[50;163H2-29[22;29H[?25h[?25l[22;22H(sum ls)[23;19H[46m([9C)[m[50;160H3[23;29H[?25h[?25l)[23;29H[K[23;28H[46m)[m[50;163H1-28[23;28H[?25h[?25l[23;19H([8C)[50;160H4,6-20 [24;20H[?25h[?25l[50;160H5,14-28[25;28H[?25h[?25l[13C[46m([7C)[m[50;162H35-49[25;49H[?25h[?25l)[2C ([1m[96mcdr[m lst))))])[25;66H[K[25;48H[46m)[m)[50;163H4-48[25;48H[?25h[?25l[25;41H([6C))) [46m([7C)[m[50;162H46-60[25;60H[?25h[?25l)[3C])[25;65H[K[25;59H[46m)[m)[50;163H5-59[25;59H[?25h[?25l[23;15H[46m([m[25;52H([6C))[46m)[m[50;163H7-61[25;61H[?25h[?25l[23;15H([25;17H[46m([42C)[m)[50;163H6-60[25;60H[?25h[?25l[23;15H[46m([m[25;17H([42C)[46m)[m[50;163H7-61[25;61H[?25h[?25l[22;14H[46m([m[23;15H([25;61H)[46m)[m[50;163H8-62[25;62H[?25h[?25l[22;14H([23;15H[46m([25;61H)[m)[50;163H7-61[25;61H[?25h[?25l[23;15H([25;17H[46m([42C)[m)[50;163H6-60[25;60H[?25h[?25l[23;15H[46m([m[25;17H([42C)[46m)[m[50;163H7-61[25;61H[?25h[?25l[22;14H[46m([m[23;15H([25;61H)[46m)[m[50;163H8-62[25;62H[?25h[?25l[21;12H[46m[[m[22;14H([25;62H)[46m][m[50;163H9-63[25;63H[?25h[?25l[21;11H[46m([m[[25;63H][46m)[m[50;162H50-64[25;64H[?25h[?25l[20;1H[46m([m[21;11H([25;64H)[26;22H[46m)[m[50;160H6,23   [26;23H[?25h[?25l[50;163H2[26;22H[?25h[?25l[20;1H(
  [46m([26;21H)[m)[50;163H1[26;21H[?25h[?25l[21;3H([26;5H[46m([14C)[m)[50;163H0[26;20H[?25h[?25l    ([8C[46m([4C)[m)[50;162H19[26;19H[?25h[?25l([4C)[50;163H8[26;18H[?25h[?25l[50;163H7[26;17H[?25h[?25l[50;163H6[26;16H[?25h[?25l[46m([4C)[m[50;163H5[26;15H[?25h[?25l[50;163H4[26;14H[?25h[?25l([4C)[50;163H3[26;13H[?25h[?25l[50;163H2[26;12H[?25h[?25l[50;163H1[26;11H[?25h[?25l[50;163H0[26;10H[?25h[?25l[50;162H9 [26;9H[?25h[?25l[50;162H8[26;8H[?25h[?25l[50;162H7[26;7H[?25h[?25l[46m([14C)[m[50;162H6[26;6H[?25h[?25l([14C)[50;162H7[26;7H[?25h[?25l[50;162H8[26;8H[?25h[?25l[50;162H9[26;9H[?25h[?25l[50;162H10[26;10H[?25h[?25l[50;163H1[26;11H[?25h[?25l[50;163H2[26;12H[?25h[?25l[50;163H3[26;13H[?25h[?25l [46m([4C)[m[50;163H4[26;14H[?25h[?25l[50;163H5[26;15H[?25h[?25l([4C)[50;163H6[26;16H[?25h[?25l[50;163H7[26;17H[?25h[?25l[50;163H8[26;18H[?25h[?25l[46m([4C)[m[50;163H9[26;19H[?25h[?25l    [46m([m[8C([4C)[46m)[m[50;162H20[26;20H[?25h[?25l[21;3H[46m([m[26;5H([14C)[46m)[m[50;163H1[26;21H[?25h[?25l[46mi[m))i[46m)[m[50;163H2[26;22H[?25h[?25l)[26;23H[K[26;21H[46m)[m)[50;163H1[26;21H[?25h[?25l[26;22H[K[21;3H([26;5H[46m([14C)[m)[50;163H0[26;20H[?25h[?25l    ([8C[46m([4C)[m)[50;162H19[26;19H[?25h[?25l([4C)[50;163H8[26;18H[?25h[?25l[50;163H7[26;17H[?25h[?25l[50;163H6[26;16H[?25h[?25l[46m([4C)[m[50;163H5[26;15H[?25h[?25l[95m[46m0[m ls)[26;21H[K[26;14H[95m0[m ls))[50;163H4[26;14H[?25h[?25l[50;163H5[26;15H[?25h[?25l[50;163H6[26;16H[?25h[?25l[50;163H7[26;17H[?25h[?25l    [46m([12C)[m[50;163H8[26;18H[?25h[?25l[21;3H[46m([m[26;5H([12C)[46m)[m[50;163H9[26;19H[?25h[?25l[21;3H([26;5H[46m([12C)[m)[50;163H8[26;18H[?25h[?25l[21;3H[46m([m[26;5H([12C)[46m)[m[50;163H9[26;19H[?25h[?25l[20;1H[46m([m
  ([26;19H)[46m)[m[50;162H20[26;20H[?25h[50;1H[K[26;19H[?25l[50;149H^[[26;19H[50;149H  [26;20H[20;1H(
  [46m([26;19H)[m)[50;159H26,19[9CTop[26;19H[?25h[?25l[50;149H:[26;19H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 94L, 2753B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:40:0
actual:     0
expected:   5
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:41:0
actual:     0
expected:   11
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:42:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:43:0
actual:     0
expected:   -1
--------------------
--------------------
FAILURE
name:       check-eq?
location:   lab5-sol.scm:44:0
actual:     0
expected:   -6
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:69:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:70:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:71:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:72:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:81:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:91:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:92:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:93:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 94L, 2753B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  [106m([m[38;5;130mletrec[m ([aux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17Hsum[25;17H(aux-sum ([36m+[m sum ([36mlength[m ([36mcar[m ls))) ([36mcdr[m ls))))])
    (aux-sum [31m0[m ls)[106m)[m)

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  [31m0[m)

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H26,19[9CTop[26;19H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  [46m([m[93mletrec[m ([aux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17Hsum[25;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])
    (aux-sum [95m0[m ls)[46m)[m)

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  [95m0[m)

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H26,19[9CTop"lab5-sol.scm" 94L, 2753B[26;19H[?25h[?25l[21;3H([26;19H)[50;159H30,31[30;31H[?25h[?25l[50;159H24,5-19[24;19H[?25h[?25l[23;19H[46m([8C)[m[50;160H3,21-28[23;28H[?25h[?25l[20;1H[46m([m[23;19H([8C)[26;20H[46m)[m[50;160H6,20   [26;20H[?25h[?25l[20;1H([26;20H)[50;160H4,5-19[24;19H[?25h[?25l[20;1H[46m([26;20H)[m[50;160H6,20  [26;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))[50;1H[K[50;159H26,20[10C6%[23;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;5H([93mif[m ([1m[96mnull?[m ls)[48;9H[38;5;224m'()[m[49;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[50;159H[K[50;159H26,20[9C13%[20;20H[?25h[?25l[14;1H([20;20H)[30;1H[46m([31;4H)[m[50;159H37,4 [31;4H[?25h[?25l[50;149H~@k[31;4H[50;149H   [31;3H[30;1H([31;4H)[50;162H3[31;3H[?25h[?25l[50;149Hi[31;3H[50;149H [31;3H[50;1H[1m-- INSERT --[m[50;159H[K[50;159H37,3[10C13%[31;3H[?25h[?25l[30;1H[46m([31;4H)[m[50;162H4[31;4H[?25h[?25l)[31;4H[K[31;3H[46m)[m[50;162H3[31;3H[?25h[?25l[50;162H4[31;4H[?25h[?25l[31;3H[K[30;1H([50;162H3[31;3H[?25h[?25l[50;162H2[31;2H[?25h[?25l[50;162H1[31;1H[?25h[?25l[30;49r[49;1H
[1;50r[30;1H([93mdefine[m (poly-eval x coeffs)[49;15H(greater-than ([1m[96mcdr[m ls) v)))))[50;159H[K[50;159H36,29[9C13%[30;9H[46m([18C)[?25h[?25l[31;49r[m[31;1H[L[1;50r[50;159H[K[50;159H37,3[10C13%[30;9H([18C)
  [?25h[?25l([50;162H4[31;4H[?25h[?25ll[50;162H5[31;5H[?25h[?25le[50;162H6[31;6H[?25h[?25l[93mlet[m[50;162H7[31;7H[?25h[?25lletr[50;162H8[31;8H[?25h[?25le[50;162H9[31;9H[?25h[?25l  ([93mletrec[m[50;162H10[31;10H[?25h[?25l[50;163H1[31;11H[?25h[?25l([50;163H2[31;12H[?25h[?25la[50;163H3[31;13H[?25h[?25lu[50;163H4[31;14H[?25h[?25lx[50;163H5[31;15H[?25h[?25l-[50;163H6[31;16H[?25h[?25lp[50;163H7[31;17H[?25h[?25lo[50;163H8[31;18H[?25h[?25ll[50;163H9[31;19H[?25h[?25ly[50;162H20[31;20H[?25h[?25l-[50;163H1[31;21H[?25h[?25le[50;163H2[31;22H[?25h[?25lv[50;163H3[31;23H[?25h[?25la[50;163H4[31;24H[?25h[?25ll[50;163H5[31;25H[?25h[?25l[50;163H6[31;26H[?25h[?25l[50;163H5[31;25H[?25h[?25l[50;163H4[31;24H[?25h[?25l[50;163H3[31;23H[?25h[?25l[50;163H2[31;22H[?25h[?25l[50;163H1[31;21H[?25h[?25l[50;163H0[31;20H[?25h[?25l[50;162H19[31;19H[?25h[?25l[50;163H8[31;18H[?25h[?25l[50;163H7[31;17H[?25h[?25l[50;163H6[31;16H[?25h[?25l[50;163H5[31;15H[?25h[?25l[50;163H4[31;14H[?25h[?25l[50;163H3[31;13H[?25h[?25l[50;163H2[31;12H[?25h[?25l[aux-poly-eval[50;163H3[31;13H[?25h[?25l[50;163H4[31;14H[?25h[?25l[50;163H5[31;15H[?25h[?25l[50;163H6[31;16H[?25h[?25l[50;163H7[31;17H[?25h[?25l[50;163H8[31;18H[?25h[?25l[50;163H9[31;19H[?25h[?25l[50;162H20[31;20H[?25h[?25l[50;163H1[31;21H[?25h[?25l[50;163H2[31;22H[?25h[?25l[50;163H3[31;23H[?25h[?25l[50;163H4[31;24H[?25h[?25l[50;163H5[31;25H[?25h[?25l[50;163H6[31;26H[?25h[?25l[32;49r[32;1H[L[1;50r[50;159H[K[50;159H38,7-14[7C13%[32;14H[?25h[?25l([50;162H8-15[32;15H[?25h[?25ll[50;162H9-16[32;16H[?25h[?25la[50;162H10-17[32;17H[?25h[?25lm[50;163H1-18[32;18H[?25h[?25lb[50;163H2-19[32;19H[?25h[?25ld[50;163H3-20[32;20H[?25h[?25l[93mlambda[m[50;163H4-21[32;21H[?25h[?25l[50;163H5-22[32;22H[?25h[?25l([50;163H6-23[32;23H[?25h[?25ls[50;163H7-24[32;24H[?25h[?25lu[50;163H8-25[32;25H[?25h[?25lm[50;163H9-26[32;26H[?25h[?25l[50;162H20-27[32;27H[?25h[?25lx[50;163H1-28[32;28H[?25h[?25l-[50;163H2-29[32;29H[?25h[?25lo[50;163H3-30[32;30H[?25h[?25lw[50;163H4-31[32;31H[?25h[?25l[32;30H[K[50;163H3-30[32;30H[?25h[?25l[32;29H[K[50;163H2-29[32;29H[?25h[?25lp[50;163H3-30[32;30H[?25h[?25lo[50;163H4-31[32;31H[?25h[?25lw[50;163H5-32[32;32H[?25h[?25l[50;163H6-33[32;33H[?25h[?25lx[50;163H7-34[32;34H[?25h[?25l[50;163H8-35[32;35H[?25h[?25lx[50;163H9-36[32;36H[?25h[?25l[32;35H[K[50;163H8-35[32;35H[?25h[?25lc[50;163H9-36[32;36H[?25h[?25lo[50;162H30-37[32;37H[?25h[?25le[50;163H1-38[32;38H[?25h[?25lf[50;163H2-39[32;39H[?25h[?25lf[50;163H3-40[32;40H[?25h[?25ls[50;163H4-41[32;41H[?25h[?25l)[32;22H[46m([18C)[m[50;163H5-42[32;42H[?25h[?25l[33;49r[33;1H[L[1;50r[50;159H[K[50;159H39,9-16[7C12%[32;22H([18C)[33;16H[?25h[?25li[50;162H10-17[33;17H[?25h[?25l[93mif[m[50;163H1-18[33;18H[?25h[?25l[50;163H2-19[33;19H[?25h[?25l[50;163H1-18[33;18H[?25h[?25li[33;17H[K[50;163H0-17[33;17H[?25h[?25l[33;16H[K[50;162H9-16 [33;16H[?25h[?25l([50;162H10-17[33;17H[?25h[?25li[50;163H1-18[33;18H[?25h[?25l[93mif[m[50;163H2-19[33;19H[?25h[?25l[50;163H3-20[33;20H[?25h[?25l([50;163H4-21[33;21H[?25h[?25ln[50;163H5-22[33;22H[?25h[?25lu[50;163H6-23[33;23H[?25h[?25ll[50;163H7-24[33;24H[?25h[?25ll[50;163H8-25[33;25H[?25h[?25l[1m[96mnull?[m[50;163H9-26[33;26H[?25h[?25l[50;162H20-27[33;27H[?25h[?25lc[50;163H1-28[33;28H[?25h[?25lo[50;163H2-29[33;29H[?25h[?25le[50;163H3-30[33;30H[?25h[?25lf[50;163H4-31[33;31H[?25h[?25lf[50;163H5-32[33;32H[?25h[?25ls[50;163H6-33[33;33H[?25h[?25l)[33;20H[46m([12C)[m[50;163H7-34[33;34H[?25h[?25l[34;49r[34;1H[L[1;50r[50;159H[K[50;159H40,4-18[7C12%[33;20H([12C)[34;18H[?25h[?25l[95m0[m[50;162H5-19[34;19H[?25h[?25l[35;49r[35;1H[L[1;50r[50;159H[K[50;159H41,4-18[7C12%[35;18H[?25h[?25l([50;162H5-19[35;19H[?25h[?25l[1m[96m+[m[50;162H6-20[35;20H[?25h[?25l[35;19H[K[50;162H5-19[35;19H[?25h[?25la[50;162H6-20[35;20H[?25h[?25lu[50;162H7-21[35;21H[?25h[?25lx[50;162H8-22[35;22H[?25h[?25l-[50;162H9-23[35;23H[?25h[?25lp[50;162H10-24[35;24H[?25h[?25lo[50;163H1-25[35;25H[?25h[?25ll[50;163H2-26[35;26H[?25h[?25ly[50;163H3-27[35;27H[?25h[?25l-[50;163H4-28[35;28H[?25h[?25le[50;163H5-29[35;29H[?25h[?25lv[50;163H6-30[35;30H[?25h[?25la[50;163H7-31[35;31H[?25h[?25ll[50;163H8-32[35;32H[?25h[?25l[50;163H9-33[35;33H[?25h[?25l([50;162H20-34[35;34H[?25h[?25l_[50;163H1-35[35;35H[?25h[?25l[35;34H[K[50;163H0-34[35;34H[?25h[?25l[1m[96m+[m[50;163H1-35[35;35H[?25h[?25l[50;163H2-36[35;36H[?25h[?25lx[50;163H3-37[35;37H[?25h[?25l-[50;163H4-38[35;38H[?25h[?25lp[50;163H5-39[35;39H[?25h[?25lo[50;163H6-40[35;40H[?25h[?25lw[50;163H7-41[35;41H[?25h[?25l[35;40H[K[50;163H6-40[35;40H[?25h[?25lx[50;163H7-41[35;41H[?25h[?25l[35;40H[K[50;163H6-40[35;40H[?25h[?25lw[50;163H7-41[35;41H[?25h[?25l[35;40H[K[50;163H6-40[35;40H[?25h[?25l[35;39H[K[50;163H5-39[35;39H[?25h[?25l[35;38H[K[50;163H4-38[35;38H[?25h[?25l[35;37H[K[50;163H3-37[35;37H[?25h[?25l[35;36H[K[50;163H2-36[35;36H[?25h[?25ls[50;163H3-37[35;37H[?25h[?25lu[50;163H4-38[35;38H[?25h[?25lm[50;163H5-39[35;39H[?25h[?25l[50;163H6-40[35;40H[?25h[?25l([50;163H7-41[35;41H[?25h[?25l[1m[96m*[m[50;163H8-42[35;42H[?25h[?25l[50;163H9-43[35;43H[?25h[?25lx[50;162H30-44[35;44H[?25h[?25l-[50;163H1-45[35;45H[?25h[?25lp[50;163H2-46[35;46H[?25h[?25lo[50;163H3-47[35;47H[?25h[?25lw[50;163H4-48[35;48H[?25h[?25l[50;163H5-49[35;49H[?25h[?25lc[50;163H6-50[35;50H[?25h[?25lo[50;163H7-51[35;51H[?25h[?25le[50;163H8-52[35;52H[?25h[?25l[35;51H[K[50;163H7-51[35;51H[?25h[?25l[35;50H[K[50;163H6-50[35;50H[?25h[?25l[35;49H[K[50;163H5-49[35;49H[?25h[?25lc[50;163H6-50[35;50H[?25h[?25la[50;163H7-51[35;51H[?25h[?25l[1m[96mcar[m[50;163H8-52[35;52H[?25h[?25l([50;163H9-53[35;53H[?25h[?25lc[50;162H40-54[35;54H[?25h[?25lo[50;163H1-55[35;55H[?25h[?25lr[50;163H2-56[35;56H[?25h[?25l[35;55H[K[50;163H1-55[35;55H[?25h[?25le[50;163H2-56[35;56H[?25h[?25lf[50;163H3-57[35;57H[?25h[?25lf[50;163H4-58[35;58H[?25h[?25ls[50;163H5-59[35;59H[?25h[?25l)[35;52H[46m([mcoeffs[46m)[m[50;163H6-60[35;60H[?25h[?25l)[35;40H[46m([m[11C(coeffs)[46m)[m[50;163H7-61[35;61H[?25h[?25l[50;163H6-60[35;60H[?25h[?25l[35;40H([11C[46m([mcoeffs[46m)[m)[50;163H5-59[35;59H[?25h[?25l[35;52H(coeffs)[50;163H4-58[35;58H[?25h[?25l[50;163H3-57[35;57H[?25h[?25l[50;163H2-56[35;56H[?25h[?25l[50;163H1-55[35;55H[?25h[?25l[50;163H0-54[35;54H[?25h[?25l[46m([mcoeffs[46m)[m[50;162H39-53[35;53H[?25h[?25lcar[46mc[moeffs)[35;60H[K[35;52Hcoeffs))[50;163H8-52[35;52H[?25h[?25l[1m[96mcar[m coeffs))[50;163H9-53[35;53H[?25h[?25l[50;163H8-52[35;52H[?25h[?25l[50;163H7-51[35;51H[?25h[?25l[50;163H6-50[35;50H[?25h[?25l[50;163H5-49[35;49H[?25h[?25l([1m[96mcar[m coeffs))[35;49H[46m([10C)[m[50;163H6-50[35;50H[?25h[?25l([10C)[50;163H7-51[35;51H[?25h[?25l[50;163H8-52[35;52H[?25h[?25l[50;163H9-53[35;53H[?25h[?25l[50;162H40-54[35;54H[?25h[?25l[50;163H1-55[35;55H[?25h[?25l[50;163H2-56[35;56H[?25h[?25l[50;163H3-57[35;57H[?25h[?25l[50;163H4-58[35;58H[?25h[?25l[50;163H5-59[35;59H[?25h[?25l[35;49H[46m([10C)[m[50;163H6-60[35;60H[?25h[?25l[35;40H[46m([m[8C([10C)[46m)[m[50;163H7-61[35;61H[?25h[?25l[1C)[35;33H[46m([m[6C([20C)[46m)[m[50;163H8-62[35;62H[?25h[?25l[46m [m) [46m)[m[50;163H9-63[35;63H[?25h[?25l)[35;63H[K[35;62H[46m)[m[50;163H8-62[35;62H[?25h[?25l[50;163H9-63[35;63H[?25h[?25l[35;33H([28C)[50;162H50-64[35;64H[?25h[?25l([50;163H1-65[35;65H[?25h[?25l[1m[96m*[m[50;163H2-66[35;66H[?25h[?25l[50;163H3-67[35;67H[?25h[?25lx[50;163H4-68[35;68H[?25h[?25l=-[50;163H6-70[35;70H[?25h[?25l[35;69H[K[50;163H5-69[35;69H[?25h[?25l[35;68H[K[50;163H4-68[35;68H[?25h[?25l-[50;163H5-69[35;69H[?25h[?25lp[50;163H6-70[35;70H[?25h[?25lo[50;163H7-71[35;71H[?25h[?25lw[50;163H8-72[35;72H[?25h[?25l[50;163H9-73[35;73H[?25h[?25lx[50;162H60-74[35;74H[?25h[?25l_[50;163H1-75[35;75H[?25h[?25l[35;74H[K[50;163H0-74[35;74H[?25h[?25l)[35;64H[46m([9C)[m[50;163H1-75[35;75H[?25h[?25l[35;64H([9C)[50;163H2-76[35;76H[?25h[?25l([50;163H3-77[35;77H[?25h[?25ls[50;163H4-78[35;78H[?25h[?25l[35;77H[K[50;163H3-77[35;77H[?25h[?25ls[50;163H4-78[35;78H[?25h[?25lu[50;163H5-79[35;79H[?25h[?25lm[50;163H6-80[35;80H[?25h[?25l[35;79H[K[50;163H5-79[35;79H[?25h[?25l[35;78H[K[50;163H4-78[35;78H[?25h[?25l[35;77H[K[50;163H3-77[35;77H[?25h[?25l[35;76H[K[50;163H2-76[35;76H[?25h[?25lx[50;163H3-77[35;77H[?25h[?25l[50;163H4-78[35;78H[?25h[?25lc[50;163H5-79[35;79H[?25h[?25l[35;78H[K[50;163H4-78[35;78H[?25h[?25l([50;163H5-79[35;79H[?25h[?25lc[50;163H6-80[35;80H[?25h[?25la[50;163H7-81[35;81H[?25h[?25l[1m[96mcar[m[50;163H8-82[35;82H[?25h[?25l[50;163H9-83[35;83H[?25h[?25lc[50;162H70-84[35;84H[?25h[?25lo[50;163H1-85[35;85H[?25h[?25le[50;163H2-86[35;86H[?25h[?25lf[50;163H3-87[35;87H[?25h[?25lf[50;163H4-88[35;88H[?25h[?25ls[50;163H5-89[35;89H[?25h[?25l)[35;78H[46m([10C)[m[50;163H6-90[35;90H[?25h[?25l)[35;18H[46m([m[59C([10C)[46m)[m[50;163H7-91[35;91H[?25h[?25l)[33;16H[46m([m[35;18H([71C)[46m)[m[50;163H8-92[35;92H[?25h[?25l)[32;14H[46m([m[33;16H([35;91H)[46m)[m[50;163H9-93[35;93H[?25h[?25l][31;12H[46m[[m[32;14H([35;92H)[46m][m[50;162H80-94[35;94H[?25h[?25l)[31;11H[46m([m[[35;93H][46m)[m[50;163H1-95[35;95H[?25h[?25l[36;49r[36;1H[L[1;50r[50;159H[K[50;159H42,5[10C12%[31;11H([35;94H)
    [?25h[?25l([50;162H6[36;6H[?25h[?25la[50;162H7[36;7H[?25h[?25lu[50;162H8[36;8H[?25h[?25lx[50;162H9[36;9H[?25h[?25l-[50;162H10[36;10H[?25h[?25lp[50;163H1[36;11H[?25h[?25ll[50;163H2[36;12H[?25h[?25l[36;11H[K[50;163H1[36;11H[?25h[?25li[50;163H2[36;12H[?25h[?25l[36;11H[K[50;163H1[36;11H[?25h[?25li[50;163H2[36;12H[?25h[?25l[36;11H[K[50;163H1[36;11H[?25h[?25lo[50;163H2[36;12H[?25h[?25ll[50;163H3[36;13H[?25h[?25ly[50;163H4[36;14H[?25h[?25l-[50;163H5[36;15H[?25h[?25le[50;163H6[36;16H[?25h[?25lv[50;163H7[36;17H[?25h[?25la[50;163H8[36;18H[?25h[?25ll[50;163H9[36;19H[?25h[?25l[50;162H20[36;20H[?25h[?25l[95m0[m[50;163H1[36;21H[?25h[?25l[50;163H2[36;22H[?25h[?25l[95m1[m[50;163H3[36;23H[?25h[?25l[50;163H4[36;24H[?25h[?25lx[50;163H5[36;25H[?25h[?25l[50;163H6[36;26H[?25h[?25lc[50;163H7[36;27H[?25h[?25lo[50;163H8[36;28H[?25h[?25le[50;163H9[36;29H[?25h[?25lf[50;162H30[36;30H[?25h[?25lf[50;163H1[36;31H[?25h[?25ls[50;163H2[36;32H[?25h[?25l)    [46m([26C)[m[50;163H3[36;33H[?25h[?25l)[31;3H[46m([m[36;5H([26C)[46m)[m[50;163H4[36;34H[?25h[?25l)[30;1H[46m([m
  ([36;33H)[46m)[m[50;163H5[36;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[50;159H[K[50;159H42,35[9C18%[33;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;9H[38;5;224m'()[m[48;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[49;15H(greater-than ([1m[96mcdr[m ls) v)))))[50;159H[K[50;159H42,35[9C24%[30;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[49;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[50;159H[K[50;159H42,35[9C30%[27;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H42,35[9C36%[24;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))[50;159H[K[50;159H42,35[9C42%[21;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[50;159H[K[50;159H42,35[9C48%[18;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H[K[50;159H42,35[9C54%[15;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H42,35[9C60%[12;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[50;159H[K[50;159H42,35[9C66%[9;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[49;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[50;159H[K[50;159H42,35[9C72%[6;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H45,33[9C78%[3;34H)


[46m([30C)[?25h[?25l[1;49r[m[1;1H[3M[1;50r[48;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))[50;159H[K[50;159H48,35[9C84%[3;1H([30C)[6;12H[46m([22C)[?25h[?25l[1;49r[m[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[50;159H[K[50;159H51,13[9C90%[3;12H([22C)[6;13H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)[50;159H[K[50;159H54,35[9C96%[6;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)

[94m~                                                                                                                                                                               [m[50;159H[K[50;159H57,21[9CBot[6;11H[46m([8C)[?25h[?25l[1;49r[m[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H60,22-29      Bot[3;11H([8C)[6;15H[46m([12C)[?25h[?25l[1;49r[m[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H63,35[9CBot[3;15H([12C)[6;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H66,28-35      Bot[5;1H[46m([6;35H)[?25h[?25l[1;49r[m[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H69,35[9CBot[2;1H([3;35H)[6;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H72,1[10CBot[6;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[3;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[50;159H[K[50;159H72,1[10CBot[9;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[50;159H[K[50;159H72,1[10CBot[12;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;5H([93mif[m ([1m[96mnull?[m ls)[2;9H[38;5;224m'()[m[3;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[50;159H[K[50;159H72,1[10CBot[15;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))[50;159H[K[50;159H72,1[10CBot[18;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[2;1H[96m;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H72,1[10CBot[21;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2[m[50;159H[K[50;159H72,1[10C96%[24;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)[50;159H[K[50;159H72,1[10C90%[27;1H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)[50;159H[K[50;159H72,1[10C96%[24;1H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)

[94m~                                                                                                                                                                               [m[50;159H[K[50;159H72,1[10CBot[21;1H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H72,1[10CBot[18;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[2;1H[96m;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H72,1[10CBot[21;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2[m[50;159H[K[50;159H72,1[10C96%[24;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)[50;159H[K[50;159H72,1[10C90%[27;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[2;1H(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)[50;159H[K[50;159H72,1[10C84%[30;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;18H[95m0[m[2;18H(aux-poly-eval ([1m[96m+[m sum ([1m[96m*[m x-pow ([1m[96mcar[m coeffs))) ([1m[96m*[m x-pow x) x ([1m[96mcar[m coeffs))))])
    (aux-poly-eval [95m0[m [95m1[m x coeffs)))[50;159H[K[50;159H72,1[10C78%[33;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;3H([93mletrec[m ([aux-poly-eval[2;14H([93mlambda[m (sum x-pow x coeffs)[3;16H([93mif[m ([1m[96mnull?[m coeffs)[50;159H[K[50;159H72,1[10C72%[36;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)[50;159H[K[50;159H72,1[10C66%[39;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return[m[50;159H[K[50;159H72,1[10C60%[42;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)[50;159H[K[50;159H71,7[10C54%[43;1H[46m([44;6H)[?25h[m[50;1H[K[44;6H[?25l[50;149H^[[44;6H[50;149H  [44;7H[50;159H71,6[10C54%[44;6H[?25h[?25l[50;149H:[44;6H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 99L, 2957B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 5
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 99L, 2957B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)[2;40H[K[3;1H(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)[3;46H[K[4;1H(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  ([38;5;130mletrec[m ([aux-poly-eval[11;14H([38;5;130mlambda[m (sum x-pow x coeffs)[12;16H([38;5;130mif[m ([36mnull?[m coeffs)[13;18H[31m0[m[14;18H(aux-poly-eval ([36m+[m sum ([36m*[m x-pow ([36mcar[m coeffs))) ([36m*[m x-pow x) x ([36mcar[m coeffs))))])
    (aux-poly-eval [31m0[m [31m1[m x coeffs)))

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[32;9H[35m'()[m[33;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[34;15H(greater-than ([36mcdr[m ls) v)))))

(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[37;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[39;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are greater than v[m
[106m([m[38;5;130mdefine[m (get-greater-than ls (v [31m0[m))
  [35m'()[m[106m)[m

(check-equal? (get-greater-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-greater-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m3[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m1[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m) [35m'([m[31m3[m[35m [m[31m6[m[35m [m[31m8[m[35m)[m)[50;159H71,6[10C54%[44;6H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  ([93mletrec[m ([aux-poly-eval[11;14H([93mlambda[m (sum x-pow x coeffs)[12;16H([93mif[m ([1m[96mnull?[m coeffs)[13;18H[95m0[m[14;18H(aux-poly-eval ([1m[96m+[m sum ([1m[96m*[m x-pow ([1m[96mcar[m coeffs))) ([1m[96m*[m x-pow x) x ([1m[96mcar[m coeffs))))])
    (aux-poly-eval [95m0[m [95m1[m x coeffs)))

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[32;9H[38;5;224m'()[m[33;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[34;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[37;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[39;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are greater than v[m
[46m([m[93mdefine[m (get-greater-than ls (v [95m0[m))
  [38;5;224m'()[m[46m)[m

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H71,6[10C54%"lab5-sol.scm" 99L, 2957B[44;6H[?25h[?25l[14;33H[46m([28C)[m[43;1H([44;6H)[50;159H41,19-33[14;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])
    (aux-sum [95m0[m ls)))[50;1H[K[50;159H41,19-33      48%[17;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;14H([93mlambda[m (sum ls)[2;15H([93mif[m ([1m[96mnull?[m ls)[3;17Hsum[50;159H[K[50;159H41,19-33      42%[20;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[50;159H[K[50;159H41,19-33      36%[23;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)[50;159H[K[50;159H41,19-33      30%[26;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[2;1H(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)[50;159H[K[50;159H41,19-33      24%[29;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;3H([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[50;159H[K[50;159H41,19-33      18%[32;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)[50;159H[K[50;159H41,19-33      12%[35;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(require rackunit)

[96m;;Exercise 1[m[50;159H[K[50;159H41,19-33[7C6%[38;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H#!/usr/bin/env racket

#lang racket[50;159H[K[50;159H41,19-33      Top[41;33H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;;Exercise 2[m[50;159H[K[50;159H41,19-33[7C6%[38;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m[50;159H[K[50;159H41,19-33      12%[35;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[50;159H[K[50;159H41,19-33      18%[32;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;9H[38;5;224m'()[m[48;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[49;15H(greater-than ([1m[96mcdr[m ls) v)))))[50;159H[K[50;159H41,19-33      24%[29;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[49;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[50;159H[K[50;159H41,19-33      30%[26;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H41,19-33      36%[23;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))[50;159H[K[50;159H41,19-33      42%[20;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[50;159H[K[50;159H41,19-33      48%[17;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H[K[50;159H41,19-33      54%[14;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H41,19-33      60%[11;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[50;159H[K[50;159H41,19-33      66%[8;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[1;3H[46m([m[5;33H([28C)[6;33H[46m)[m[48;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[49;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[50;159H[K[50;159H42,33[9C72%[6;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[3;33H)


[46m([30C)[m[47;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H45,32[9C78%[6;32H[?25h[?25l[1;49r[1;1H[3M[1;50r[3;1H([30C)[48;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))[50;159H[K[50;159H48,33[9C84%[6;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[50;159H[K[50;159H51,12[9C90%[6;12H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)[50;159H[K[50;159H54,33[9C96%[6;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[6;11H[46m([8C)[m[47;1H(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)

[94m~                                                                                                                                                                               [m[50;159H[K[50;159H57,20[9CBot[6;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[3;11H([8C)[6;15H[46m([12C)[m[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H60,21-28      Bot[6;28H[?25h[?25l[1;49r[1;1H[3M[1;50r[3;15H([12C)[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H63,33[9CBot[6;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H66,26-33      Bot[6;33H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H69,33[9CBot[6;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[50;159H[K[50;159H69,33[9CBot[9;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;5H([93mif[m ([1m[96mnull?[m ls)[2;9H[38;5;224m'()[m[3;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[50;159H[K[50;159H69,33[9CBot[12;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))[50;159H[K[50;159H69,33[9CBot[15;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[2;1H[96m;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H69,33[9CBot[18;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2[m[50;159H[K[50;159H69,33[9C96%[21;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)[50;159H[K[50;159H69,33[9C90%[24;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[2;1H(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)[50;159H[K[50;159H69,33[9C84%[27;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;18H[95m0[m[2;18H(aux-poly-eval ([1m[96m+[m sum ([1m[96m*[m x-pow ([1m[96mcar[m coeffs))) ([1m[96m*[m x-pow x) x ([1m[96mcar[m coeffs))))])
    (aux-poly-eval [95m0[m [95m1[m x coeffs)))[50;159H[K[50;159H69,33[9C78%[30;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;3H([93mletrec[m ([aux-poly-eval[2;14H([93mlambda[m (sum x-pow x coeffs)[3;16H([93mif[m ([1m[96mnull?[m coeffs)[50;159H[K[50;159H69,33[9C72%[33;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)[50;159H[K[50;159H69,33[9C66%[36;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return[m[50;159H[K[50;159H69,33[9C60%[39;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)[50;159H[K[50;159H69,33[9C54%[42;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])
    (aux-sum [95m0[m ls)))[50;159H[K[50;159H68,0-1[8C48%[44;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;14H([93mlambda[m (sum ls)[2;15H([93mif[m ([1m[96mnull?[m ls)[3;17Hsum[50;159H[K[50;159H65,33[9C42%[44;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[50;159H[K[50;159H62,0-1[8C36%[44;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)[44;10H[38;5;224m[46m()[m[50;159H[K[50;159H59,4-11[7C30%[44;11H[?25h[?25l[1;49r[1;1H[3L[1;50r[2;1H(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)[47;10H[38;5;224m()[m[50;159H[K[50;159H56,20[9C24%[44;20H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;3H([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[50;159H[K[50;159H53,13[9C18%[44;13H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)[50;159H[K[50;159H50,0-1[8C12%[44;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(require rackunit)

[96m;;Exercise 1[m[44;26H[38;5;224m[46m([6C)[m[50;159H[K[50;159H47,33[10C6%[44;33H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H#!/usr/bin/env racket

#lang racket[44;1H[46m([29C)[m[47;26H[38;5;224m([6C)[m[50;159H[K[50;159H44,31[9CTop[44;31H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;;Exercise 2[m[50;159H[K[50;159H44,31[10C6%[41;31H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m[50;159H[K[50;159H44,31[9C12%[38;31H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[50;159H[K[50;159H44,31[9C18%[35;31H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;9H[38;5;224m'()[m[48;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[49;15H(greater-than ([1m[96mcdr[m ls) v)))))[50;159H[K[50;159H44,31[9C24%[32;31H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[49;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[50;159H[K[50;159H44,31[9C30%[29;31H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H44,31[9C36%[26;31H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))[50;159H[K[50;159H44,31[9C42%[23;31H[?25h[?25l([29C)[50;159H39,23-30[18;30H[?25h[?25l[18;20H[46m([12C)[m[50;163H6-33[18;33H[?25h[?25l[18;20H([12C)[50;159H40,4-18 [19;18H[?25h[?25l[50;149Hi[19;18H[50;149H [19;18H[50;1H[1m-- INSERT --[m[50;159H[K[50;159H40,4-18[7C42%[19;18H[?25h[?25l[50;162H5-19[19;19H[?25h[?25l[19;18H[K[50;162H4-18[19;18H[?25h[?25ls[50;162H5-19[19;19H[?25h[?25lu[50;162H6-20[19;20H[?25h[?25lm[50;162H7-21[19;21H[?25h[?25l[18;20H[46m([12C)[m[50;159H39,27-34[18;34H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[50;159H[K[50;159H39,27-34      36%[21;34H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)[50;159H[K[50;159H39,27-34      30%[24;34H[?25h[?25l[1;49r[1;1H[3L[1;50r[2;1H(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)[50;159H[K[50;159H39,27-34      24%[27;34H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;3H([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[50;159H[K[50;159H39,27-34      18%[30;34H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)[50;159H[K[50;159H39,27-34      12%[33;34H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(require rackunit)

[96m;;Exercise 1[m[50;159H[K[50;159H39,27-34[7C6%[36;34H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H#!/usr/bin/env racket

#lang racket[50;159H[K[50;159H39,27-34      Top[39;34H[?25h[?25l[50;159H[K[50;159H39,27-34      Top[39;34H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;;Exercise 2[m[50;159H[K[50;159H39,27-34[7C6%[36;34H[?25h[?25l[36;20H([12C)[38;33H[46m([28C)[m[50;159H41,19-33[38;33H[?25h[?25l([28C)[50;162H23-37[38;37H[?25h[?25l[50;163H4-38[38;38H[?25h[?25l[50;163H5-39[38;39H[?25h[?25l [46m([20C)[m[50;163H6-40[38;40H[?25h[?25l[50;163H7-41[38;41H[?25h[?25l([20C)[50;163H8-42[38;42H[?25h[?25l[50;163H9-43[38;43H[?25h[?25l[50;162H30-44[38;44H[?25h[?25l[50;163H1-45[38;45H[?25h[?25l[50;163H2-46[38;46H[?25h[?25l[50;163H3-47[38;47H[?25h[?25l[50;163H4-48[38;48H[?25h[?25l [46m([10C)[m[50;163H5-49[38;49H[?25h[?25l[50;163H6-50[38;50H[?25h[?25l([10C)[50;163H7-51[38;51H[?25h[?25l[46m([10C)[m[50;163H6-50[38;50H[?25h[?25l[50;163H5-49[38;49H[?25h[?25l[50;163H6-50[38;50H[?25h[?25l([10C)[50;163H7-51[38;51H[?25h[?25l[50;163H8-52[38;52H[?25h[?25l[50;163H9-53[38;53H[?25h[?25l[50;162H40-54[38;54H[?25h[?25l[50;163H1-55[38;55H[?25h[?25l[50;163H2-56[38;56H[?25h[?25l[50;163H3-57[38;57H[?25h[?25l[50;163H4-58[38;58H[?25h[?25l[50;163H5-59[38;59H[?25h[?25l[38;49H[46m([10C)[m[50;163H6-60[38;60H[?25h[?25l[38;40H[46m([m[8C([10C)[46m)[m[50;163H7-61[38;61H[?25h[?25l[38;33H[46m([m[6C([20C)[46m)[m[50;163H8-62[38;62H[?25h[?25l[50;163H9-63[38;63H[?25h[?25l[38;33H([28C) [46m([9C)[m[50;162H50-64[38;64H[?25h[?25l[50;163H1-65[38;65H[?25h[?25l([9C)[50;163H2-66[38;66H[?25h[?25l[50;163H3-67[38;67H[?25h[?25l[50;163H4-68[38;68H[?25h[?25l[50;163H5-69[38;69H[?25h[?25l[50;163H6-70[38;70H[?25h[?25l[50;163H7-71[38;71H[?25h[?25l[50;163H8-72[38;72H[?25h[?25l[50;163H9-73[38;73H[?25h[?25l[38;64H[46m([9C)[m[50;162H60-74[38;74H[?25h[?25l[50;163H1-75[38;75H[?25h[?25l[38;64H([9C)[50;163H2-76[38;76H[?25h[?25l[50;163H3-77[38;77H[?25h[?25l [46m([10C)[m[50;163H4-78[38;78H[?25h[?25l[50;163H5-79[38;79H[?25h[?25l([10C)[50;163H6-80[38;80H[?25h[?25l[50;163H7-81[38;81H[?25h[?25l[50;163H8-82[38;82H[?25h[?25l[50;163H9-83[38;83H[?25h[?25l[50;162H70-84[38;84H[?25h[?25l[50;163H1-85[38;85H[?25h[?25l[50;163H2-86[38;86H[?25h[?25l[50;163H3-87[38;87H[?25h[?25l[50;163H4-88[38;88H[?25h[?25l[38;78H[46m([10C)[m[50;163H5-89[38;89H[?25h[?25l[38;18H[46m([m[59C([10C)[46m)[m[50;163H6-90[38;90H[?25h[?25l[36;16H[46m([m[38;18H([71C)[46m)[m[50;163H7-91[38;91H[?25h[?25l[35;14H[46m([m[36;16H([38;91H)[46m)[m[50;163H8-92[38;92H[?25h[?25l[34;12H[46m[[m[35;14H([38;92H)[46m][m[50;163H9-93[38;93H[?25h[?25l[34;12H[[35;14H[46m([38;92H)[m][50;163H8-92[38;92H[?25h[?25l[35;14H([36;16H[46m([38;91H)[m)[50;163H7-91[38;91H[?25h[?25l[36;16H([38;18H[46m([71C)[m)[50;163H6-90[38;90H[?25h[?25l[38;18H([59C[46m([10C)[m)[50;163H5-89[38;89H[?25h[?25l[38;78H([10C)[50;163H4-88[38;88H[?25h[?25l[50;163H3-87[38;87H[?25h[?25l[50;163H2-86[38;86H[?25h[?25l[50;163H1-85[38;85H[?25h[?25l[50;163H0-84[38;84H[?25h[?25l[50;162H69-83[38;83H[?25h[?25l[50;163H8-82[38;82H[?25h[?25l[50;163H7-81[38;81H[?25h[?25l[50;163H6-80[38;80H[?25h[?25l[46m([10C)[m[50;163H5-79[38;79H[?25h[?25l[50;163H4-78[38;78H[?25h[?25l([10C)[50;163H3-77[38;77H[?25h[?25l[50;163H2-76[38;76H[?25h[?25l[38;64H[46m([9C)[m[50;163H1-75[38;75H[?25h[?25l[50;163H0-74[38;74H[?25h[?25l[38;64H([9C)[50;162H59-73[38;73H[?25h[?25l[50;163H8-72[38;72H[?25h[?25l[50;163H7-71[38;71H[?25h[?25l[50;163H6-70[38;70H[?25h[?25l[50;163H5-69[38;69H[?25h[?25l[50;163H4-68[38;68H[?25h[?25l[50;163H3-67[38;67H[?25h[?25l[50;163H2-66[38;66H[?25h[?25l[46m([9C)[m[50;163H1-65[38;65H[?25h[?25l[50;163H0-64[38;64H[?25h[?25l[38;33H[46m([28C)[m ([9C)[50;162H49-63[38;63H[?25h[?25l[50;163H8-62[38;62H[?25h[?25l[38;33H([6C[46m([20C)[m)[50;163H7-61[38;61H[?25h[?25l[38;40H([8C[46m([10C)[m)[50;163H6-60[38;60H[?25h[?25l[38;49H([10C)[50;163H5-59[38;59H[?25h[?25l[50;163H4-58[38;58H[?25h[?25l[50;163H3-57[38;57H[?25h[?25l[50;163H2-56[38;56H[?25h[?25l[50;163H1-55[38;55H[?25h[?25l[50;163H0-54[38;54H[?25h[?25l[50;162H39-53[38;53H[?25h[?25l[50;163H8-52[38;52H[?25h[?25l[50;163H7-51[38;51H[?25h[?25l[46m([10C)[m[50;163H6-50[38;50H[?25h[?25l[50;163H5-49[38;49H[?25h[?25l([10C)[50;163H4-48[38;48H[?25h[?25l[50;163H3-47[38;47H[?25h[?25l[50;163H4-48[38;48H[?25h[?25l [46m([10C)[m[50;163H5-49[38;49H[?25h[?25l[50;163H6-50[38;50H[?25h[?25l([10C)[50;163H7-51[38;51H[?25h[?25l[50;163H8-52[38;52H[?25h[?25l[50;163H9-53[38;53H[?25h[?25l[50;162H40-54[38;54H[?25h[?25l[50;163H1-55[38;55H[?25h[?25l[50;163H2-56[38;56H[?25h[?25l[50;163H3-57[38;57H[?25h[?25l[50;163H4-58[38;58H[?25h[?25l[50;163H5-59[38;59H[?25h[?25l[38;49H[46m([10C)[m[50;163H6-60[38;60H[?25h[?25l[38;40H[46m([m[8C([10C)[46m)[m[50;163H7-61[38;61H[?25h[?25l[38;33H[46m([m[6C([20C)[46m)[m[50;163H8-62[38;62H[?25h[?25l[50;163H9-63[38;63H[?25h[?25l[38;33H([28C) [46m([9C)[m[50;162H50-64[38;64H[?25h[?25l[50;163H1-65[38;65H[?25h[?25l([9C)[50;163H2-66[38;66H[?25h[?25l[50;163H3-67[38;67H[?25h[?25l[50;163H4-68[38;68H[?25h[?25l[50;163H5-69[38;69H[?25h[?25l[50;163H6-70[38;70H[?25h[?25l[50;163H7-71[38;71H[?25h[?25l[50;163H8-72[38;72H[?25h[?25l[50;163H9-73[38;73H[?25h[?25l[38;64H[46m([9C)[m[50;162H60-74[38;74H[?25h[?25l[50;163H1-75[38;75H[?25h[?25l[38;64H([9C)[50;163H2-76[38;76H[?25h[?25l[50;163H3-77[38;77H[?25h[?25l [46m([10C)[m[50;163H4-78[38;78H[?25h[?25l[50;163H5-79[38;79H[?25h[?25l([10C)[50;163H6-80[38;80H[?25h[?25l[50;163H7-81[38;81H[?25h[?25l[50;163H8-82[38;82H[?25h[?25l[50;163H9-83[38;83H[?25h[?25l[50;162H70-84[38;84H[?25h[?25l[50;163H1-85[38;85H[?25h[?25l[50;163H2-86[38;86H[?25h[?25l[50;163H3-87[38;87H[?25h[?25l[50;163H4-88[38;88H[?25h[?25l[38;78H[46m([10C)[m[50;163H5-89[38;89H[?25h[?25l[38;18H[46m([m[59C([10C)[46m)[m[50;163H6-90[38;90H[?25h[50;1H[K[38;89H[?25l[50;149H^[[38;89H[50;149H  [38;90H[38;18H([59C[46m([10C)[m)[50;159H41,75-89[7C6%[38;89H[?25h[?25l[50;149H:[38;89H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 99L, 2959B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lcar: contract violation
  expected: pair?
  given: 5
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 99L, 2959B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17Hsum[25;17H(aux-sum ([36m+[m sum ([36mlength[m ([36mcar[m ls))) ([36mcdr[m ls))))])
    (aux-sum [31m0[m ls)))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  ([38;5;130mletrec[m ([aux-poly-eval[38;14H([38;5;130mlambda[m (sum x-pow x coeffs)[39;16H([38;5;130mif[m ([36mnull?[m coeffs)[40;18Hsum[41;18H(aux-poly-eval ([36m+[m sum ([36m*[m x-pow ([36mcar[m coeffs))) ([36m*[m x-pow x) x [106m([m[36mcar[m coeffs[106m)[m)))])
    (aux-poly-eval [31m0[m [31m1[m x coeffs)))

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)[50;159H41,75-89      Top[41;89H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17Hsum[25;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])
    (aux-sum [95m0[m ls)))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  ([93mletrec[m ([aux-poly-eval[38;14H([93mlambda[m (sum x-pow x coeffs)[39;16H([93mif[m ([1m[96mnull?[m coeffs)[40;18Hsum[41;18H(aux-poly-eval ([1m[96m+[m sum ([1m[96m*[m x-pow ([1m[96mcar[m coeffs))) ([1m[96m*[m x-pow x) x [46m([m[1m[96mcar[m coeffs[46m)[m)))])
    (aux-poly-eval [95m0[m [95m1[m x coeffs)))

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)[50;159H41,75-89      Top"lab5-sol.scm" 99L, 2959B[41;89H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;;Exercise 2[m[50;1H[K[50;159H41,75-89[7C6%[38;89H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m[50;159H[K[50;159H41,75-89      12%[35;89H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[50;159H[K[50;159H41,75-89      18%[32;89H[?25h[?25l[27;9H[46m([18C)[m[32;78H([10C)[50;159H36,28   [27;28H[?25h[?25l[27;9H([18C)[50;159H41,68-82[32;82H[?25h[?25l[50;149Hi[32;82H[50;149H [32;82H[50;1H[1m-- INSERT --[m[50;159H[K[50;159H41,68-82      18%[32;82H[?25h[?25lca coeffs))))])[32;94H[K[50;163H7-81[32;81H[?25h[?25l coeffs))))])[32;93H[K[50;163H6-80[32;80H[?25h[?25l coeffs))))])[32;92H[K[32;78H[46m([7C)[m[50;163H5-79[32;79H[?25h[?25ld coeff[46ms[m))))])[32;78H([7Cs[50;163H6-80[32;80H[?25h[?25l coeffs))))])[32;92H[K[32;78H[46m([7C)[m[50;163H5-79[32;79H[?25h[?25lc coeff[46ms[m))))])[32;78H([7Cs[50;163H6-80[32;80H[?25h[?25ld coeffs))))])[50;163H7-81[32;81H[?25h[?25l[1m[96mcdr[m coeffs))))])[50;163H8-82[32;82H[?25h[?25l[32;18H[46m([71C)[m[50;162H76-90[32;90H[?25h[50;1H[K[32;89H[?25l[50;149H^[[32;89H[50;149H  [32;90H[32;18H([59C[46m([10C)[m)[50;159H41,75-89      18%[32;89H[?25h[?25l[50;149H:[32;89H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 99L, 2959B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:74:0
actual:     '()
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:75:0
actual:     '()
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '()
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '()
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:84:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:86:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:95:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:96:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:97:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:98:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 99L, 2959B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/env racket[2;1H[K[3;1H#lang racket[3;13H[K[4;1H(require rackunit)

[34m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([38;5;130mdefine[m (sum-lengths ls)
  ([38;5;130mif[m ([36mnull?[m ls)
    [31m0[m
    ([36m+[m ([36mlength[m ([36mcar[m ls)) (sum-lengths ([36mcdr[m ls)))))

(check-eq? (sum-lengths [35m'()[m) [31m0[m)
(check-eq? (sum-lengths [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Repeat previous exercise where all recursion is tail-recursive[m
([38;5;130mdefine[m (sum-lengths-tr ls)
  ([38;5;130mletrec[m ([aux-sum[22;14H([38;5;130mlambda[m (sum ls)[23;15H([38;5;130mif[m ([36mnull?[m ls)[24;17Hsum[25;17H(aux-sum ([36m+[m sum ([36mlength[m ([36mcar[m ls))) ([36mcdr[m ls))))])
    (aux-sum [31m0[m ls)))

(check-eq? (sum-lengths-tr [35m'()[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)

[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  ([38;5;130mletrec[m ([aux-poly-eval[38;14H([38;5;130mlambda[m (sum x-pow x coeffs)[39;16H([38;5;130mif[m ([36mnull?[m coeffs)[40;18Hsum[41;18H(aux-poly-eval ([36m+[m sum ([36m*[m x-pow ([36mcar[m coeffs))) ([36m*[m x-pow x) x [106m([m[36mcdr[m coeffs[106m)[m)))])
    (aux-poly-eval [31m0[m [31m1[m x coeffs)))

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)[50;159H41,75-89      Top[41;89H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H#!/usr/bin/env racket

#lang racket
(require rackunit)

[96m;;Exercise 1
;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)
  ([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))

(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[22;14H([93mlambda[m (sum ls)[23;15H([93mif[m ([1m[96mnull?[m ls)[24;17Hsum[25;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])
    (aux-sum [95m0[m ls)))

(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  ([93mletrec[m ([aux-poly-eval[38;14H([93mlambda[m (sum x-pow x coeffs)[39;16H([93mif[m ([1m[96mnull?[m coeffs)[40;18Hsum[41;18H(aux-poly-eval ([1m[96m+[m sum ([1m[96m*[m x-pow ([1m[96mcar[m coeffs))) ([1m[96m*[m x-pow x) x [46m([m[1m[96mcdr[m coeffs[46m)[m)))])
    (aux-poly-eval [95m0[m [95m1[m x coeffs)))

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)[50;159H41,75-89      Top"lab5-sol.scm" 99L, 2959B[41;89H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;;Exercise 2[m[50;1H[K[50;159H41,75-89[7C6%[38;89H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m[50;159H[K[50;159H41,75-89      12%[35;89H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[50;159H[K[50;159H41,75-89      18%[32;89H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;9H[38;5;224m'()[m[48;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[49;15H(greater-than ([1m[96mcdr[m ls) v)))))[50;159H[K[50;159H41,75-89      24%[29;89H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[49;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[50;159H[K[50;159H41,75-89      30%[26;89H[?25h[?25l[26;78H([10C)[50;160H4,29   [29;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H44,29[9C36%[26;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))[50;159H[K[50;159H44,29[9C42%[23;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[50;159H[K[50;159H44,29[9C48%[20;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H[K[50;159H44,29[9C54%[17;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H44,29[9C60%[14;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[50;159H[K[50;159H44,29[9C66%[11;29H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return[m[50;159H[K[50;159H44,29[9C60%[14;29H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)[50;159H[K[50;159H44,29[9C54%[17;29H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])
    (aux-sum [95m0[m ls)))[50;159H[K[50;159H44,29[9C48%[20;29H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;14H([93mlambda[m (sum ls)[2;15H([93mif[m ([1m[96mnull?[m ls)[3;17Hsum[50;159H[K[50;159H44,29[9C42%[23;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[50;159H[K[50;159H44,29[9C48%[20;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H[K[50;159H44,29[9C54%[17;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H44,29[9C60%[14;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[50;159H[K[50;159H44,29[9C66%[11;29H[?25h[?25l[50;159H63,26[30;26H[?25h[?25l[50;162H34[30;34H[?25h[?25l[50;160H5,33[32;33H[?25h[?25l[50;160H6,26-33[33;33H[?25h[?25l[40;34H[38;5;224m[46m()[m[50;159H73,34   [40;34H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[49;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[50;159H[K[50;159H73,34[9C72%[37;34H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H73,34[9C78%[34;34H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))[50;159H[K[50;159H73,34[9C84%[31;34H[?25h[?25l[28;1H[46m([29;6H)[m[31;34H[38;5;224m()[m[50;160H1,6 [29;6H[?25h[?25l[50;149H~@k[29;6H[50;149H   [29;6H[?25h[?25l[50;149Hi[29;6H[50;149H [29;6H[50;1H[1m-- INSERT --[m[50;159H[K[50;159H71,6[10C84%[29;6H[?25h[?25l[50;162H7[29;7H[?25h[?25l[29;6H[K[28;1H([29;4H[38;5;224m[46m()[m[50;162H6[29;6H[?25h[?25l[29;5H[K[31;1H[38;5;224m([13C([22C)[4C)
([13C([28C)[7C)
([13C([26C)[7C)
([13C([35C)[9C)
([13C([33C)[11C)[39;1H([mdefine [38;5;224m([13C([3C))[40;6H)

([13C([28C)[43;35H)
([13C([26C)[45;35H)
([13C([13C)[4C)


([mdefine [38;5;224m([17C([3C))[29;4H([m[50;162H5[29;5H[?25h[?25l[29;4H[K[31;1H([13C([22C)[4C)
([13C([28C)[7C)
([13C([26C)[7C)
([13C([35C)[9C)
([13C([33C)[11C)[39;1H([93mdefine[m ([13C([3C))[40;6H)

([13C([28C)[43;35H)
([13C([26C)[45;35H)
([13C([13C)[4C)


([93mdefine[m ([17C([3C))[50;162H4[29;4H[?25h[?25l[29;3H[K[50;162H3[29;3H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[50;159H[K[50;159H71,3[10C90%[26;3H[?25h[?25l([50;162H4[26;4H[?25h[?25lc[50;162H5[26;5H[?25h[?25lo[50;162H6[26;6H[?25h[?25ln[50;162H7[26;7H[?25h[?25l[93mcond[m[50;162H8[26;8H[?25h[?25l[50;162H9[26;9H[?25h[?25l[1;49r[1;1H[3L[1;50r[2;1H(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)[50;159H[K[50;159H71,9[10C84%[29;9H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;18Hsum[2;18H(aux-poly-eval ([1m[96m+[m sum ([1m[96m*[m x-pow ([1m[96mcar[m coeffs))) ([1m[96m*[m x-pow x) x ([1m[96mcdr[m coeffs))))])
    (aux-poly-eval [95m0[m [95m1[m x coeffs)))[50;159H[K[50;159H71,9[10C78%[32;9H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;3H([93mletrec[m ([aux-poly-eval[2;14H([93mlambda[m (sum x-pow x coeffs)[3;16H([93mif[m ([1m[96mnull?[m coeffs)[50;159H[K[50;159H71,9[10C72%[35;9H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)[50;159H[K[50;159H71,9[10C66%[38;9H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return[m[50;159H[K[50;159H71,9[10C60%[41;9H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (sum-lengths-tr [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)[50;159H[K[50;159H71,9[10C54%[44;9H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;17H(aux-sum ([1m[96m+[m sum ([1m[96mlength[m ([1m[96mcar[m ls))) ([1m[96mcdr[m ls))))])
    (aux-sum [95m0[m ls)))[50;159H[K[50;159H68,1[10C48%[44;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;14H([93mlambda[m (sum ls)[2;15H([93mif[m ([1m[96mnull?[m ls)[3;17Hsum[50;159H[K[50;159H65,9[10C42%[44;9H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;Repeat previous exercise where all recursion is tail-recursive[m
([93mdefine[m (sum-lengths-tr ls)
  ([93mletrec[m ([aux-sum[50;159H[K[50;159H62,1[10C36%[44;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)[50;159H[K[50;159H59,2-9[8C30%[44;9H[?25h[?25l[1;49r[1;1H[3L[1;50r[2;1H(check-eq? (sum-lengths [38;5;224m'()[m) [95m0[m)
(check-eq? (sum-lengths [38;5;224m'(() ())[m) [95m0[m)[50;159H[K[50;159H56,9[10C24%[44;9H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;3H([93mif[m ([1m[96mnull?[m ls)
    [95m0[m
    ([1m[96m+[m ([1m[96mlength[m ([1m[96mcar[m ls)) (sum-lengths ([1m[96mcdr[m ls)))))[50;159H[K[50;159H53,9[10C18%[44;9H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;Given a proper-list list of proper-lists, return the sum of the
;;lengths of all the top-level contained lists.[m
([93mdefine[m (sum-lengths ls)[50;159H[K[50;159H50,1[10C12%[44;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(require rackunit)

[96m;;Exercise 1[m[50;159H[K[50;159H47,9[11C6%[44;9H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H#!/usr/bin/env racket

#lang racket[50;159H[K[50;159H44,9[10CTop[44;9H[?25h[?25l[50;159H[K[50;159H44,9[10CTop[44;9H[?25h[?25l[50;159H[K[50;159H44,9[10CTop[44;9H[?25h[?25l[50;159H[K[50;159H44,9[10CTop[44;9H[?25h[?25l[50;159H[K[50;159H44,9[10CTop[44;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;;Exercise 2[m[50;159H[K[50;159H44,9[11C6%[41;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m[50;159H[K[50;159H44,9[10C12%[38;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[50;159H[K[50;159H44,9[10C18%[35;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;9H[38;5;224m'()[m[48;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[49;15H(greater-than ([1m[96mcdr[m ls) v)))))[50;159H[K[50;159H44,9[10C24%[32;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[49;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)[50;159H[K[50;159H44,9[10C30%[29;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H44,9[10C36%[26;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))[50;159H[K[50;159H44,9[10C42%[23;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H([93mcond[m

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[50;159H[K[50;159H44,9[10C48%[20;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H[K[50;159H44,9[10C54%[17;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[50;159H[K[50;159H44,9[10C60%[14;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[50;159H[K[50;159H44,9[10C66%[11;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[49;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[50;159H[K[50;159H44,9[10C72%[8;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H45,9[10C78%[6;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))[50;159H[K[50;159H48,9[10C84%[6;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[50;159H[K[50;159H51,9[10C90%[6;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)[50;159H[K[50;159H54,9[10C96%[6;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)

[94m~                                                                                                                                                                               [m[50;159H[K[50;159H57,9[10CBot[6;9H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H60,2-9[8CBot[6;9H[46m([7;40H)[6;9H[?25h[?25l[m([7;40H)[50;159H71,9  [17;9H[?25h[?25l[50;162H8[17;8H[?25h[?25l[18;49r[18;1H[L[1;50r[50;159H[K[50;159H72,5[10CBot[18;5H[?25h[?25l([50;162H6[18;6H[?25h[?25l([50;162H7[18;7H[?25h[?25ln[50;162H8[18;8H[?25h[?25lu[50;162H9[18;9H[?25h[?25ll[50;162H10[18;10H[?25h[?25ll[50;163H1[18;11H[?25h[?25l[1m[96mnull?[m[50;163H2[18;12H[?25h[?25l[50;163H3[18;13H[?25h[?25ll[50;163H4[18;14H[?25h[?25ls[50;163H5[18;15H[?25h[?25l)    ([46m([8C)[m[50;163H6[18;16H[?25h[?25l    (([8C)[50;163H7[18;17H[?25h[?25l[38;5;224m'[m[50;163H8[18;18H[?25h[?25l[38;5;224m(

([13C([22C)[4C)
([13C([28C)[7C)
([13C([26C)[7C)
([13C([35C)[9C)
([13C([33C)[11C)[28;1H([mdefine [38;5;224m([13C([3C))[29;6H)

([13C([28C)[32;35H)
([13C([26C)[34;35H)
([13C([13C)[4C)


([mdefine [38;5;224m([17C([3C))[39;6H)

([13C([19C)[4C)
([13C([25C)[6C)
([13C([23C)[6C)
([13C([32C)[11C)
([13C([30C)[9C)[m[50;163H9[18;19H[?25h[?25l[38;5;224m)[m

([13C([22C)[4C)
([13C([28C)[7C)
([13C([26C)[7C)
([13C([35C)[9C)
([13C([33C)[11C)[28;1H([93mdefine[m ([13C([3C))[29;6H)

([13C([28C)[32;35H)
([13C([26C)[34;35H)
([13C([13C)[4C)


([93mdefine[m ([17C([3C))[39;6H)

([13C([19C)[4C)
([13C([25C)[6C)
([13C([23C)[6C)
([13C([32C)[11C)
([13C([30C)[9C)[18;18H[38;5;224m[46m()[m[50;162H20[18;20H[?25h[?25l)    [46m([m[12C[38;5;224m()[m[46m)[m[50;163H1[18;21H[?25h[?25l[19;49r[19;1H[L[1;50r[50;159H[K[50;159H73,5[10CBot[18;5H([14C)
    [?25h[?25l([50;162H6[19;6H[?25h[?25l([50;162H7[19;7H[?25h[?25l[19;6H[K[50;162H6[19;6H[?25h[?25l([50;162H7[19;7H[?25h[?25l[1m[96m>[m[50;162H8[19;8H[?25h[?25l[19;7H[K[50;162H7[19;7H[?25h[?25l[19;6H[K[50;162H6[19;6H[?25h[?25le[50;162H7[19;7H[?25h[?25ll[50;162H8[19;8H[?25h[?25ls[50;162H9[19;9H[?25h[?25l[93melse[m[50;162H10[19;10H[?25h[?25l[50;163H1[19;11H[?25h[?25l([50;163H2[19;12H[?25h[?25lc[50;163H3[19;13H[?25h[?25lo[50;163H4[19;14H[?25h[?25ln[50;163H5[19;15H[?25h[?25l[1m[96mcons[m[50;163H6[19;16H[?25h[?25l[50;163H7[19;17H[?25h[?25l([50;163H8[19;18H[?25h[?25l[1m[96m>[m[50;163H9[19;19H[?25h[?25l[50;162H20[19;20H[?25h[?25l([50;163H1[19;21H[?25h[?25lc[50;163H2[19;22H[?25h[?25la[50;163H3[19;23H[?25h[?25l[1m[96mcar[m[50;163H4[19;24H[?25h[?25l[50;163H5[19;25H[?25h[?25ll[50;163H6[19;26H[?25h[?25ls[50;163H7[19;27H[?25h[?25l)[19;20H[46m([6C)[m[50;163H8[19;28H[?25h[?25l[19;20H([6C)[50;163H9[19;29H[?25h[?25lc[50;162H30[19;30H[?25h[?25l[19;29H[K[50;162H29[19;29H[?25h[?25lv[50;162H30[19;30H[?25h[?25l)[19;17H[46m([12C)[m[50;163H1[19;31H[?25h[?25l)[19;11H[46m([m[5C([12C)[46m)[m[50;163H2[19;32H[?25h[?25l[19;31H[K[19;11H([5C[46m([12C)[m[50;163H1[19;31H[?25h[?25l[19;17H([12C)[50;163H2[19;32H[?25h[?25l([50;163H3[19;33H[?25h[?25lg[50;163H4[19;34H[?25h[?25lr[50;163H5[19;35H[?25h[?25le[50;163H6[19;36H[?25h[?25l[19;35H[K[50;163H5[19;35H[?25h[?25l[19;34H[K[50;163H4[19;34H[?25h[?25le[50;163H5[19;35H[?25h[?25lt[50;163H6[19;36H[?25h[?25l-[50;163H7[19;37H[?25h[?25lg[50;163H8[19;38H[?25h[?25lr[50;163H9[19;39H[?25h[?25le[50;162H40[19;40H[?25h[?25la[50;163H1[19;41H[?25h[?25lt[50;163H2[19;42H[?25h[?25le[50;163H3[19;43H[?25h[?25lr[50;163H4[19;44H[?25h[?25l-[50;163H5[19;45H[?25h[?25lt[50;163H6[19;46H[?25h[?25lh[50;163H7[19;47H[?25h[?25la[50;163H8[19;48H[?25h[?25ln[50;163H9[19;49H[?25h[?25l[50;162H50[19;50H[?25h[?25l([50;163H1[19;51H[?25h[?25lc[50;163H2[19;52H[?25h[?25ld[50;163H3[19;53H[?25h[?25l[1m[96mcdr[m[50;163H4[19;54H[?25h[?25l[50;163H5[19;55H[?25h[?25ll[50;163H6[19;56H[?25h[?25ls[50;163H7[19;57H[?25h[?25l)[19;50H[46m([6C)[m[50;163H8[19;58H[?25h[?25l[19;50H([6C)[50;163H9[19;59H[?25h[?25lv[50;162H60[19;60H[?25h[?25l)[19;32H[46m([27C)[m[50;163H1[19;61H[?25h[?25l)[19;11H[46m([m[20C([27C)[46m)[m[50;163H2[19;62H[?25h[?25l)    [46m([m[5C([49C)[46m)[m[50;163H3[19;63H[?25h[?25l)[17;3H[46m([m[19;5H([56C)[46m)[m[50;163H4[19;64H[?25h[?25l)[16;1H[46m([m
  ([19;63H)[46m)[m[50;163H5[19;65H[?25h[50;1H[K[19;64H[?25l[50;149H^[[19;64H[50;149H  [19;65H[50;159H73,64[9CBot[19;64H[?25h[?25l[50;149H:[19;64H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 101L, 3046B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '(#t #t #f)
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '(#t #t #f)
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:78:0
actual:     '(#f #t #t #f #f #t)
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '(#f #t #t #f #t #t)
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:86:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:97:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:98:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:99:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:100:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 101L, 3046B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)[2;54H[K[3;1H[K[4;1H[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  ([38;5;130mletrec[m ([aux-poly-eval[9;14H([38;5;130mlambda[m (sum x-pow x coeffs)[10;16H([38;5;130mif[m ([36mnull?[m coeffs)[11;18Hsum[12;18H(aux-poly-eval ([36m+[m sum ([36m*[m x-pow ([36mcar[m coeffs))) ([36m*[m x-pow x) x ([36mcdr[m coeffs))))])
    (aux-poly-eval [31m0[m [31m1[m x coeffs)))

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[30;9H[35m'()[m[31;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[32;15H(greater-than ([36mcdr[m ls) v)))))

(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[35;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[37;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are greater than v[m
[106m([m[38;5;130mdefine[m (get-greater-than ls (v [31m0[m))
  ([38;5;130mcond[m
    (([36mnull?[m ls) [35m'()[m)
    ([38;5;130melse[m ([36mcons[m ([36m>[m ([36mcar[m ls) v) (get-greater-than ([36mcdr[m ls) v))))[106m)[m

(check-equal? (get-greater-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-greater-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m3[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m1[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m) [35m'([m[31m3[m[35m [m[31m6[m[35m [m[31m8[m[35m)[m)[50;159H73,64[9C55%[44;64H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  ([93mletrec[m ([aux-poly-eval[9;14H([93mlambda[m (sum x-pow x coeffs)[10;16H([93mif[m ([1m[96mnull?[m coeffs)[11;18Hsum[12;18H(aux-poly-eval ([1m[96m+[m sum ([1m[96m*[m x-pow ([1m[96mcar[m coeffs))) ([1m[96m*[m x-pow x) x ([1m[96mcdr[m coeffs))))])
    (aux-poly-eval [95m0[m [95m1[m x coeffs)))

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[30;9H[38;5;224m'()[m[31;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[32;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[35;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[37;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are greater than v[m
[46m([m[93mdefine[m (get-greater-than ls (v [95m0[m))
  ([93mcond[m
    (([1m[96mnull?[m ls) [38;5;224m'()[m)
    ([93melse[m ([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v))))[46m)[m

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H73,64[9C55%"lab5-sol.scm" 101L, 3046B[44;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[50;1H[K[50;159H73,64[9C61%[41;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[50;159H[K[50;159H73,64[9C67%[38;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[49;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[50;159H[K[50;159H73,64[9C73%[35;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H73,64[9C78%[32;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))[50;159H[K[50;159H73,64[9C84%[29;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[50;159H[K[50;159H73,64[9C90%[26;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)[50;159H[K[50;159H73,64[9C96%[23;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)

[94m~                                                                                                                                                                               [m[50;159H[K[50;159H73,64[9CBot[20;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H73,64[9CBot[17;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H73,64[9CBot[14;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H73,64[9CBot[11;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H73,64[9CBot[8;64H[?25h[?25l[1;49r[1;1H[3M[1;50r[2;1H([5;64H)[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H74,0-1[8CBot[6;1H[?25h[?25l[1;49r[1;1H[3M[1;50r[6;1H[46m([48C)[m[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H77,50[9CBot[6;50H[?25h[?25l[1;49r[1;1H[3M[1;50r[3;1H([48C)[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H80,0-1[8CBot[6;1H[?25h[?25l[1;49r[1;1H[3M[1;50r[6;9H[46m([18C)[m[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H83,28[9CBot[6;28H[?25h[?25l[1;49r[1;1H[3M[1;50r[3;9H([18C)[6;15H[46m([28C)[m[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H86,44[9CBot[6;44H[?25h[?25l[1;49r[1;1H[3M[1;50r[3;15H([28C)

[46m([6;35H)[m[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H89,28-35      Bot[6;35H[?25h[?25l[1;49r[1;1H[3M[1;50r[2;1H([3;35H)[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H92,57[9CBot[6;57H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H95,0-1[8CBot[6;1H[?25h[?25l[1;49r[1;1H[3M[1;50r[6;1H[46m([44C)[m[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H98,46[9CBot[6;46H[?25h[?25l[1;49r[1;1H[3M[1;50r[3;1H([44C)[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H101,0-1[7CBot[6;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)[50;159H[K[50;159H101,0-1[7CBot[9;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are less than v[m[50;159H[K[50;159H101,0-1[7CBot[12;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[3;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[50;159H[K[50;159H101,0-1[7CBot[15;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;3H[38;5;224m'()[m)

(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[50;159H[K[50;159H101,0-1[7CBot[18;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))[50;159H[K[50;159H101,0-1[7CBot[21;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H[K[50;159H101,0-1[7CBot[24;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)[50;159H[K[50;159H101,0-1[7CBot[27;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;5H(([1m[96mnull?[m ls) [38;5;224m'()[m)
    ([93melse[m ([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))[50;159H[K[50;159H101,0-1[7CBot[30;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  ([93mcond[m[50;159H[K[50;159H101,0-1[7CBot[33;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H101,0-1[7CBot[36;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[2;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H[K[50;159H101,0-1[7CBot[39;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[2;15H(greater-than ([1m[96mcdr[m ls) v)))))[50;159H[K[50;159H101,0-1[7CBot[42;1H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;3H([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[3;9H[38;5;224m'()[m[50;159H[K[50;159H101,0-1[7CBot[45;1H[?25h[?25l[50;159H76,39  [20;39H[?25h[?25l[50;160H8[22;39H[?25h[?25l[21;34H[38;5;224m[46m([6C)[m[50;160H7,41[21;41H[?25h[?25l[46m([m[32C[38;5;224m([6C)[m[8C[46m)[m[50;162H50[21;50H[?25h[?25l[19;1H[46m([41C)[m

([48C)[50;160H5,43[19;43H[?25h[?25l([41C)[21;34H[38;5;224m[46m([6C)[m[50;160H7,41[21;41H[?25h[?25l[21;34H[38;5;224m([6C)[m[50;160H6,40[20;40H[?25h[?25l[50;160H3,16[17;16H[?25h[?25l[50;149Hi[17;16H[50;149H [17;16H[50;1H[1m-- INSERT --[m[50;159H[K[50;159H73,16[9CBot[17;16H[?25h[?25lcon ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[17;64H[K[50;163H5[17;15H[?25h[?25l ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[17;63H[K[50;163H4[17;14H[?25h[?25l ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[17;62H[K[50;163H3[17;13H[?25h[?25l ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[17;61H[K[17;11H[46m([45C)[m[50;163H2[17;12H[?25h[?25la ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v[4C)[17;11H([45C)[50;163H3[17;13H[?25h[?25lp ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))[50;163H4[17;14H[?25h[?25lp ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))[50;163H5[17;15H[?25h[?25le ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))[50;163H6[17;16H[?25h[?25ln ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))[50;163H7[17;17H[?25h[?25l[1m[96mappend[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))[50;163H8[17;18H[?25h[?25l[16;5H[46m([14C)[m[50;160H2,21[16;21H[?25h[50;1H[K[16;20H[?25l[50;149H^[[16;20H[50;149H  [16;21H[50;159H72,20[9CBot[16;20H[?25h[?25l[50;149H:[16;20H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 101L, 3048B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lappend: contract violation
  expected: list?
  given: #f
  context...:
   /usr/share/racket/pkgs/rackunit-lib/rackunit/private/check.rkt:121:16
   "/home/dwalcot1/i471a/submit/lab5/lab5-sol.scm": [running body]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 101L, 3048B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H(check-eq? (sum-lengths-tr [35m'(() ())[m) [31m0[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)[2;46H[K[3;1H(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)[3;54H[K[5;1H[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  ([38;5;130mletrec[m ([aux-poly-eval[10;14H([38;5;130mlambda[m (sum x-pow x coeffs)[11;16H([38;5;130mif[m ([36mnull?[m coeffs)[12;18Hsum[13;18H(aux-poly-eval ([36m+[m sum ([36m*[m x-pow ([36mcar[m coeffs))) ([36m*[m x-pow x) x ([36mcdr[m coeffs))))])
    (aux-poly-eval [31m0[m [31m1[m x coeffs)))

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[31;9H[35m'()[m[32;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[33;15H(greater-than ([36mcdr[m ls) v)))))

(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[36;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[38;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are greater than v[m
([38;5;130mdefine[m (get-greater-than ls (v [31m0[m))
  ([38;5;130mcond[m
    [106m([m([36mnull?[m ls) [35m'()[m[106m)[m
    ([38;5;130melse[m ([36mappend[m ([36m>[m ([36mcar[m ls) v) (get-greater-than ([36mcdr[m ls) v)))))

(check-equal? (get-greater-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-greater-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m3[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m1[m[35m [m[31m2[m[35m)[m)[50;159H72,20[9C53%[44;20H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(() ())[m) [95m0[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  ([93mletrec[m ([aux-poly-eval[10;14H([93mlambda[m (sum x-pow x coeffs)[11;16H([93mif[m ([1m[96mnull?[m coeffs)[12;18Hsum[13;18H(aux-poly-eval ([1m[96m+[m sum ([1m[96m*[m x-pow ([1m[96mcar[m coeffs))) ([1m[96m*[m x-pow x) x ([1m[96mcdr[m coeffs))))])
    (aux-poly-eval [95m0[m [95m1[m x coeffs)))

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[31;9H[38;5;224m'()[m[32;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[33;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[36;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[38;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  ([93mcond[m
    [46m([m([1m[96mnull?[m ls) [38;5;224m'()[m[46m)[m
    ([93melse[m ([1m[96mappend[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)[50;159H72,20[9C53%"lab5-sol.scm" 101L, 3048B[44;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;1H[K[50;159H72,20[9C59%[41;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))[50;159H[K[50;159H72,20[9C65%[38;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[50;159H[K[50;159H72,20[9C71%[35;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[49;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[50;159H[K[50;159H72,20[9C76%[32;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are less than v[m[50;159H[K[50;159H72,20[9C82%[29;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)[50;159H[K[50;159H72,20[9C88%[26;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)[50;159H[K[50;159H72,20[9C94%[23;20H[?25h[?25l    ([14C)[50;160H3,18[24;18H[?25h[?25l[50;149Hi[24;18H[50;149H [24;18H[50;1H[1m-- INSERT --[m[50;159H[K[50;159H73,18[9C94%[24;18H[?25h[?25lappen ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[24;66H[K[50;163H7[24;17H[?25h[?25l ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[24;65H[K[50;163H6[24;16H[?25h[?25l ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[24;64H[K[50;163H5[24;15H[?25h[?25l ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[24;63H[K[50;163H4[24;14H[?25h[?25l ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[24;62H[K[50;163H3[24;13H[?25h[?25l ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[24;61H[K[24;11H[46m([45C)[m[50;163H2[24;12H[?25h[?25ll ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v[4C)[24;11H([45C)[50;163H3[24;13H[?25h[?25ls ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))[50;163H4[24;14H[?25h[?25li ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))[50;163H5[24;15H[?25h[?25l ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[24;63H[K[50;163H4[24;14H[?25h[?25l ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[24;62H[K[50;163H3[24;13H[?25h[?25li ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))[50;163H4[24;14H[?25h[?25ls ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))[50;163H5[24;15H[?25h[?25l[1m[96mlist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))[50;163H6[24;16H[?25h[?25l [46m([12C)[m[50;162H30[24;30H[?25h[50;1H[K[24;29H[?25l[50;149H^[[24;29H[50;149H  [24;30H[24;17H([12C)[50;159H73,29[9C94%[24;29H[?25h[?25l[50;149H:[24;29H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 101L, 3046B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:76:0
actual:     '(#t (#t (#f ())))
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:77:0
actual:     '(#t (#t (#f ())))
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:78:0
actual:     '(#f (#t (#t (#f (#f (#t ()))))))
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '(#f (#t (#t (#f (#t (#t ()))))))
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:86:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:97:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:98:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:99:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:100:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 101L, 3046B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [31m2[m[35m) ([m[31m2[m [31m1[m[35m))[m) [31m4[m)
(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)[2;54H[K[3;1H[K[4;1H[34m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  ([38;5;130mletrec[m ([aux-poly-eval[9;14H([38;5;130mlambda[m (sum x-pow x coeffs)[10;16H([38;5;130mif[m ([36mnull?[m coeffs)[11;18Hsum[12;18H(aux-poly-eval ([36m+[m sum ([36m*[m x-pow ([36mcar[m coeffs))) ([36m*[m x-pow x) x ([36mcdr[m coeffs))))])
    (aux-poly-eval [31m0[m [31m1[m x coeffs)))

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[30;9H[35m'()[m[31;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[32;15H(greater-than ([36mcdr[m ls) v)))))

(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[35;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[37;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are greater than v[m
([38;5;130mdefine[m (get-greater-than ls (v [31m0[m))
  ([38;5;130mcond[m
    (([36mnull?[m ls) [35m'()[m)
    ([38;5;130melse[m ([36mlist[m ([36m>[m ([36mcar[m ls) v) (get-greater-than ([36mcdr[m ls) v)))))

(check-equal? (get-greater-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-greater-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m3[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m1[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m) [35m'([m[31m3[m[35m [m[31m6[m[35m [m[31m8[m[35m)[m)[50;159H73,29[9C55%[44;29H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [95m2[m[38;5;224m) ([m[95m2[m [95m1[m[38;5;224m))[m) [95m4[m)
(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  ([93mletrec[m ([aux-poly-eval[9;14H([93mlambda[m (sum x-pow x coeffs)[10;16H([93mif[m ([1m[96mnull?[m coeffs)[11;18Hsum[12;18H(aux-poly-eval ([1m[96m+[m sum ([1m[96m*[m x-pow ([1m[96mcar[m coeffs))) ([1m[96m*[m x-pow x) x ([1m[96mcdr[m coeffs))))])
    (aux-poly-eval [95m0[m [95m1[m x coeffs)))

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[30;9H[38;5;224m'()[m[31;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[32;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[35;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[37;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  ([93mcond[m
    (([1m[96mnull?[m ls) [38;5;224m'()[m)
    ([93melse[m ([1m[96mlist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H73,29[9C55%"lab5-sol.scm" 101L, 3046B[44;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not[m[50;1H[K[50;159H73,29[9C61%[41;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)[50;159H[K[50;159H73,29[9C67%[38;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[49;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[50;159H[K[50;159H73,29[9C73%[35;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[48;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H73,29[9C78%[32;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))[50;159H[K[50;159H73,29[9C84%[29;29H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[50;159H[K[50;159H73,29[9C90%[26;29H[?25h[?25l[26;17H[46m([12C)[m[50;162H17[26;17H[?25h[?25l[25;5H[46m([14C)[m[26;17H([12C)[50;160H2,20[25;20H[?25h[?25l[50;149Hi[25;20H[50;149H [25;20H[50;1H[1m-- INSERT --[m[50;159H[K[50;159H72,20[9C90%[25;20H[?25h[?25l[50;163H1[25;21H[?25h[?25l    ([14C)[26;20H[46m([6C)[m[50;160H3[26;21H[?25h[?25l[50;163H0[26;20H[?25h[?25l([6C)[50;162H19[26;19H[?25h[?25l[46m([12C)[m[50;163H8[26;18H[?25h[?25l[50;163H7[26;17H[?25h[?25l[50;163H8[26;18H[?25h[?25l[25;18H[38;5;224m[46m()[m[26;17H([12C)[50;160H2[25;18H[?25h[?25l[50;163H9[25;19H[?25h[?25l    [46m([m[12C[38;5;224m()[m[46m)[m[50;162H20[25;20H[?25h[?25l[50;163H1[25;21H[?25h[?25l[26;49r[26;1H[L[1;50r[50;159H[K[50;159H73,5[10C88%[25;5H([14C)
    [?25h[?25l([46m([27;63H)[m[50;162H6[26;6H[?25h[?25l(([46m([m[50;162H7[26;7H[?25h[?25l[1m[96m>[m([27;63H)[50;162H8[26;8H[?25h[?25l[50;162H9[26;9H[?25h[?25lc[50;162H10[26;10H[?25h[?25la[50;163H1[26;11H[?25h[?25l[1m[96mcar[m[50;163H2[26;12H[?25h[?25l[50;163H3[26;13H[?25h[?25l[50;163H2[26;12H[?25h[?25lca[26;11H[K[50;163H1[26;11H[?25h[?25l[26;10H[K[50;163H0[26;10H[?25h[?25l[26;9H[K[50;162H9 [26;9H[?25h[?25l([46m([27;63H)[m[50;162H10[26;10H[?25h[?25lc([27;63H)[50;163H1[26;11H[?25h[?25la[50;163H2[26;12H[?25h[?25l[1m[96mcar[m[50;163H3[26;13H[?25h[?25l[50;163H4[26;14H[?25h[?25ll[50;163H5[26;15H[?25h[?25ls[50;163H6[26;16H[?25h[?25l)[26;9H[46m([6C)[m[50;163H7[26;17H[?25h[?25l[26;9H([6C)[50;163H8[26;18H[?25h[?25lv[50;163H9[26;19H[?25h[?25l)    ([46m([12C)[m[50;162H20[26;20H[?25h[?25l[27;49r[27;1H[L[1;50r[50;159H[K[50;159H74,6[10C87%[26;6H([12C)[27;6H[?25h[?25l([46m([28;63H)[m[50;162H7[27;7H[?25h[?25l([28;63H)[50;160H5[28;7H[?25h[?25l[50;162H8[28;8H[?25h[?25l[50;162H9[28;9H[?25h[?25l[50;162H10[28;10H[?25h[?25l [46m([49C)[m[50;163H1[28;11H[?25h[?25l([1m[96m[46ml[m[1m[96mist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[28;64H[K[28;10H[46m([m[1m[96mlist[m [44C[46m)[m)[50;163H0[28;10H[?25h[?25lels([1m[96m[46ml[m[1m[96mist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[28;63H[K[28;9H[46m([m[1m[96mlist[m [44C[46m)[m)[50;162H9 [28;9H[?25h[?25l([1m[96m[46ml[m[1m[96mist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[28;62H[K[28;8H[46m([m[1m[96mlist[m [44C[46m)[m)[50;162H8[28;8H[?25h[?25l([1m[96m[46ml[m[1m[96mist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[28;61H[K[28;7H[46m([m[1m[96mlist[m [44C[46m)[m)[50;162H7[28;7H[?25h[?25l([1m[96m[46ml[m[1m[96mist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[28;60H[K[28;6H[46m([m[1m[96mlist[m [44C[46m)[m)[50;162H6[28;6H[?25h[?25l[1m[96m[46ml[m[1m[96mist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[28;59H[K[28;5H[46m([m[1m[96mlist[m [44C[46m)[m)[50;162H5[28;5H[?25h[?25l([1m[96m[46ml[m[1m[96mist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[28;58H[K[28;4H[46m([m[1m[96mlist[m [44C[46m)[m)[50;162H4[28;4H[?25h[?25l([1m[96m[46ml[m[1m[96mist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[28;57H[K[28;3H[46m([m[1m[96mlist[m [44C[46m)[m)[50;162H3[28;3H[?25h[?25l([1m[96m[46ml[m[1m[96mist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[28;56H[K[28;2H[46m([m[1m[96mlist[m [44C[46m)[m)[50;162H2[28;2H[?25h[?25l([1m[96m[46ml[m[1m[96mist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[28;55H[K[28;1H[46m([m[1m[96mlist[m [44C[46m)[m)[50;162H1[28;1H[?25h[?25l[27;49r[49;1H
[1;50r[27;1H     (([1m[96mlist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)))))[50;159H[K[50;159H74,7[10C88%[27;7H[46m([49C)[27;7H[?25h[?25l[m[1m[96m[46ml[m[1m[96mist[m ([1m[96m>[m ([1m[96mcar[m ls) v) (get-greater-than ([1m[96mcdr[m ls) v)[27;60H[K[27;6H[46m([m[1m[96mlist[m [44C[46m)[m)[50;162H6[27;6H[?25h[?25l[50;162H7[27;7H[?25h[?25l([49C)[50;162H18[27;18H[?25h[?25l[46m([12C)[m[50;163H2[27;12H[?25h[?25l([2C[46m([6C)[m v)[50;163H5[27;15H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[46m [mv) (get-greater-than ([1m[96mcdr[m ls) v)[27;59H[K[27;14H[46m([m[1m[96mcar[m ls[46m)[m [50;163H4[27;14H[?25h[?25l([1m[96m[46mc[m[1m[96mar[m ls)[46m [mv) (get-greater-than ([1m[96mcdr[m ls) v)[27;58H[K[27;13H[46m([m[1m[96mcar[m ls[46m)[m [50;163H3[27;13H[?25h[?25l[1m[96m[46mc[m[1m[96mar[m ls)[46m [mv) (get-greater-than ([1m[96mcdr[m ls) v)[27;57H[K[27;12H[46m([m[1m[96mcar[m ls[46m)[m [50;163H2[27;12H[?25h[?25l[50;163H3[27;13H[?25h[?25l([6C)[50;163H4[27;14H[?25h[?25l[50;163H5[27;15H[?25h[?25l[50;163H6[27;16H[?25h[?25l[50;163H7[27;17H[?25h[?25l[50;163H8[27;18H[?25h[?25l[46m([6C)[m[50;163H9[27;19H[?25h[?25l[50;162H20[27;20H[?25h[?25l[27;12H([6C)[50;163H1[27;21H[?25h[?25l     [46m([15C)[m[50;163H2[27;22H[?25h[?25l[50;163H3[27;23H[?25h[?25l[46m [m(get-greater-than ([1m[96mcdr[m ls) v)[27;56H[K[27;6H([15C [50;163H2[27;22H[?25h[?25l (get-greater-than ([1m[96mcdr[m ls) v)[27;55H[K[50;163H1[27;21H[?25h[?25l(get-greater-than ([1m[96mcdr[m ls) v)[27;54H[K[27;12H[46m([6C)[m[50;163H0[27;20H[?25h[?25l[27;12H([6C) [46m([27C)[m[50;163H1[27;21H[?25h[?25l[50;163H2[27;22H[?25h[?25l([27C)[50;163H3[27;23H[?25h[?25l[50;163H4[27;24H[?25h[?25l[50;163H5[27;25H[?25h[?25l[50;163H6[27;26H[?25h[?25l[50;163H7[27;27H[?25h[?25l[50;163H8[27;28H[?25h[?25l[50;163H9[27;29H[?25h[?25l[50;163H8[27;28H[?25h[?25l[50;163H7[27;27H[?25h[?25l[50;163H6[27;26H[?25h[?25l[50;163H5[27;25H[?25h[?25l[50;163H4[27;24H[?25h[?25l[50;163H3[27;23H[?25h[?25l[46m([27C)[m[50;163H2[27;22H[?25h[?25l[50;163H1[27;21H[?25h[?25l[27;12H[46m([6C)[m ([27C)[50;163H0[27;20H[?25h[?25l[50;162H19[27;19H[?25h[?25l[50;162H20[27;20H[?25h[?25l[27;12H([6C) [46m([27C)[m[50;163H1[27;21H[?25h[?25l[50;163H2[27;22H[?25h[?25l([27C)[50;163H3[27;23H[?25h[?25l[50;163H4[27;24H[?25h[?25l[50;163H5[27;25H[?25h[?25l[50;163H6[27;26H[?25h[?25l[50;163H7[27;27H[?25h[?25l[50;163H8[27;28H[?25h[?25l[50;163H9[27;29H[?25h[?25l[50;162H30[27;30H[?25h[?25l[50;163H1[27;31H[?25h[?25l[50;163H2[27;32H[?25h[?25l[50;163H3[27;33H[?25h[?25l[50;163H4[27;34H[?25h[?25l[50;163H5[27;35H[?25h[?25l[50;163H6[27;36H[?25h[?25l[50;163H7[27;37H[?25h[?25l[50;163H8[27;38H[?25h[?25l [46m([6C)[m[50;163H9[27;39H[?25h[?25l[50;162H40[27;40H[?25h[?25l([6C)[50;163H1[27;41H[?25h[?25l[50;163H2[27;42H[?25h[?25l[50;163H3[27;43H[?25h[?25l[50;163H4[27;44H[?25h[?25l[50;163H5[27;45H[?25h[?25l[46m([6C)[m[50;163H6[27;46H[?25h[?25l[50;163H7[27;47H[?25h[?25l[27;39H([6C)[50;163H8[27;48H[?25h[?25l[27;21H[46m([27C)[m[50;163H9[27;49H[?25h[?25l     [46m([m[14C([27C)[46m)[m[50;162H50[27;50H[?25h[?25l[26;5H[46m([m[27;6H([43C)[46m)[m[50;163H1[27;51H[?25h[?25l[24;3H[46m([m[26;5H([27;51H)[46m)[m[50;163H2[27;52H[?25h[?25l[23;1H[46m([m
  ([27;52H)[46m)[m[50;163H3[27;53H[?25h[?25l[50;163H4[27;54H[?25h[?25l[27;53H[K[23;1H(
  [46m([27;52H)[m[50;163H3[27;53H[?25h[?25l[27;52H[K[24;3H([26;5H[46m([27;51H)[m[50;163H2[27;52H[?25h[?25l[28;49r[28;1H[L[1;50r[50;159H[K[50;159H75,5[10C87%[26;5H([27;51H)
    [?25h[?25l([50;162H6[28;6H[?25h[?25le[50;162H7[28;7H[?25h[?25ll[50;162H8[28;8H[?25h[?25ls[50;162H9[28;9H[?25h[?25l[93melse[m[50;162H10[28;10H[?25h[?25l[50;163H1[28;11H[?25h[?25lg[50;163H2[28;12H[?25h[?25le[50;163H3[28;13H[?25h[?25lt[50;163H4[28;14H[?25h[?25l-[50;163H5[28;15H[?25h[?25l[28;14H[K[50;163H4[28;14H[?25h[?25l[28;13H[K[50;163H3[28;13H[?25h[?25l[28;12H[K[50;163H2[28;12H[?25h[?25l[28;11H[K[50;163H1[28;11H[?25h[?25l([50;163H2[28;12H[?25h[?25lg[50;163H3[28;13H[?25h[?25le[50;163H4[28;14H[?25h[?25lt[50;163H5[28;15H[?25h[?25l[50;163H6[28;16H[?25h[?25l[50;163H5[28;15H[?25h[?25l-[50;163H6[28;16H[?25h[?25lg[50;163H7[28;17H[?25h[?25lr[50;163H8[28;18H[?25h[?25le[50;163H9[28;19H[?25h[?25la[50;162H20[28;20H[?25h[?25lt[50;163H1[28;21H[?25h[?25le[50;163H2[28;22H[?25h[?25lr[50;163H3[28;23H[?25h[?25l-[50;163H4[28;24H[?25h[?25lt[50;163H5[28;25H[?25h[?25lh[50;163H6[28;26H[?25h[?25la[50;163H7[28;27H[?25h[?25ln[50;163H8[28;28H[?25h[?25l[50;163H9[28;29H[?25h[?25l([50;162H30[28;30H[?25h[?25lc[50;163H1[28;31H[?25h[?25ld[50;163H2[28;32H[?25h[?25l[1m[96mcdr[m[50;163H3[28;33H[?25h[?25l[50;163H4[28;34H[?25h[?25ll[50;163H5[28;35H[?25h[?25ls[50;163H6[28;36H[?25h[?25l)[28;29H[46m([6C)[m[50;163H7[28;37H[?25h[?25l)[28;11H[46m([m[17C([6C)[46m)[m[50;163H8[28;38H[?25h[?25l)    [46m([m[5C([25C)[46m)[m[50;163H9[28;39H[?25h[?25l)[24;3H[46m([m[28;5H([32C)[46m)[m[50;162H40[28;40H[?25h[?25l)[23;1H[46m([m
  ([28;39H)[46m)[m[50;163H1[28;41H[?25h[50;1H[K[28;40H[?25l[50;149H^[[28;40H[50;149H  [28;41H[50;159H75,40[9C87%[28;40H[?25h[?25l[50;149HL[28;40H[50;149H [44;15H[23;1H([28;40H)[50;159H91,8-15[44;15H[?25h[?25l[50;159H79,23  [32;23H[?25h[?25l[50;149H^[[32;23H[50;149H  [32;23H[50;149H^[[32;23H[50;149H  [32;23H[?25h[?25l[50;149H:[32;23H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 103L, 3094B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:78:0
actual:     '(3 (2 ()))
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '(1 (2 ()))
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:80:0
actual:     '(3 (6 (1 (8 ()))))
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:81:0
actual:     '(3 (6 (1 (8 ()))))
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:99:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:100:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:101:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:102:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 103L, 3094B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H[34m;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than[2;21H[K[3;1H  ([38;5;130mlambda[m (ls (v [31m0[m))[3;21H[K[4;5H([38;5;130mif[m ([36mnull?[m ls)[5;9H[35m'()[m[6;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[7;15H(greater-than ([36mcdr[m ls) v)))))

(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[10;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[12;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are greater than v[m
([38;5;130mdefine[m (get-greater-than ls (v [31m0[m))
  ([38;5;130mcond[m
    (([36mnull?[m ls) [35m'()[m)
    (([36m>[m ([36mcar[m ls) v)[20;6H([36mlist[m ([36mcar[m ls) (get-greater-than ([36mcdr[m ls) v)))
    ([38;5;130melse[m (get-greater-than ([36mcdr[m ls)))))

(check-equal? (get-greater-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-greater-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m3[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m1[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m) [35m'([m[31m3[m[35m [m[31m6[m[35m [m[31m8[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m) [35m'([m[31m3[m[35m [m[31m6[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)

[34m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m (less-than ls (v [31m0[m))
  [35m'()[m)

(check-equal? (less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[35;15H[35m'([m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m)[m)
(check-equal? (less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[37;15H[35m'([m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m)[m)
(check-equal? (less-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are less than v[m
([38;5;130mdefine[m (get-less-than ls (v [31m0[m))
  [35m'()[m)

(check-equal? (get-less-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-less-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m-2[m[35m)[m)
(check-equal? (get-less-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m-2[m[35m)[m)
(check-equal? (get-less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m) [35m'([m[31m-1[m[35m [m[31m-3[m[35m [m[31m1[m[35m)[m)
(check-equal? (get-less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m) [35m'([m[31m-1[m[35m [m[31m-3[m[35m)[m)[50;159H79,23[9CBot[25;23H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[96m;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[5;9H[38;5;224m'()[m[6;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[7;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[10;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[12;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  ([93mcond[m
    (([1m[96mnull?[m ls) [38;5;224m'()[m)
    (([1m[96m>[m ([1m[96mcar[m ls) v)[20;6H([1m[96mlist[m ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)))
    ([93melse[m (get-greater-than ([1m[96mcdr[m ls)))))

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)

(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[35;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[37;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)[50;159H79,23[9CBot"lab5-sol.scm" 103L, 3094B[25;23H[?25h[?25l[50;159H80,45[26;45H[?25h[?25l[50;159H79,44[25;44H[?25h[?25l[50;160H8,42[24;42H[?25h[?25l[50;160H4,29[20;29H[?25h[?25l[11;30H[38;5;224m[46m([13C)[m[50;159H65,30[11;30H[?25h[?25l[38;5;224m([13C)[m[50;159H78,31[24;31H[?25h[?25l[19;6H[46m([12C)[m[50;160H3,19[19;19H[?25h[?25l    (([12C)[21;29H[46m([6C)[m[50;160H5,2[21;29H[?25h[?25l([6C)[50;160H6,0-1[22;1H[?25h[?25l[21;11H[46m([25C)[m[50;160H5,37 [21;37H[?25h[?25l[50;149Hi[21;37H[50;149H [21;37H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H75,37[9CBot[21;37H[?25h[?25l[21;11H([17C[46m([6C)[m)[50;163H6[21;36H[?25h[?25l[21;11H[46m([m[17C([6C)[46m)[m[50;163H7[21;37H[?25h[?25l[46m [m)))) [46m)[m[50;163H8[21;38H[?25h[?25l[46mv[m))))v[46m)[m[50;163H9[21;39H[?25h[?25l    [46m([m[5C([27C)[46m)[m[50;162H40[21;40H[?25h[?25l    ([5C[46m([27C)[m)[50;162H39[21;39H[?25h[?25l    [46m([m[5C([27C)[46m)[m[50;162H40[21;40H[?25h[?25l    ([5C[46m([27C)[m)[50;162H39[21;39H[?25h[?25l[21;11H([27C)[50;163H8[21;38H[?25h[?25l[21;29H[46m([6C)[m[50;163H7[21;37H[?25h[?25l[50;163H6[21;36H[?25h[?25l[21;29H([6C)[50;163H5[21;35H[?25h[?25l[50;163H4[21;34H[?25h[?25l[50;163H3[21;33H[?25h[?25l[50;163H2[21;32H[?25h[?25l[50;163H1[21;31H[?25h[?25l[50;160H4[20;31H[?25h[?25l[50;163H0[20;30H[?25h[?25l[50;162H29[20;29H[?25h[?25l[50;163H8[20;28H[?25h[?25l[50;163H7[20;27H[?25h[?25l[50;163H6[20;26H[?25h[?25l[50;163H5[20;25H[?25h[?25l[50;163H4[20;24H[?25h[?25l[50;163H3[20;23H[?25h[?25l[50;160H5[21;23H[?25h[?25l[50;163H2[21;22H[?25h[?25l[50;163H1[21;21H[?25h[?25l[50;163H0[21;20H[?25h[?25l[50;162H19[21;19H[?25h[?25l[50;163H8[21;18H[?25h[?25l[50;163H7[21;17H[?25h[?25l[50;163H6[21;16H[?25h[?25l[50;163H5[21;15H[?25h[?25l[50;163H4[21;14H[?25h[?25l[50;163H3[21;13H[?25h[?25l[46m([27C)[m[50;163H2[21;12H[?25h[?25l[50;163H1[21;11H[?25h[?25l[50;163H2[21;12H[?25h[?25l([27C)[50;163H3[21;13H[?25h[?25l[20;12H[46m([6C)[m[50;160H4[20;13H[?25h[?25l[50;163H2[20;12H[?25h[?25l([6C)[50;163H1[20;11H[?25h[?25l[50;163H0[20;10H[?25h[?25l[50;162H9 [20;9H[?25h[?25l[50;162H8[20;8H[?25h[?25l[46m([43C)[m[50;162H7[20;7H[?25h[?25l[50;162H6[20;6H[?25h[?25l[19;6H[46m([12C)[m[20;6H([43C)[50;160H3[19;6H[?25h[?25l[50;162H7[19;7H[?25h[?25l([12C)[20;6H[46m([43C)[m[50;160H4[20;7H[?25h[50;1H[K[20;6H[?25l[50;149H^[[20;6H[50;149H  [20;7H[50;159H74,6[10CBot[20;6H[?25h[?25l[50;149H:[20;6H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 103L, 3096B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:78:0
actual:     '(3 (2 ()))
expected:   '(3 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:79:0
actual:     '(1 (2 ()))
expected:   '(1 2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:80:0
actual:     '(3 (6 (8 ())))
expected:   '(3 6 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:81:0
actual:     '(3 (6 (1 (8 ()))))
expected:   '(3 6 1 8)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:99:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:100:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:101:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:102:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 103L, 3096B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)[2;1H[K[3;1H[34m;;Evaluate polynomial given by list coeffs at x; i.e. return[m[3;61H[K[4;1H[34m;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  ([38;5;130mletrec[m ([aux-poly-eval[8;14H([38;5;130mlambda[m (sum x-pow x coeffs)[9;16H([38;5;130mif[m ([36mnull?[m coeffs)[10;18Hsum[11;18H(aux-poly-eval ([36m+[m sum ([36m*[m x-pow ([36mcar[m coeffs))) ([36m*[m x-pow x) x ([36mcdr[m coeffs))))])
    (aux-poly-eval [31m0[m [31m1[m x coeffs)))

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[29;9H[35m'()[m[30;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[31;15H(greater-than ([36mcdr[m ls) v)))))

(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[34;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[36;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are greater than v[m
([38;5;130mdefine[m (get-greater-than ls (v [31m0[m))
  ([38;5;130mcond[m
    (([36mnull?[m ls) [35m'()[m)
    (([36m>[m ([36mcar[m ls) v)[44;6H[106m([m[36mlist[m ([36mcar[m ls) (get-greater-than ([36mcdr[m ls) v)[106m)[m)
    ([38;5;130melse[m (get-greater-than ([36mcdr[m ls) v))))

(check-equal? (get-greater-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-greater-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m3[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m1[m[35m [m[31m2[m[35m)[m)[50;159H74,6[10C55%[44;6H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  ([93mletrec[m ([aux-poly-eval[8;14H([93mlambda[m (sum x-pow x coeffs)[9;16H([93mif[m ([1m[96mnull?[m coeffs)[10;18Hsum[11;18H(aux-poly-eval ([1m[96m+[m sum ([1m[96m*[m x-pow ([1m[96mcar[m coeffs))) ([1m[96m*[m x-pow x) x ([1m[96mcdr[m coeffs))))])
    (aux-poly-eval [95m0[m [95m1[m x coeffs)))

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[29;9H[38;5;224m'()[m[30;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[31;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[34;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[36;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  ([93mcond[m
    (([1m[96mnull?[m ls) [38;5;224m'()[m)
    (([1m[96m>[m ([1m[96mcar[m ls) v)[44;6H[46m([m[1m[96mlist[m ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)[46m)[m)
    ([93melse[m (get-greater-than ([1m[96mcdr[m ls) v))))

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)[50;159H74,6[10C55%"lab5-sol.scm" 103L, 3096B[44;6H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;1H[K[50;159H74,6[10C61%[41;6H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))[50;159H[K[50;159H74,6[10C66%[38;6H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[50;159H[K[50;159H74,6[10C72%[35;6H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[49;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[50;159H[K[50;159H74,6[10C77%[32;6H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are less than v[m[50;159H[K[50;159H74,6[10C83%[29;6H[?25h[?25l([43C)[50;160H5,25[30;25H[?25h[?25l[29;21H[46m([27C)[m[50;160H4,21[29;21H[?25h[?25l([27C)[50;162H10[29;10H[?25h[?25l[46m([43C)[m[50;162H6 [29;6H[?25h[?25l([5C[46m([6C)[m[30C)[50;162H19[29;19H[?25h[?25l[29;12H([6C) [46m([27C)[m[50;162H21[29;21H[?25h[?25l[50;149H:[29;21H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m[23;2t[23;1t[50;1H[K[50;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 103L, 3096B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H(check-eq? (sum-lengths-tr [35m'(([m[31m1[m [35m(([m[31m2[m[35m))[m [31m3[m[35m) (([m[31m2[m [31m1[m[35m)))[m) [31m4[m)[2;1H[K[3;1H[34m;;Evaluate polynomial given by list coeffs at x; i.e. return[m[3;61H[K[4;1H[34m;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([38;5;130mdefine[m (poly-eval x coeffs)
  ([38;5;130mletrec[m ([aux-poly-eval[8;14H([38;5;130mlambda[m (sum x-pow x coeffs)[9;16H([38;5;130mif[m ([36mnull?[m coeffs)[10;18Hsum[11;18H(aux-poly-eval ([36m+[m sum ([36m*[m x-pow ([36mcar[m coeffs))) ([36m*[m x-pow x) x ([36mcdr[m coeffs))))])
    (aux-poly-eval [31m0[m [31m1[m x coeffs)))

(check-eq? (poly-eval [31m2[m [35m'()[m) [31m0[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m)[m) [31m5[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m)[m) [31m11[m)
(check-eq? (poly-eval [31m2[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m)[m) [31m-1[m)
(check-eq? (poly-eval [31m-1[m [35m'([m[31m5[m[35m [m[31m3[m[35m [m[31m-3[m[35m [m[31m5[m[35m)[m) [31m-6[m)

[34m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[29;9H[35m'()[m[30;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[31;15H(greater-than ([36mcdr[m ls) v)))))

(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[34;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[36;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are greater than v[m
([38;5;130mdefine[m (get-greater-than ls (v [31m0[m))
  ([38;5;130mcond[m
    (([36mnull?[m ls) [35m'()[m)
    (([36m>[m ([36mcar[m ls) v)[44;6H([36mlist[m ([36mcar[m ls) [106m([mget-greater-than ([36mcdr[m ls) v[106m)[m))
    ([38;5;130melse[m (get-greater-than ([36mcdr[m ls) v))))

(check-equal? (get-greater-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-greater-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m3[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m1[m[35m [m[31m2[m[35m)[m)[50;159H74,21[9C55%[44;21H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H(check-eq? (sum-lengths-tr [38;5;224m'(([m[95m1[m [38;5;224m(([m[95m2[m[38;5;224m))[m [95m3[m[38;5;224m) (([m[95m2[m [95m1[m[38;5;224m)))[m) [95m4[m)

[96m;;Evaluate polynomial given by list coeffs at x; i.e. return
;; coeffs[0] + coeffs[1]*x + coeffs[2]*x^2 + ...
;; all recursion should be tail-recursive[m
([93mdefine[m (poly-eval x coeffs)
  ([93mletrec[m ([aux-poly-eval[8;14H([93mlambda[m (sum x-pow x coeffs)[9;16H([93mif[m ([1m[96mnull?[m coeffs)[10;18Hsum[11;18H(aux-poly-eval ([1m[96m+[m sum ([1m[96m*[m x-pow ([1m[96mcar[m coeffs))) ([1m[96m*[m x-pow x) x ([1m[96mcdr[m coeffs))))])
    (aux-poly-eval [95m0[m [95m1[m x coeffs)))

(check-eq? (poly-eval [95m2[m [38;5;224m'()[m) [95m0[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)

[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[29;9H[38;5;224m'()[m[30;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[31;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[34;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[36;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  ([93mcond[m
    (([1m[96mnull?[m ls) [38;5;224m'()[m)
    (([1m[96m>[m ([1m[96mcar[m ls) v)[44;6H([1m[96mlist[m ([1m[96mcar[m ls) [46m([mget-greater-than ([1m[96mcdr[m ls) v[46m)[m))
    ([93melse[m (get-greater-than ([1m[96mcdr[m ls) v))))

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)[50;159H74,21[9C55%"lab5-sol.scm" 103L, 3096B[44;21H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;1H[K[50;159H74,21[9C61%[41;21H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))[50;159H[K[50;159H74,21[9C66%[38;21H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;3H[38;5;224m'()[m)

(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[50;159H[K[50;159H74,21[9C72%[35;21H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[49;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)[50;159H[K[50;159H74,21[9C77%[32;21H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are less than v[m[50;159H[K[50;159H74,21[9C83%[29;21H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)[50;159H[K[50;159H74,21[9C88%[26;21H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)[50;159H[K[50;159H74,21[9C94%[23;21H[?25h[?25l([27C)[50;162H1[23;11H[?25h[?25l[50;149Hi[23;11H[50;149H [23;11H[50;1H[1m-- INSERT --[m[50;159H[K[50;159H74,11[9C94%[23;11H[?25h[?25llis ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)[23;51H[K[50;163H0[23;10H[?25h[?25l ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)[23;50H[K[50;162H9 [23;9H[?25h[?25l ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)[23;49H[K[50;162H8[23;8H[?25h[?25l ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)[23;48H[K[23;6H[46m([39C)[m[50;162H7[23;7H[?25h[?25lc ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v[2C)     ([39C)[50;162H8[23;8H[?25h[?25lo ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)))[50;162H9[23;9H[?25h[?25ln ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)))[50;162H10[23;10H[?25h[?25l[1m[96mcons[m ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)))[50;163H1[23;11H[?25h[?25l[50;163H5[23;15H[?25h[?25l[46m([6C)[m[50;163H2[23;12H[?25h[?25l[50;163H9[23;19H[?25h[?25l[23;12H([6C)[50;162H24[23;24H[?25h[?25l[46m([27C)[m[50;163H1[23;21H[?25h[?25l([27C)[24;11H[46m([27C)[m[50;160H5,39[24;39H[?25h[?25l[19;1H[46m([m[24;11H([27C)))[46m)[m[50;162H43[24;43H[?25h[50;1H[K[24;42H[?25l[50;149H^[[24;42H[50;149H  [24;43H[50;159H75,42[9C94%[24;42H[?25h[?25l[50;149H:[24;42H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 103L, 3096B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:88:0
actual:     '()
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '()
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:99:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:100:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:101:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:102:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 103L, 3096B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H[34m;;Exercise 2[m[2;1H[K[3;1H[34m;;from lab 4:[m[3;14H[K[4;1H[34m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m greater-than
  ([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[9;9H[35m'()[m[10;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[11;15H(greater-than ([36mcdr[m ls) v)))))

(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[14;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[16;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are greater than v[m
[106m([m[38;5;130mdefine[m (get-greater-than ls (v [31m0[m))
  ([38;5;130mcond[m
    (([36mnull?[m ls) [35m'()[m)
    (([36m>[m ([36mcar[m ls) v)[24;6H([36mcons[m ([36mcar[m ls) (get-greater-than ([36mcdr[m ls) v)))
    ([38;5;130melse[m (get-greater-than ([36mcdr[m ls) v)))[106m)[m

(check-equal? (get-greater-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-greater-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m3[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m1[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m) [35m'([m[31m3[m[35m [m[31m6[m[35m [m[31m8[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m) [35m'([m[31m3[m[35m [m[31m6[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)

[34m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m (less-than ls (v [31m0[m))
  [35m'()[m)

(check-equal? (less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[39;15H[35m'([m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m)[m)
(check-equal? (less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[41;15H[35m'([m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m)[m)
(check-equal? (less-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are less than v[m
([38;5;130mdefine[m (get-less-than ls (v [31m0[m))
  [35m'()[m)

(check-equal? (get-less-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-less-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m-2[m[35m)[m)[50;159H75,42[9C92%[25;42H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[96m;;Exercise 2

;;from lab 4:
;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than
  ([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[9;9H[38;5;224m'()[m[10;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[11;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[14;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[16;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are greater than v[m
[46m([m[93mdefine[m (get-greater-than ls (v [95m0[m))
  ([93mcond[m
    (([1m[96mnull?[m ls) [38;5;224m'()[m)
    (([1m[96m>[m ([1m[96mcar[m ls) v)[24;6H([1m[96mcons[m ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)))
    ([93melse[m (get-greater-than ([1m[96mcdr[m ls) v)))[46m)[m

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  [38;5;224m'()[m)

(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[39;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[41;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)[50;159H75,42[9C92%"lab5-sol.scm" 103L, 3096B[25;42H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)[50;1H[K[50;159H75,42[9C98%[22;42H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[94m~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H75,42[9CBot[19;42H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H75,42[9CBot[16;42H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H75,42[9CBot[13;42H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H75,42[9CBot[10;42H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H75,42[9CBot[7;42H[?25h[?25l[1;49r[1;1H[3M[1;50r[4;42H)[6;41H[38;5;224m[46m()[m[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H77,42[9CBot[6;42H[?25h[?25l[1;49r[1;1H[3M[1;50r[3;41H[38;5;224m()[m[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H80,42[9CBot[6;42H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H83,42[9CBot[6;42H[?25h[?25l[1;49r[1;1H[3M[1;50r[5;1H[46m([6;6H)[m[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H86,6[10CBot[6;6H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H[K[50;159H86,6[10CBot[9;6H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;5H([93melse[m (get-greater-than ([1m[96mcdr[m ls) v))))

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)[50;159H[K[50;159H86,6[10CBot[12;6H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;5H(([1m[96mnull?[m ls) [38;5;224m'()[m)
    (([1m[96m>[m ([1m[96mcar[m ls) v)[3;6H([1m[96mcons[m ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)))[50;159H[K[50;159H86,6[10CBot[15;6H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  ([93mcond[m[50;159H[K[50;159H86,6[10CBot[18;6H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H86,6[10CBot[21;6H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[2;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H[K[50;159H86,6[10CBot[24;6H[?25h[?25l[23;1H([24;6H)[50;159H75,23[13;23H[?25h[?25l[50;160H6,0-1[14;1H[?25h[?25l[50;1H[1m-- VISUAL --[m[50;159H[K[50;159H76,0-1[8CBot[14;1H[?25h[?25l[50;149H1[14;1H[?25h[?25l[50;149H [17;36H[50;1H[K[50;159H79,36[9CBot[17;36H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H79,36[9CBot[14;36H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[2;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H[K[50;159H79,36[9CBot[17;36H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[2;15H(greater-than ([1m[96mcdr[m ls) v)))))[50;159H[K[50;159H79,36[9CBot[20;36H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;3H([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[3;9H[38;5;224m'()[m[50;159H[K[50;159H79,36[9CBot[23;36H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m greater-than[50;159H[K[50;159H79,36[9C98%[26;36H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H[96m;;Exercise 2

;;from lab 4:[m[50;159H[K[50;159H79,36[9C92%[29;36H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)
(check-eq? (poly-eval [95m-1[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m5[m[38;5;224m)[m) [95m-6[m)[50;159H[K[50;159H79,36[9C87%[32;36H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m)[m) [95m5[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m)[m) [95m11[m)
(check-eq? (poly-eval [95m2[m [38;5;224m'([m[95m5[m[38;5;224m [m[95m3[m[38;5;224m [m[95m-3[m[38;5;224m)[m) [95m-1[m)[50;159H[K[50;159H79,36[9C81%[35;36H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)[50;159H[K[50;159H79,36[9C87%[32;36H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)[50;159H[K[50;159H79,36[9C92%[29;36H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)[50;159H[K[50;159H79,36[9C98%[26;36H[?25h[?25l[1;49r[1;1H[3M[1;50r[48;1H[94m~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H79,36[9CBot[23;36H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H79,36[9CBot[20;36H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H79,36[9CBot[17;36H[?25h[?25l[9;3H[46m([13;41H)[m[50;160H1,3 [9;3H[?25h[?25l[50;149H2[9;4H[48;5;242m([m[13;41H)[50;1H[1m-- VISUAL --[m[50;149H[K[50;149H2[9;4H[50;159H71,4[10CBot[9;4H[?25h[?25l[50;149H3[9;5H[93m[48;5;242mc[m[50;162H5[9;5H[?25h[?25l[50;149H2[10;6H[9;5H[93m[48;5;242mond[m[48;5;242m 
    ([m[46m([8C)[m[50;160H2,6[10;6H[?25h[?25l[1C[48;5;242m([m[8C)[50;162H7[10;7H[?25h[?25l[1C[1m[96m[48;5;242mn[m[1m[96mull?[m [50;162H8[10;8H[?25h[?25l[1C[1m[96m[48;5;242mu[m[1m[96mll?[m [50;162H9[10;9H[?25h[?25l[50;149H3[11;10H[10;9H[1m[96m[48;5;242mll?[m[48;5;242m ls) [m[38;5;224m[48;5;242m'()[m[48;5;242m) 
    (([m[1m[96m[48;5;242m>[m[48;5;242m ([m[50;160H3,10[11;10H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mar[m [50;163H1[11;11H[?25h[?25l[1C[1m[96m[48;5;242ma[m[1m[96mr[m [50;163H2[11;12H[?25h[?25l[1C[1m[96m[48;5;242mr[m [50;163H3[11;13H[?25h[?25l[50;149H4[12;14H[11;13H[48;5;242m ls) v) 
     ([m[1m[96m[48;5;242mcons[m[48;5;242m ([m[1m[96m[48;5;242mc[m[1m[96mar[m [50;160H4,14[12;14H[?25h[?25l[1C[1m[96m[48;5;242ma[m[1m[96mr[m [50;163H5[12;15H[?25h[?25l[1C[1m[96m[48;5;242mr[m [50;163H6[12;16H[?25h[?25l [48;5;242m [m[50;163H7[12;17H[?25h[?25l[50;149H5[13;18H[12;17H[48;5;242mls) (get-greater-than ([m[1m[96m[48;5;242mcdr[m[48;5;242m ls) v))) 
    ([m[93m[48;5;242melse[m[48;5;242m (get-gr[m[50;160H5,18[13;18H[?25h[?25le[48;5;242me[m[50;163H9[13;19H[?25h[?25la[48;5;242ma[m[50;162H20[13;20H[?25h[?25lt[48;5;242mt[m[50;163H1[13;21H[?25h[?25le[48;5;242me[m[50;163H2[13;22H[?25h[?25lr[48;5;242mr[m[50;163H3[13;23H[?25h[?25l-[48;5;242m-[m[50;163H4[13;24H[?25h[?25lt[48;5;242mt[m[50;163H5[13;25H[?25h[?25lh[48;5;242mh[m[50;163H6[13;26H[?25h[?25la[48;5;242ma[m[50;163H7[13;27H[?25h[?25ln[48;5;242mn[m[50;163H8[13;28H[?25h[?25l [48;5;242m [m[46m([6C)[m[50;163H9[13;29H[?25h[?25l[1C[48;5;242m([m[6C)[50;162H30[13;30H[?25h[?25l[2C[1m[96m[48;5;242mcd[m[1m[96mr[m [50;163H2[13;32H[?25h[?25l[1C[1m[96m[48;5;242mr[m [50;163H3[13;33H[?25h[?25l [48;5;242m [m[50;163H4[13;34H[?25h[?25ll[48;5;242ml[m[50;163H5[13;35H[?25h[?25ls[48;5;242ms[m[46m)[m[50;163H6[13;36H[?25h[?25l[1C[48;5;242m)[m[50;163H7[13;37H[?25h[?25l [48;5;242m [m[50;163H8[13;38H[?25h[?25lv[48;5;242mv[m[46m)[m[50;163H9[13;39H[?25h[?25l[1C[48;5;242m)[m[46m)[m[50;162H40[13;40H[?25h[?25l[1C[48;5;242m)[m[46m)[m[50;163H1[13;41H[?25h[?25l[1C[8;1H[46m([m[13;41H[48;5;242m)[m[46m)[m[50;163H2[13;42H[?25h[?25l[?25h[?25l[50;149Hy[13;42H[9;3H([93mcond[m[9;8H[K[10;1H    (([1m[96mnull?[m ls) [38;5;224m'()[m)[10;21H[K[11;1H    (([1m[96m>[m ([1m[96mcar[m ls) v)[11;20H[K[12;1H     ([1m[96mcons[m ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)))[12;52H[K[13;1H    ([93melse[m (get-greater-than ([1m[96mcdr[m ls) v)))[50;1H[K[50;159H71,3[10CBot5 lines yanked[50;159H[K[9;3H[8;1H(
  [46m([13;41H)[m)[50;159H71,3[10CBot[9;3H[?25h[?25l([13;41H)[23;1H[46m([24;6H)[m[50;159H86,6[24;6H[?25h[?25l[50;149Hi[24;6H[50;149H [24;6H[50;1H[1m-- INSERT --[m[50;13H[K[50;159H86,6[10CBot[24;6H[?25h[?25l[50;162H7[24;7H[?25h[?25l[24;6H[K[23;1H([24;4H[38;5;224m[46m()[m[50;162H6[24;6H[?25h[?25l[24;5H[K[26;1H[38;5;224m([13C([28C)[27;35H)
([13C([26C)[29;35H)
([13C([13C)[4C)


([mdefine [38;5;224m([17C([3C))[34;6H)

([13C([19C)[4C)
([13C([25C)[6C)
([13C([23C)[6C)
([13C([32C)[11C)
([13C([30C)[9C)[24;4H([m[50;162H5[24;5H[?25h[?25l[24;4H[K[26;1H([13C([28C)[27;35H)
([13C([26C)[29;35H)
([13C([13C)[4C)


([93mdefine[m ([17C([3C))[34;6H)

([13C([19C)[4C)
([13C([25C)[6C)
([13C([23C)[6C)
([13C([32C)[11C)
([13C([30C)[9C)[50;162H4[24;4H[?25h[?25l[24;3H[K[50;162H3[24;3H[?25h[?25l[50;162H2[24;2H[?25h[?25l[50;162H1[24;1H[?25h[?25l[23;49r[49;1H
[1;50r[23;1H([93mdefine[m (less-than ls (v [95m0[m))[49;1H[94m~                                                                                                                                                                               [m[50;159H[K[50;159H85,29[9CBot[23;9H[46m([18C)[?25h[?25l[24;49r[m[24;1H[L[1;50r[50;159H[K[50;159H86,3[10CBot[23;9H([18C)
  [?25h[50;1H[K[24;1H[?25l[50;149H^[[24;1H[50;149H  [24;3H[50;159H86,0-1[8CBot[24;1H[?25h[?25l[50;149Hp[24;1H[50;1H4 more lines[50;149H[K[24;1H[25;49r[25;1H[4L[1;50r[24;1H[46m([m[93mcond[m
    (([1m[96mnull?[m ls) [38;5;224m'()[m)
    (([1m[96m>[m ([1m[96mcar[m ls) v)[27;6H([1m[96mcons[m ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)))
    ([93melse[m (get-greater-than ([1m[96mcdr[m ls) v))[46m)[m)[50;1H[K[50;159H86,1[10CBot4 more lines[50;159H[K[50;159H86,1[10CBot[24;1H[?25h[?25l[50;149Hi[24;1H[50;149H [24;1H[50;1H[1m-- INSERT --[m[50;159H[K[50;159H86,1[10CBot[24;1H[?25h[?25l[46m [m([93mcond[m [46m([m[50;162H2[24;2H[?25h[?25l([93m[46mc[m[93mond[m[24;6H[K[24;1H[46m([m[93mc[m[50;162H1[24;1H[?25h[?25l[23;49r[49;1H
[1;50r[23;1H([93mdefine[m (less-than ls (v [95m0[m))([93mcond[m
[46m [m[27;41H)[49;1H[94m~                                                                                                                                                                               [m[50;159H[K[50;159H85,29[9CBot[23;29H[46m([m
 [27;41H[46m)[23;29H[?25h[?25l[24;49r[m[24;1H[L[1;50r[23;29H[K[24;3H([93mcond[m[27;41H[1m[96m[46md[m[1m[96mr[m [28;41H)[50;159H[K[50;159H86,3[10CBot[24;3H[46m([m[27;41H[1m[96mdr[m [28;41H[46m)[24;3H[?25h[?25l[m([25;6H[46m([8C)[m[28;41H)[50;160H7,6[25;6H[?25h[?25l[46m([m([8C)[4C[46m)[m[50;162H5[25;5H[?25h[?25l([1C[1m[96mnull?[m ls) [38;5;224m'()[m)[25;20H[K[25;4H[46m([m([13C[46m)[m[50;162H4[25;4H[?25h[?25l([1C[1m[96mnull?[m ls) [38;5;224m'()[m)[25;19H[K[25;3H[46m([m([13C[46m)[m[50;162H3[25;3H[?25h[?25l([1C[1m[96mnull?[m ls) [38;5;224m'()[m)[25;18H[K[25;2H[46m([m([13C[46m)[m[50;162H2[25;2H[?25h[?25l([1C[1m[96mnull?[m ls) [38;5;224m'()[m)[25;17H[K[25;1H[46m([m([13C[46m)[m[50;162H1[25;1H[?25h[?25l[24;49r[49;1H
[1;50r[24;1H  ([93mcond[m(([1m[96mnull?[m ls) [38;5;224m'()[m)
[46m [14C)[m[49;1H[94m~                                                                                                                                                                               [m[50;159H[K[50;159H86,8[10CBot[24;8H[46m([14C)[m
 [14C)[24;8H[?25h[?25l[25;49r[25;1H[L[1;50r[24;8H[K[25;5H(([1m[96mnull?[m ls) [38;5;224m'()[m)[50;159H[K[50;159H87,5[10CBot[25;5H[46m([14C)[m    [?25h[?25l([14C)[50;160H9,8[27;8H[?25h[?25l[26;9H[46m([6C)[m[50;160H8,10[26;10H[?25h[?25l([6C)[50;162H8 [26;8H[?25h[?25l>i ([1m[96mcar[m ls) v)[50;162H9[26;9H[?25h[?25l[1m[96m>[m ([1m[96mcar[m ls) v)[26;20H[K[50;162H8[26;8H[?25h[?25l[50;4H[1m(insert)- VISUAL --[m[50;159H[K[50;149H2[26;6H[50;159H88,6[10CBot[26;6H[48;5;242m([m[46m([12C)[26;6H[?25h[?25l[m[50;149H3[26;7H[48;5;242m([m[12C)[50;162H7[26;7H[?25h[?25l[50;149H4[26;8H[1m[96m[48;5;242m>[m [50;162H8[26;8H[?25h[?25l[50;149H2[27;8H[26;8H[48;5;242m ([m[1m[96m[48;5;242mcar[m[48;5;242m ls) v) 
     ([m[1m[96m[48;5;242mc[m[1m[96mons[m [50;160H9[27;8H[?25h[?25l[1C[1m[96m[48;5;242mo[m[1m[96mns[m [50;162H9[27;9H[?25h[?25l[1C[1m[96m[48;5;242mn[m[1m[96ms[m [50;162H10[27;10H[?25h[?25l[1C[1m[96m[48;5;242ms[m [50;163H1[27;11H[?25h[?25l [48;5;242m [m[46m([6C)[m[50;163H2[27;12H[?25h[?25l[2C[48;5;242m([m[1m[96m[48;5;242mc[m[1m[96mar[m ls)[50;163H4[27;14H[?25h[?25l[1C[1m[96m[48;5;242ma[m[1m[96mr[m [50;163H5[27;15H[?25h[?25l[1C[1m[96m[48;5;242mr[m [50;163H6[27;16H[?25h[?25l [48;5;242m [m[50;163H7[27;17H[?25h[?25lls[48;5;242mls[m[46m)[m[50;163H9[27;19H[?25h[?25l[1C[48;5;242m)[m[50;162H20[27;20H[?25h[?25l [48;5;242m [m[46m([27C)[m[50;163H1[27;21H[?25h[?25l[1C[48;5;242m([m[27C)[50;163H2[27;22H[?25h[?25lg[48;5;242mg[m[50;163H3[27;23H[?25h[?25le[48;5;242me[m[50;163H4[27;24H[?25h[?25lt[48;5;242mt[m[50;163H5[27;25H[?25h[?25l-[48;5;242m-[m[50;163H6[27;26H[?25h[?25lg[48;5;242mg[m[50;163H7[27;27H[?25h[?25lr[48;5;242mr[m[50;163H8[27;28H[?25h[?25le[48;5;242me[m[50;163H9[27;29H[?25h[?25la[48;5;242ma[m[50;162H30[27;30H[?25h[?25lt[48;5;242mt[m[50;163H1[27;31H[?25h[?25le[48;5;242me[m[50;163H2[27;32H[?25h[?25lr[48;5;242mr[m[50;163H3[27;33H[?25h[?25l-[48;5;242m-[m[50;163H4[27;34H[?25h[?25lt[48;5;242mt[m[50;163H5[27;35H[?25h[?25lh[48;5;242mh[m[50;163H6[27;36H[?25h[?25la[48;5;242ma[m[50;163H7[27;37H[?25h[?25ln[48;5;242mn[m[50;163H8[27;38H[?25h[?25l [48;5;242m [m[46m([6C)[m[50;163H9[27;39H[?25h[?25l[1C[48;5;242m([m[6C)[50;162H40[27;40H[?25h[?25l[1C[1m[96m[48;5;242mc[m[1m[96mdr[m [50;163H1[27;41H[?25h[?25l[1C[1m[96m[48;5;242md[m[1m[96mr[m [50;163H2[27;42H[?25h[?25l[1C[1m[96m[48;5;242mr[m [50;163H3[27;43H[?25h[?25l [48;5;242m [m[50;163H4[27;44H[?25h[?25ll[48;5;242ml[m[50;163H5[27;45H[?25h[?25ls[48;5;242ms[m[46m)[m[50;163H6[27;46H[?25h[?25l[1C[48;5;242m)[m[50;163H7[27;47H[?25h[?25l [48;5;242m [m[50;163H8[27;48H[?25h[?25lv[48;5;242mv[m[46m)[m[50;163H9[27;49H[?25h[?25l[1C[48;5;242m)[m[46m)[m[50;162H50[27;50H[?25h[?25l[1C[48;5;242m)[m[46m)[m[50;163H1[27;51H[?25h[?25l[?25h[?25l[50;149Hc[27;51H[50;149H [26;5H[50;4H[1mINSERTt --[m[50;13H[K[50;159H88,5[10CBot[26;49r[49;1H
[1;50r[26;1H    [26;5H[K[49;1H[94m~                                                                                                                                                                               [m[50;159H[K[50;159H88,5[10CBot[26;5H[?25h[?25l[50;162H4[26;4H[?25h[?25l[50;162H3[26;3H[?25h[?25l[50;162H2[26;2H[?25h[?25l[50;162H1[26;1H[?25h[?25l[25;49r[49;1H
[1;50r[25;5H(([1m[96mnull?[m ls) [38;5;224m'()[m)[49;1H[94m~                                                                                                                                                                               [m[50;159H[K[50;159H87,21[9CBot[25;5H[46m([14C)[?25h[?25l[m    ([14C)[50;160H8,23[26;23H[?25h[?25l-than ([1m[96mcdr[m ls) v)[26;42H[K[50;163H2[26;22H[?25h[?25l-than ([1m[96mcdr[m ls) v)[26;41H[K[50;163H1[26;21H[?25h[?25l-than ([1m[96mcdr[m ls) v)[26;40H[K[50;163H0[26;20H[?25h[?25l-than ([1m[96mcdr[m ls) v)[26;39H[K[50;162H19[26;19H[?25h[?25l-than ([1m[96mcdr[m ls) v)[26;38H[K[50;163H8[26;18H[?25h[?25l-than ([1m[96mcdr[m ls) v)[26;37H[K[50;163H7[26;17H[?25h[?25l-than ([1m[96mcdr[m ls) v)[26;36H[K[50;163H6[26;16H[?25h[?25lthan ([1m[96mcdr[m ls) v)[26;35H[K[50;163H5[26;15H[?25h[?25l-than ([1m[96mcdr[m ls) v)[26;34H[K[50;163H4[26;14H[?25h[?25l-than ([1m[96mcdr[m ls) v)[26;33H[K[50;163H3[26;13H[?25h[?25l-than ([1m[96mcdr[m ls) v)[26;32H[K[26;11H[46m([16C)[m[50;163H2[26;12H[?25h[?25ll-than ([1m[96mcdr[m ls) [46mv[m))))[26;11H([16Cv[50;163H3[26;13H[?25h[?25le-than ([1m[96mcdr[m ls) v))))[50;163H4[26;14H[?25h[?25ls-than ([1m[96mcdr[m ls) v))))[50;163H5[26;15H[?25h[?25ls-than ([1m[96mcdr[m ls) v))))[50;163H6[26;16H[?25h[?25l-than [46m([6C)[m[50;162H23[26;23H[?25h[?25l[26;11H[46m([m[10C([6C) v[46m)[m[50;162H11[26;11H[?25h[?25l[50;163H2[26;12H[?25h[?25l[50;163H1[26;11H[?25h[?25l[1C(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;11H([46m([m[19Cv[46m)[m[50;163H2[26;12H[?25h[?25l[46mc[m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;12Hc[46m([m[19Cv[46m)[m[50;163H3[26;13H[?25h[?25l[46mo[m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;13Ho[46m([m[19Cv[46m)[m[50;163H4[26;14H[?25h[?25l[46mn[m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;14Hn[46m([m[19Cv[46m)[m[50;163H5[26;15H[?25h[?25l[1m[96mcon[m[1m[96m[46ms[m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;15H[1m[96ms[m[46m([m[19Cv[46m)[m[50;163H6[26;16H[?25h[?25l[46m [m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;16H [46m([m[19Cv[46m)[m[50;163H7[26;17H[?25h[?25l[1C(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;17H([46m([m[19Cv[46m)[m[50;163H8[26;18H[?25h[?25l[1m[96m[46m<[m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;18H[1m[96m<[m[46m([m[19Cv[46m)[m[50;163H9[26;19H[?25h[?25l[46m [m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;19H [46m([m[19Cv[46m)[m[50;162H20[26;20H[?25h[?25l[1C(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;20H([46m([m[19Cv[46m)[m[50;163H1[26;21H[?25h[?25l[46mc[m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;21Hc[46m([m[19Cv[46m)[m[50;163H2[26;22H[?25h[?25l[46ma[m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;22Ha[46m([m[19Cv[46m)[m[50;163H3[26;23H[?25h[?25l[1m[96mca[m[1m[96m[46mr[m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;23H[1m[96mr[m[46m([m[19Cv[46m)[m[50;163H4[26;24H[?25h[?25l[46m [m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;24H [46m([m[19Cv[46m)[m[50;163H5[26;25H[?25h[?25l[46ml[m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;25Hl[46m([m[19Cv[46m)[m[50;163H6[26;26H[?25h[?25l[46ms[m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;26Hs[46m([m[19Cv[46m)[m[50;163H7[26;27H[?25h[?25l[46m)[m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;27H)[46m([m[19Cv[46m)[m[50;163H8[26;28H[?25h[?25l[46m)[m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;28H)[46m([m[19Cv[46m)[m[50;163H9[26;29H[?25h[?25l[50;162H30[26;30H[?25h[?25l[50;162H29[26;29H[?25h[?25l[46m [m(less-than ([1m[96mcdr[m ls) [46mv[m))))[26;29H [46m([m[19Cv[46m)[m[50;162H30[26;30H[?25h[?25l[50;163H1[26;31H[?25h[?25l[50;163H0[26;30H[?25h[?25l[26;17H[46m([10C)[m ([20C)[50;162H29[26;29H[?25h[?25l[50;163H8[26;28H[?25h[?25l[50;163H9[26;29H[?25h[?25l[26;17H([10C) [46m([20C)[m[50;162H30[26;30H[?25h[?25l[50;163H1[26;31H[?25h[?25l([20C)[50;163H2[26;32H[?25h[?25l[50;163H3[26;33H[?25h[?25l[50;163H4[26;34H[?25h[?25l[50;163H5[26;35H[?25h[?25l[50;163H6[26;36H[?25h[?25l[50;163H7[26;37H[?25h[?25l[50;163H8[26;38H[?25h[?25l[50;163H9[26;39H[?25h[?25l[50;162H40[26;40H[?25h[?25l [46m([6C)[m[50;163H1[26;41H[?25h[?25l[50;163H2[26;42H[?25h[?25l([6C)[50;163H3[26;43H[?25h[?25l[50;163H4[26;44H[?25h[?25l[50;163H5[26;45H[?25h[?25l[50;163H6[26;46H[?25h[?25l[50;163H7[26;47H[?25h[?25l[46m([6C)[m[50;163H8[26;48H[?25h[?25l[50;163H9[26;49H[?25h[?25l[26;41H([6C)[50;162H50[26;50H[?25h[?25l[26;30H[46m([20C)[m[50;163H1[26;51H[?25h[?25l[26;11H[46m([m[18C([20C)[46m)[m[50;163H2[26;52H[?25h[?25l    [46m([m[5C([40C)[46m)[m[50;163H3[26;53H[?25h[?25l[24;3H[46m([m[26;5H([47C)[46m)[m[50;163H4[26;54H[?25h[?25l[50;163H5[26;55H[?25h[?25l)[23;1H[46m([m
  ([26;54H)[46m)[m[50;163H6[26;56H[?25h[50;1H[K[26;55H[?25l[50;149H^[[26;55H[50;149H  [26;56H[50;159H88,55[9CBot[26;55H[?25h[?25l[50;149H:[26;55H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 105L, 3174B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:90:0
actual:     '(#t #t #t #t #t #t)
expected:   '(#t #f #f #t #t #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:92:0
actual:     '(#t #t #t #t #t #t)
expected:   '(#t #f #f #t #f #f)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:101:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:102:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:103:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:104:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ ./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 105L, 3174B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;3H([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[2;19H[K[3;1H        [35m'()[m[3;12H[K[4;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[5;15H(greater-than ([36mcdr[m ls) v)))))

(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[8;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[10;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are greater than v[m
([38;5;130mdefine[m (get-greater-than ls (v [31m0[m))
  ([38;5;130mcond[m
    (([36mnull?[m ls) [35m'()[m)
    (([36m>[m ([36mcar[m ls) v)[18;6H([36mcons[m ([36mcar[m ls) (get-greater-than ([36mcdr[m ls) v)))
    ([38;5;130melse[m (get-greater-than ([36mcdr[m ls) v))))

(check-equal? (get-greater-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-greater-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m3[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m1[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m) [35m'([m[31m3[m[35m [m[31m6[m[35m [m[31m8[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m) [35m'([m[31m3[m[35m [m[31m6[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)

[34m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
[106m([m[38;5;130mdefine[m (less-than ls (v [31m0[m))
  ([38;5;130mcond[m
    (([36mnull?[m ls) [35m'()[m)
    ([38;5;130melse[m ([36mcons[m ([36m<[m ([36mcar[m ls)) (less-than ([36mcdr[m ls) v))))[106m)[m

(check-equal? (less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[35;15H[35m'([m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m)[m)
(check-equal? (less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[37;15H[35m'([m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m)[m)
(check-equal? (less-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are less than v[m
([38;5;130mdefine[m (get-less-than ls (v [31m0[m))
  [35m'()[m)

(check-equal? (get-less-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-less-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m-2[m[35m)[m)
(check-equal? (get-less-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m-2[m[35m)[m)
(check-equal? (get-less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m) [35m'([m[31m-1[m[35m [m[31m-3[m[35m [m[31m1[m[35m)[m)
(check-equal? (get-less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m) [35m'([m[31m-1[m[35m [m[31m-3[m[35m)[m)[50;159H88,55[9CBot[32;55H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;3H([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[3;9H[38;5;224m'()[m[4;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[5;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[8;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[10;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  ([93mcond[m
    (([1m[96mnull?[m ls) [38;5;224m'()[m)
    (([1m[96m>[m ([1m[96mcar[m ls) v)[18;6H([1m[96mcons[m ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)))
    ([93melse[m (get-greater-than ([1m[96mcdr[m ls) v))))

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
[46m([m[93mdefine[m (less-than ls (v [95m0[m))
  ([93mcond[m
    (([1m[96mnull?[m ls) [38;5;224m'()[m)
    ([93melse[m ([1m[96mcons[m ([1m[96m<[m ([1m[96mcar[m ls)) (less-than ([1m[96mcdr[m ls) v))))[46m)[m

(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[35;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[37;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)[50;159H88,55[9CBot"lab5-sol.scm" 105L, 3174B[32;55H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;1H[K[50;159H88,55[9CBot[29;55H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H88,55[9CBot[26;55H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H88,55[9CBot[23;55H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H88,55[9CBot[20;55H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H88,55[9CBot[23;55H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[2;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H[K[50;159H88,55[9CBot[26;55H[?25h[?25l[23;1H([26;55H)[50;160H0,27[18;27H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[2;15H(greater-than ([1m[96mcdr[m ls) v)))))[50;159H[K[50;159H80,27[9CBot[21;27H[?25h[?25l[50;160H8,22[29;22H[?25h[?25l[50;163H9[29;29H[?25h[?25l[29;17H[46m([10C)[m[50;163H8[29;28H[?25h[?25l[50;149Hi[29;28H[50;149H [29;28H[50;1H[1m-- INSERT --[m[50;159H[K[50;159H88,28[9CBot[29;28H[?25h[?25l[46m [m) (less-than ([1m[96mcdr[m ls) v)))))[29;28H [46m)[m[50;163H9[29;29H[?25h[?25l[46mv[m) (less-than ([1m[96mcdr[m ls) v)))))[29;29Hv[46m)[m[50;162H30[29;30H[?25h[?25l[28;5H[46m([14C)[m[29;17H([12C)[50;160H7,21[28;21H[?25h[50;1H[K[28;20H[?25l[50;149H^[[28;20H[50;149H  [28;21H[50;159H87,20[9CBot[28;20H[?25h[?25l[50;149H:[28;20H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 105L, 3176B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:101:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:102:0
actual:     '()
expected:   '(-2)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:103:0
actual:     '()
expected:   '(-1 -3 1)
--------------------
--------------------
FAILURE
name:       check-equal?
location:   lab5-sol.scm:104:0
actual:     '()
expected:   '(-1 -3)
--------------------
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ i[Kgit status
[?2004lOn branch lab5
Your branch is up to date with 'origin/lab5'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   lab5-sol.scm[m
	[31mmodified:   lab5.LOG[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ [?2004l
exit

Script done on 2022-03-03 16:37:00-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-03-03 16:38:16-05:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="176" LINES="50"]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ git status./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C[2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?1000h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"lab5-sol.scm" 105L, 3176B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;3H([38;5;130mlambda[m (ls (v [31m0[m))
    ([38;5;130mif[m ([36mnull?[m ls)[2;19H[K[3;1H        [35m'()[m[3;12H[K[4;9H([36mcons[m ([36m>[m ([36mcar[m ls) v)[5;15H(greater-than ([36mcdr[m ls) v)))))

(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[8;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[10;15H[35m'([m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m)[m)
(check-equal? (greater-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are greater than v[m
([38;5;130mdefine[m (get-greater-than ls (v [31m0[m))
  ([38;5;130mcond[m
    (([36mnull?[m ls) [35m'()[m)
    (([36m>[m ([36mcar[m ls) v)[18;6H([36mcons[m ([36mcar[m ls) (get-greater-than ([36mcdr[m ls) v)))
    ([38;5;130melse[m (get-greater-than ([36mcdr[m ls) v))))

(check-equal? (get-greater-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-greater-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m3[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m1[m[35m [m[31m2[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m) [35m'([m[31m3[m[35m [m[31m6[m[35m [m[31m8[m[35m)[m)
(check-equal? (get-greater-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m) [35m'([m[31m3[m[35m [m[31m6[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)

[34m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([38;5;130mdefine[m (less-than ls (v [31m0[m))
  ([38;5;130mcond[m
    [106m([m([36mnull?[m ls) [35m'()[m[106m)[m
    ([38;5;130melse[m ([36mcons[m ([36m<[m ([36mcar[m ls) v) (less-than ([36mcdr[m ls) v)))))

(check-equal? (less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m)[35;15H[35m'([m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#t[m[35m [m[31m#f[m[35m)[m)
(check-equal? (less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m)[37;15H[35m'([m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m [m[31m#t[m[35m [m[31m#f[m[35m [m[31m#f[m[35m)[m)
(check-equal? (less-than [35m'()[m) [35m'()[m)

[34m;; return those elements in list ls which are less than v[m
([38;5;130mdefine[m (get-less-than ls (v [31m0[m))
  [35m'()[m)

(check-equal? (get-less-than [35m'()[m [31m3[m) [35m'()[m)
(check-equal? (get-less-than [35m'([m[31m3[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m [31m1[m) [35m'([m[31m-2[m[35m)[m)
(check-equal? (get-less-than [35m'([m[31m1[m[35m [m[31m2[m[35m [m[31m-2[m[35m)[m) [35m'([m[31m-2[m[35m)[m)
(check-equal? (get-less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m [31m2[m) [35m'([m[31m-1[m[35m [m[31m-3[m[35m [m[31m1[m[35m)[m)
(check-equal? (get-less-than [35m'([m[31m-1[m[35m [m[31m3[m[35m [m[31m6[m[35m [m[31m-3[m[35m [m[31m1[m[35m [m[31m8[m[35m)[m) [35m'([m[31m-1[m[35m [m[31m-3[m[35m)[m)[50;159H87,20[9CBot[31;20H[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;3H([93mlambda[m (ls (v [95m0[m))
    ([93mif[m ([1m[96mnull?[m ls)[3;9H[38;5;224m'()[m[4;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[5;15H(greater-than ([1m[96mcdr[m ls) v)))))

(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[8;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[10;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are greater than v[m
([93mdefine[m (get-greater-than ls (v [95m0[m))
  ([93mcond[m
    (([1m[96mnull?[m ls) [38;5;224m'()[m)
    (([1m[96m>[m ([1m[96mcar[m ls) v)[18;6H([1m[96mcons[m ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)))
    ([93melse[m (get-greater-than ([1m[96mcdr[m ls) v))))

(check-equal? (get-greater-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m8[m[38;5;224m)[m)
(check-equal? (get-greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)

[96m;;map elements of ls to #t or #f depending on whether or not
;;the element is > v or not > v[m
([93mdefine[m (less-than ls (v [95m0[m))
  ([93mcond[m
    [46m([m([1m[96mnull?[m ls) [38;5;224m'()[m[46m)[m
    ([93melse[m ([1m[96mcons[m ([1m[96m<[m ([1m[96mcar[m ls) v) (less-than ([1m[96mcdr[m ls) v)))))

(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[35;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[37;15H[38;5;224m'([m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m)[m)
(check-equal? (less-than [38;5;224m'()[m) [38;5;224m'()[m)

[96m;; return those elements in list ls which are less than v[m
([93mdefine[m (get-less-than ls (v [95m0[m))
  [38;5;224m'()[m)

(check-equal? (get-less-than [38;5;224m'()[m [95m3[m) [38;5;224m'()[m)
(check-equal? (get-less-than [38;5;224m'([m[95m3[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m [95m1[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m1[m[38;5;224m [m[95m2[m[38;5;224m [m[95m-2[m[38;5;224m)[m) [38;5;224m'([m[95m-2[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m)[m)
(check-equal? (get-less-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m) [38;5;224m'([m[95m-1[m[38;5;224m [m[95m-3[m[38;5;224m)[m)[50;159H87,20[9CBot"lab5-sol.scm" 105L, 3176B[31;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;1H[K[50;159H87,20[9CBot[28;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H87,20[9CBot[25;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H87,20[9CBot[22;20H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H87,20[9CBot[19;20H[?25h[?25l    ([14C)[29;1H[46m([30;6H)[m[50;159H98,6 [30;6H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'()[m) [38;5;224m'()[m)[50;159H[K[50;159H98,6[10CBot[33;6H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;1H(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m [95m2[m)[2;15H[38;5;224m'([m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#t[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#f[m[38;5;224m [m[95m#t[m[38;5;224m)[m)
(check-equal? (greater-than [38;5;224m'([m[95m-1[m[38;5;224m [m[95m3[m[38;5;224m [m[95m6[m[38;5;224m [m[95m-3[m[38;5;224m [m[95m1[m[38;5;224m [m[95m8[m[38;5;224m)[m)[50;159H[K[50;159H98,6[10CBot[36;6H[?25h[?25l[1;49r[1;1H[3L[1;50r[1;9H([1m[96mcons[m ([1m[96m>[m ([1m[96mcar[m ls) v)[2;15H(greater-than ([1m[96mcdr[m ls) v)))))[50;159H[K[50;159H98,6[10CBot[39;6H[?25h[?25l[12;3H[46m([16;41H)[m[38;1H([39;6H)[50;159H71,3[12;3H[?25h[?25l[50;149H2[12;4H[48;5;242m([m[16;41H)[50;1H[1m-- VISUAL --[m[50;149H[K[50;149H2[12;4H[50;159H71,4[10CBot[12;4H[?25h[?25l[50;149H3[12;5H[93m[48;5;242mc[m[50;162H5[12;5H[?25h[?25l[50;149H4[12;6H[93m[48;5;242mo[m[50;162H6[12;6H[?25h[?25l[50;149H5[12;7H[93m[48;5;242mn[m[50;162H7[12;7H[?25h[?25l[50;149H6[12;8H[93m[48;5;242md[m[50;162H8[12;8H[?25h[?25l[50;149H2[13;11H[12;8H[48;5;242m 
    (([m[1m[96m[48;5;242mnull[m[1m[96m?[m [50;160H2,11[13;11H[?25h[?25l[3C[1m[96m[48;5;242m?[m[48;5;242m l[m[50;163H4[13;14H[?25h[?25ls[48;5;242ms[m[46m)[m[50;163H5[13;15H[?25h[?25l[2C[48;5;242m) [m[50;163H7[13;17H[?25h[?25l[50;149H3[14;18H[13;17H[38;5;224m[48;5;242m'()[m[48;5;242m) 
    (([m[1m[96m[48;5;242m>[m[48;5;242m ([m[1m[96m[48;5;242mcar[m[48;5;242m ls) [m[50;160H3,18[14;18H[?25h[?25lv[48;5;242mv[m[46m)[m[50;163H9[14;19H[?25h[?25l[1C[48;5;242m)[m[50;162H20[14;20H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[50;149H4[15;31H[14;20H[48;5;242m 
     ([m[1m[96m[48;5;242mcons[m[48;5;242m ([m[1m[96m[48;5;242mcar[m[48;5;242m ls) (get-great[m[50;160H4,31[15;31H[?25h[?25le[48;5;242me[m[50;163H2[15;32H[?25h[?25lr[48;5;242mr[m[50;163H3[15;33H[?25h[?25l-[48;5;242m-[m[50;163H4[15;34H[?25h[?25lt[48;5;242mt[m[50;163H5[15;35H[?25h[?25lh[48;5;242mh[m[50;163H6[15;36H[?25h[?25la[48;5;242ma[m[50;163H7[15;37H[?25h[?25ln[48;5;242mn[m[50;163H8[15;38H[?25h[?25l [48;5;242m [m[46m([6C)[m[50;163H9[15;39H[?25h[?25l[50;149H5[16;40H[15;39H[48;5;242m([m[1m[96m[48;5;242mcdr[m[48;5;242m ls) v))) 
    ([m[93m[48;5;242melse[m[48;5;242m (get-greater-than ([m[1m[96m[48;5;242mcdr[m[48;5;242m ls) v)[m[46m)[m[50;160H5,40[16;40H[?25h[?25l[1C[48;5;242m)[m[46m)[m[50;163H1[16;41H[?25h[?25l[1C[11;1H[46m([m[16;41H[48;5;242m)[m[46m)[m[50;163H2[16;42H[?25h[?25l[?25h[?25l[50;149Hy[16;42H[12;3H([93mcond[m[12;8H[K[13;1H    (([1m[96mnull?[m ls) [38;5;224m'()[m)[13;21H[K[14;1H    (([1m[96m>[m ([1m[96mcar[m ls) v)[14;20H[K[15;1H     ([1m[96mcons[m ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)))[15;52H[K[16;1H    ([93melse[m (get-greater-than ([1m[96mcdr[m ls) v)))[50;1H[K[50;159H71,3[10CBot5 lines yanked[50;159H[K[12;3H[11;1H(
  [46m([16;41H)[m)[50;159H71,3[10CBot[12;3H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;1H[K[50;159H71,3[10CBot[9;3H[?25h[?25l[1;49r[1;1H[3M[1;50r[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H71,3[10CBot[6;3H[?25h[?25l[1;49r[1;1H[3M[1;50r[3;3H([7;41H)[47;1H[94m~                                                                                                                                                                               [48;1H~                                                                                                                                                                               [49;1H~                                                                                                                                                                               [m[50;159H[K[50;159H74,3[10CBot[6;3H[?25h[?25l[29;1H[46m([30;6H)[m[50;159H98,6[30;6H[?25h[?25l[50;149Hi[30;6H[50;149H [30;6H[50;1H[1m-- INSERT --[m[50;159H[K[50;159H98,6[10CBot[30;6H[?25h[?25l[50;162H7[30;7H[?25h[?25l[30;6H[K[29;1H([30;4H[38;5;224m[46m()[m[50;162H6[30;6H[?25h[?25l[30;5H[K[32;1H[38;5;224m([13C([19C)[4C)
([13C([25C)[6C)
([13C([23C)[6C)
([13C([32C)[11C)
([13C([30C)[9C)[30;4H([m[50;162H5[30;5H[?25h[?25l[30;4H[K[32;1H([13C([19C)[4C)
([13C([25C)[6C)
([13C([23C)[6C)
([13C([32C)[11C)
([13C([30C)[9C)[50;162H4[30;4H[?25h[?25l[30;3H[K[50;162H3[30;3H[?25h[50;1H[K[30;2H[?25l[50;149H^[[30;2H[50;149H  [30;3H[50;159H98,2[10CBot[30;2H[?25h[?25l[50;149Hp[30;2H[50;1H4 more lines[50;149H[K[30;3H[31;49r[31;1H[4L[1;50r[30;3H[46m([m[93mcond[m
    (([1m[96mnull?[m ls) [38;5;224m'()[m)
    (([1m[96m>[m ([1m[96mcar[m ls) v)[33;6H([1m[96mcons[m ([1m[96mcar[m ls) (get-greater-than ([1m[96mcdr[m ls) v)))
    ([93melse[m (get-greater-than ([1m[96mcdr[m ls) v))[46m)[m)[50;1H[K[50;159H98,3[10CBot4 more lines[50;159H[K[50;159H98,3[10CBot[30;3H[?25h[?25l([34;41H)[50;160H9,12[31;12H[?25h[?25l[50;160H8,4 [30;4H[?25h[?25l[50;149Hi[30;4H[50;149H [30;4H[50;1H[1m-- INSERT --[m[50;159H[K[50;159H98,4[10CBot[30;4H[?25h[?25l[46m([34;41H)[m[50;162H3[30;3H[?25h[?25l([93m[46mc[m[93mond[m[30;7H[K[30;2H[46m([m[93mc[m[50;162H2[30;2H[?25h[?25l([93m[46mc[m[93mond[m[30;6H[K[30;1H[46m([m[93mc[m[50;162H1[30;1H[?25h[?25l[29;49r[49;1H
[1;50r[29;1H([93mdefine[m (get-less-than ls (v [95m0[m))([93mcond[m
[46m [m[33;41H)[49;1H[94m~                                                                                                                                                                               [m[50;159H[K[50;159H97,33[9CBot[29;33H[46m([m
 [33;41H[46m)[29;33H[?25h[?25l[30;49r[m[30;1H[L[1;50r[29;33H[K[30;3H([93mcond[m[33;41H[1m[96m[46md[m[1m[96mr[m [34;41H)[50;159H[K[50;159H98,3[10CBot[30;3H[46m([m[33;41H[1m[96mdr[m [34;41H[46m)[30;3H[?25h[?25l[m(
    [46m([14C)[m[34;41H)[50;160H9,5[31;5H[?25h[?25l([1C[1m[96mnull?[m ls) [38;5;224m'()[m)[31;20H[K[31;4H[46m([m([13C[46m)[m[50;162H4[31;4H[?25h[?25l([1C[1m[96mnull?[m ls) [38;5;224m'()[m)[31;19H[K[31;3H[46m([m([13C[46m)[m[50;162H3[31;3H[?25h[?25l([1C[1m[96mnull?[m ls) [38;5;224m'()[m)[31;18H[K[31;2H[46m([m([13C[46m)[m[50;162H2[31;2H[?25h[?25l([1C[1m[96mnull?[m ls) [38;5;224m'()[m)[31;17H[K[31;1H[46m([m([13C[46m)[m[50;162H1[31;1H[?25h[?25l[30;49r[49;1H
[1;50r[30;1H  ([93mcond[m(([1m[96mnull?[m ls) [38;5;224m'()[m)
[46m [14C)[m[49;1H[94m~                                                                                                                                                                               [m[50;159H[K[50;159H98,8[10CBot[30;8H[46m([14C)[m
 [14C)[30;8H[?25h[?25l[31;49r[31;1H[L[1;50r[30;8H[K[31;5H(([1m[96mnull?[m ls) [38;5;224m'()[m)[50;159H[K[50;159H99,5[10CBot[31;5H[46m([14C)[m    [?25h[?25l([14C)
    [46m([33;51H)[m[50;159H100,5[32;5H[?25h[?25l([33;51H)[50;161H1,11[33;11H[?25h[?25l[50;164H5[33;15H[?25h[?25l[50;161H0,8 [32;8H[?25h[?25l ([1m[96mcar[m ls) v)[32;19H[K[32;6H[46m([11C)[m[50;163H7[32;7H[?25h[?25l[1m[96m<[m ([1m[96mcar[m ls) [46mv[m)    (([11Cv[50;163H8[32;8H[?25h[?25l[50;161H1,33[33;33H[?25h[?25l-than ([1m[96mcdr[m ls) v)[33;51H[K[50;164H2[33;32H[?25h[?25l-than ([1m[96mcdr[m ls) v)[33;50H[K[50;164H1[33;31H[?25h[?25l-than ([1m[96mcdr[m ls) v)[33;49H[K[50;164H0[33;30H[?25h[?25l-than ([1m[96mcdr[m ls) v)[33;48H[K[50;163H29[33;29H[?25h[?25l-than ([1m[96mcdr[m ls) v)[33;47H[K[50;164H8[33;28H[?25h[?25l-than ([1m[96mcdr[m ls) v)[33;46H[K[50;164H7[33;27H[?25h[?25l-than ([1m[96mcdr[m ls) v)[33;45H[K[50;164H6[33;26H[?25h[?25ll-than ([1m[96mcdr[m ls) v)))[50;164H7[33;27H[?25h[?25le-than ([1m[96mcdr[m ls) v)))[50;164H8[33;28H[?25h[?25ls-than ([1m[96mcdr[m ls) v)))[50;164H9[33;29H[?25h[?25ls-than ([1m[96mcdr[m ls) v)))[50;163H30[33;30H[?25h[?25l[50;163H42[33;42H[?25h[?25l[50;161H2,23[34;23H[?25h[?25l-than ([1m[96mcdr[m ls) v)[34;42H[K[50;164H2[34;22H[?25h[?25l-than ([1m[96mcdr[m ls) v)[34;41H[K[50;164H1[34;21H[?25h[?25l-than ([1m[96mcdr[m ls) v)[34;40H[K[50;164H0[34;20H[?25h[?25l-than ([1m[96mcdr[m ls) v)[34;39H[K[50;163H19[34;19H[?25h[?25l-than ([1m[96mcdr[m ls) v)[34;38H[K[50;164H8[34;18H[?25h[?25l-than ([1m[96mcdr[m ls) v)[34;37H[K[50;164H7[34;17H[?25h[?25l-than ([1m[96mcdr[m ls) v)[34;36H[K[50;164H6[34;16H[?25h[?25ll-than ([1m[96mcdr[m ls) v))))[50;164H7[34;17H[?25h[?25le-than ([1m[96mcdr[m ls) v))))[50;164H8[34;18H[?25h[?25ls-than ([1m[96mcdr[m ls) v))))[50;164H9[34;19H[?25h[?25ls-than ([1m[96mcdr[m ls) v))))[50;163H20[34;20H[?25h[?25l[50;163H31[34;31H[?25h[?25l[29;1H[46m([34;39H)[m[50;163H40[34;40H[?25h[50;1H[K[34;39H[?25l[50;149H^[[34;39H[50;149H  [34;40H[50;159H102,39[8CBot[34;39H[?25h[?25l[50;149H:[34;39H[50;149H[K[50;1H:[?25hx[?25l[?1006l[?1002l[?2004l[>4;m"lab5-sol.scm" 109L, 3307B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ vim lab5-sol.scm [7Pgit status./lab5-sol.scm [2@vim [C[C[C[C[C[C[C[C[C[C[C[C[C[2P./[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ [?2004l
exit

Script done on 2022-03-03 16:43:05-05:00 [COMMAND_EXIT_CODE="0"]
