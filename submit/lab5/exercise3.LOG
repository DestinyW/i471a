Script started on 2022-03-03 16:43:18-05:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="176" LINES="50"]
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ racket
[?2004lWelcome to Racket v7.9 [bc].
> (map (lambda (n) (> n  2)) '(-1 3 6 -3 1 8))
'(#f #t #t #f #f #t)
> (map (lambda (n) (> n  0)) '(-1 3 6 -3 1 8))
'(#f #t #t #f #t #t)
> > (map (lambda (n) (> n  0)) '(-1 3 6 -3 1 8))[21G[P [21G[1@< 
'(#t #f #f #t #f #f)
> > (map (lambda (n) (< n  0)) '(-1 3 6 -3 1 8))[21G>[47G[21G[P [21G[1@< 
'(#t #f #f #t #f #f)
> > (map (lambda (n) (< n  0)) '(-1 3 6 -3 1 8))[21G>[47G[26G2[47G[21G[P [21G[1@< 
'(#t #f #f #t #t #f)
> (map
  (lan[6G[Kmbda[9G[K[8G[K[7G[Kbda (n)
  (integer? (/ n 2)) '(1 2 3 4 5))
  )
; map: arity mismatch;
;  the expected number of arguments does not match the given number
;   expected: at least 2
;   given: 1
; [,bt for context]
> > (map
  (lambda (n)
  (integer? (/ n 2)) '(1 2 3 4 5))
  ) )[K)[K[A[35G)
[K[A[35G [P([P([A[14G(integer? (/ n 2)) '(1 2 3 4 5)))
[K[A[14G[14G[1@ ( [P([P([A[7G(lambda (n) (integer? (/ n 2)) '(1 2 3 4 5)))
[K[A[7G[7G[1@ ((lambda (n) (integer? (/ n 2)) '(1 2 3 4 5))[38G[1@)  '(1 2 3 4 5))[53G[K
'(#f #t #f #t #f)
> > (map (lambda (n) (integer? (/ n 2))) '(1 2 3 4 5)))[38G[P [37G[P [35G[P)[34G[P)[33G[P)[32G[P)[31G[P)[30G[P)[29G[P)[28G[P)[27G[P)[26G[P)[25G[P)[24G[P)[23G[P)[22G[P)[21G[P)[21G[1@*)[22G[1@ )[23G[1@n)[24G[1@ )[25G[1@n)[27G[1@) ) '(1 2 3 4 5))
'(1 4 9 16 25)
> (filter (lambda (n) (> n  2)) '(-1 3 6 -3 1 8))
'(3 6 8)
> > (filter (lambda (n) (> n  2)) '(-1 3 6 -3 1 8))[24G[P [24G[1@< 
'(-1 -3 1)
> > (filter (lambda (n) (< n  2)) '(-1 3 6 -3 1 8))) '(-1 3 6 -3 1 8[47G))[K[46G))[K[45G))[K[44G))[K[43G))[K[42G))[K[41G))[K[40G))[K[39G))[K[38G))[K[37G))[K[36G))[K[35G))[K[35G1))[36G ))[37G2))[38G ))[39G3))[40G ))[41G4))[42G ))[43G5))[31G[P [29G[P)[28G[P)[27G[P)[26G[P)[25G[P)[24G[P)[25G[1@) [24G[1@n)[25G[1@o)[26G[1@t)[26G[P)[25G[P)[24G[P)[24G[1@()[25G[1@n)[26G[1@o)[27G[1@t)[28G[1@ )[29G[1@()[30G[1@i)[31G[1@n)[32G[1@t)[33G[1@e)[34G[1@g)[35G[1@e)[36G[1@r)[37G[1@?))[38G[1@ )[39G[1@()[40G[1@/)[41G[1@ )[42G[1@n)[43G[1@ )[44G[1@2)[47G[1@) ))) '(1 2 3 4 5))
  )
  )
; filter: arity mismatch;
;  the expected number of arguments does not match the given number
;   expected: 2
;   given: 1
; [,bt for context]
> > (filter (lambda (n) ((not (integer? (/ n 2))) '(1 2 3 4 5))
  )
  )[2A[24G< n  2)) '(-1 3 6 -3 1 8))[K
[K
[K[2A[50G[24G(not (integer? (/ n 2))) '(1 2 3 4 5))
  )
  ))  [K [K[A  )  [K [K[A[62G[24G[Pnnot (integer? (/ n 2))[46G[P )[46G[1@) [47G[1@) 
'(1 3 5)
> (foldl (lambda (a acc) (+ acc a)) 0 '(1 2 3 4 5))
15
> (foldl (lambda (a acc) (+ acc a)) 7 '(1 2 3 4 5))
22
> (foldl (lambda (a acc) (* a acc)) 1 '(1 2 3 4 5))
120
> (foldl (lambda (a acc) (- acc a)) 0 '(1 2 3 4 5))
-15
> (foldl (lambda (a acc) (- a acc)) 0 '(1 2 3 4 5))
3
> > (foldl (lambda (a acc) (- a acc)) 0 '(1 2 3 4 5))[27G[P [27G[1@*  a acc)) 0[30G[Pa[30G[Pcacc[32G[1@ )[33G[1@a))) 0 [37G[P [37G[1@2  '(1 2 3 4 5)[49G))[K[48G))[K[47G))[K[46G))[K[45G))[K[44G))[K[43G))[K[42G))[K[41G))[K[41G2))[42G ))[43G2))[44G ))[45G2))
16
> > (foldl (lambda (a acc) (* acc a)) 2 '(2 2 2))2 2[45G))[K[44G))[K[43G))[K[42G))[K[41G))[K[41G1))[42G ))[43G2))[44G ))[45G3))[46G ))[47G4))[48G ))[49G5))[27G[P [27G[1@c [28G[1@o [29G[1@n [30G[1@s  [32G[1@(aacc a[40G[1@) [34G[1@ac[34G[1@ aacc a[39G[P)[38G[P))
; application: not a procedure;
;  expected a procedure that can be applied to arguments
;   given: 1
; [,bt for context]
> > (foldl (lambda (a acc) (cons (a acc))) 2 '(1 2 3 4 5))[32G[Paa acc))[39G[P 
'(5 4 3 2 1 . 2)
> > (foldl (lambda (a acc) (cons a acc)) 2 '(1 2 3 4 5))[40G[P [40G[1@' [41G[1@( [42G[1@) 
'(5 4 3 2 1)
> (map (map ) (map ))[13G[1@()[14G[1@()[15G[1@l)[16G[1@a)[17G[1@m)[18G[1@b)[19G[1@d)[20G[1@a)[21G[1@ )[22G[1@()[23G[1@n)[25G[1@) [25G[1@ )[26G[1@()[27G[1@+)[28G[1@ )[29G[1@n)[30G[1@ )[31G[1@n)[33G[1@) [34G[1@) )[34G[1@ )[35G[1@()[36G[1@1)[37G[1@ )[37G[P)[36G[P)[35G[P)[35G[1@')[36G[1@()[37G[1@1)[38G[1@ )[39G[1@2)[40G[1@ )[41G[1@3)[42G[1@ )[43G[1@4)[44G[1@ )[45G[1@5)[47G[1@) ) (map [54G())[55Gl))[56Ga))[57Gm))[58Gb))[59Gd))[60Ga))[61G ))[62G())[63Gn))[66G)[65G ))[66G())[67G*))[68G ))[69Gn))[70G ))[71Gn))[74G)[75G)[76G))[74G )))[75G')))[76G()))[80G)[77G1))))[78G ))))[79G2))))[80G ))))[81G3))))[82G ))))[83G4))))[84G ))))[85G5))))
; +: contract violation
;   expected: number?
;   given: '(1 2 3 4 5)
;   argument position: 1st
; [,bt for context]
> > (map (map ((lambda (n) (+ n n)) '(1 2 3 4 5)) (map (lambda (n) (* n n)) '(1 2 3 4 5))))(map ((((lambda (n) (+ n n)p ([14G[Pl(lambda (n) (+ n n)) '(1 2 3 4 5))) (map (lambda (n) (* n n)))) '(1 2 3 4 5))5))))[88G[K[87G[K
  )
; map: contract violation
;   expected: procedure?
;   given: '(2 4 6 8 10)
; [,bt for context]
> > (map (map (lambda (n) (+ n n)) '(1 2 3 4 5)) (map (lambda (n) (* n n)) '(1 2 3 4 5))
  )  )[K)[K[A[87G)
[K[A[87G[6G[P > (m[P > ([P > ([1@a > (a[1@p [6G[1@p [7G[1@e [8G[1@n [9G[1@d 
'(2 4 6 8 10 1 4 9 16 25)
> > (append (map (lambda (n) (+ n n)) '(1 2 3 4 5)) (map (lambda (n) (* n n)) '(1 2 3 4 5)))[12G[1@(m[12G[1@l([13G[1@i([14G[1@s([15G[1@ ([15G[1@t  (map (lambda (n) (+ n n)) '(1 2 3 4 5))[56G[1@)  [59G[1@(m[59G[1@l([60G[1@i([61G[1@s([62G[1@t([63G[1@ ((map (lambda (n) (* n n)) '(1 2 3 4 5))[104G)
'((2 4 6 8 10) (1 4 9 16 25))
> (exit)
[?2004hdwalcot1@remote00:~/i471a/submit/lab5$ [?2004l
exit

Script done on 2022-03-03 17:08:48-05:00 [COMMAND_EXIT_CODE="0"]
